{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"order-management\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  key: 1\n};\nconst _hoisted_7 = {\n  key: 2,\n  class: \"dialog-overlay\"\n};\nconst _hoisted_8 = {\n  class: \"dialog\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"订单管理\", -1 /* HOISTED */)), $data.orders.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"table\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"订单 ID\"), _createElementVNode(\"th\", null, \"用户\"), _createElementVNode(\"th\", null, \"邮箱\"), _createElementVNode(\"th\", null, \"总价格\"), _createElementVNode(\"th\", null, \"创建时间\"), _createElementVNode(\"th\", null, \"状态\"), _createElementVNode(\"th\", null, \"详细内容\"), _createElementVNode(\"th\", null, \"操作\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.orders, order => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: order.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(order.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.username), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.email), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.total_price) + \" 元\", 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatDate(order.created_at)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.status), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(order.items, item => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: item.menu_item_id\n      }, _toDisplayString(item.name) + \" (\" + _toDisplayString(item.quantity) + \"): \" + _toDisplayString(item.total) + \" 元 \", 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"td\", null, [order.status === 'pending' ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      onClick: $event => $options.handleButtonClick(order, 'confirmed')\n    }, \"确定订单\", 8 /* PROPS */, _hoisted_3)) : _createCommentVNode(\"v-if\", true), order.status === 'confirmed' ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 1,\n      onClick: $event => $options.handleButtonClick(order, 'completed')\n    }, \"完成订单\", 8 /* PROPS */, _hoisted_4)) : _createCommentVNode(\"v-if\", true), order.status === 'completed' ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 2,\n      onClick: $event => $options.handleButtonClick(order, 'deleted')\n    }, \"删除订单\", 8 /* PROPS */, _hoisted_5)) : _createCommentVNode(\"v-if\", true)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _cache[2] || (_cache[2] = [_createElementVNode(\"p\", null, \"没有找到订单。\", -1 /* HOISTED */)]))), _createCommentVNode(\" 对话框 \"), $data.showDialog ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"p\", null, _toDisplayString($data.dialogMessage), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.closeDialog && $options.closeDialog(...args))\n  }, \"确定\")])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$data","orders","length","_hoisted_2","_Fragment","_renderList","order","id","_toDisplayString","username","email","total_price","$options","formatDate","created_at","status","items","item","menu_item_id","name","quantity","total","onClick","$event","handleButtonClick","_hoisted_3","_createCommentVNode","_hoisted_4","_hoisted_5","_hoisted_6","_cache","showDialog","_hoisted_7","_hoisted_8","dialogMessage","args","closeDialog"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\OrderManagement.vue"],"sourcesContent":["<template>\n    <div class=\"order-management\">\n      <h2>订单管理</h2>\n  \n      <div v-if=\"orders.length > 0\">\n        <table>\n          <thead>\n            <tr>\n              <th>订单 ID</th>\n              <th>用户</th>\n              <th>邮箱</th>\n              <th>总价格</th>\n              <th>创建时间</th>\n              <th>状态</th>\n              <th>详细内容</th>\n              <th>操作</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"order in orders\" :key=\"order.id\">\n              <td>{{ order.id }}</td>\n              <td>{{ order.username }}</td>\n              <td>{{ order.email }}</td>\n              <td>{{ order.total_price }} 元</td>\n              <td>{{ formatDate(order.created_at) }}</td>\n              <td>{{ order.status }}</td>\n              <td>\n                <ul>\n                  <li v-for=\"item in order.items\" :key=\"item.menu_item_id\">\n                    {{ item.name }} ({{ item.quantity }}): {{ item.total }} 元\n                  </li>\n                </ul>\n              </td>\n              <td>\n                <button \n                  v-if=\"order.status === 'pending'\" \n                  @click=\"handleButtonClick(order, 'confirmed')\"\n                >确定订单</button>\n  \n                <button \n                  v-if=\"order.status === 'confirmed'\" \n                  @click=\"handleButtonClick(order, 'completed')\"\n                >完成订单</button>\n  \n                <button \n                  v-if=\"order.status === 'completed'\" \n                  @click=\"handleButtonClick(order, 'deleted')\"\n                >删除订单</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n  \n      <div v-else>\n        <p>没有找到订单。</p>\n      </div>\n\n      <!-- 对话框 -->\n      <div v-if=\"showDialog\" class=\"dialog-overlay\">\n        <div class=\"dialog\">\n          <p>{{ dialogMessage }}</p>\n          <button @click=\"closeDialog\">确定</button>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  const API = process.env.VUE_APP_API_URL;\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        orders: [], // 存储所有订单信息\n        showDialog: false,\n        dialogMessage: '',\n        lastActionTime: 0 // 记录上一次操作的时间戳\n      };\n    },\n    mounted() {\n      this.fetchOrders(); // 加载所有订单\n    },\n    methods: {\n      async fetchOrders() {\n        try {\n          const response = await axios.get(`${API}/orders/all`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('authToken')}`\n            }\n          });\n          this.orders = (response.data.orders || response.data || []).map(order => ({ \n            ...order, \n            lastActionTime: 0 \n          }));\n          \n          if (this.orders.length === 0) {\n            this.showDialog = true;\n            this.dialogMessage = '暂无订单记录';\n          }\n        } catch (error) {\n          console.error('获取订单列表失败:', error);\n          if (error.response?.status === 403) {\n            this.showDialog = true;\n            this.dialogMessage = '您没有权限访问订单管理';\n          } else {\n            this.showDialog = true;\n            this.dialogMessage = '获取订单列表失败，请重试';\n          }\n        }\n      },\n      handleButtonClick(order, newStatus) {\n        const currentTime = Date.now();\n        const timeElapsed = currentTime - order.lastActionTime;\n        const delay = 2 * 60 * 1000; // 2分钟\n  \n        if (timeElapsed < delay) {\n          // 弹出对话框提示操作太频繁\n          this.dialogMessage = '操作太频繁，请稍后再试';\n          this.showDialog = true;\n          return;\n        }\n  \n        const actionFn = async () => {\n          try {\n            if (newStatus === 'deleted') {\n              await this.deleteOrder(order.id);\n            } else {\n              await this.updateOrderStatus(order, newStatus);\n            }\n          } catch (error) {\n            console.error('操作失败:', error);\n          }\n        };\n  \n        order.lastActionTime = currentTime; // 更新订单的上一次操作时间\n        actionFn();\n      },\n      async updateOrderStatus(order, status) {\n        try {\n          await axios.put(\n            `${API}/canteen/orders/${order.id}`, \n            { status }, \n            {\n              headers: {\n                Authorization: `Bearer ${localStorage.getItem('authToken')}`\n              }\n            }\n          );\n          alert('订单状态已更新');\n          order.status = status; // 更新本地状态以避免重新获取\n        } catch (error) {\n          console.error('更新订单状态失败:', error);\n          alert('更新订单状态失败，请重试。');\n        }\n      },\n      async deleteOrder(orderId) {\n        try {\n          await axios.delete(`${API}/canteen/orders/${orderId}`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('authToken')}`\n            }\n          });\n          alert('订单已删除');\n          this.orders = this.orders.filter(order => order.id !== orderId); // 更新本地订单列表\n        } catch (error) {\n          console.error('删除订单失败:', error);\n          alert('删除订单失败，请重试。');\n        }\n      },\n      closeDialog() {\n        this.showDialog = false;\n        this.dialogMessage = '';\n      },\n      formatDate(dateString) {\n        const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n        return new Date(dateString).toLocaleDateString('zh-CN', options);\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .order-management {\n    padding: 20px;\n  }\n  table {\n    width: 100%;\n    border-collapse: collapse;\n  }\n  th, td {\n    border: 1px solid #ddd;\n    padding: 8px;\n  }\n  th {\n    background-color: #f2f2f2;\n  }\n  button {\n    background-color: #4CAF50;\n    color: white;\n    border: none;\n    padding: 5px 10px;\n    cursor: pointer;\n    border-radius: 3px;\n    margin-right: 5px;\n  }\n  button[disabled] {\n    background-color: #ddd;\n    cursor: not-allowed;\n  }\n  button:hover:not([disabled]) {\n    background-color: #45a049;\n  }\n  .dialog-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.5);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .dialog {\n    background: white;\n    padding: 20px;\n    border-radius: 8px;\n    text-align: center;\n  }\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}