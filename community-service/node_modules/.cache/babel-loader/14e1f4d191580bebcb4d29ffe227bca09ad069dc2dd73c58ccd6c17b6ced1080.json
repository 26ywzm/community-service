{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"管理投票\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.votes, vote => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: vote.id\n    }, [_createElementVNode(\"h3\", null, _toDisplayString(vote.title), 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteVote(vote.id)\n    }, \"删除投票\", 8 /* PROPS */, _hoisted_1)]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.createNewVote && $options.createNewVote(...args))\n  }, \"创建新投票\")]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_Fragment","_renderList","$data","votes","vote","key","id","_toDisplayString","title","onClick","$event","$options","deleteVote","_hoisted_1","_cache","args","createNewVote"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\AdminManageVotes.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h2>管理投票</h2>\r\n      <div v-for=\"vote in votes\" :key=\"vote.id\">\r\n        <h3>{{ vote.title }}</h3>\r\n        <button @click=\"deleteVote(vote.id)\">删除投票</button>\r\n      </div>\r\n      <button @click=\"createNewVote\">创建新投票</button>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  const API = process.env.VUE_APP_API_URL;\r\n  export default {\r\n    data() {\r\n      return {\r\n        votes: [], // 投票列表\r\n      };\r\n    },\r\n    mounted() {\r\n      this.fetchVotes(); // 获取投票列表\r\n    },\r\n    methods: {\r\n      async fetchVotes() {\r\n        try {\r\n          const response = await axios.get(`${API}/api/canteen/votes`);\r\n          this.votes = response.data;\r\n        } catch (error) {\r\n          console.error('获取投票失败:', error);\r\n        }\r\n      },\r\n  \r\n      async deleteVote(voteId) {\r\n        try {\r\n          await axios.delete(`http://localhost:3000/api/auth/votes/${voteId}`);\r\n          alert('投票删除成功');\r\n          this.fetchVotes(); // 刷新投票列表\r\n        } catch (error) {\r\n          console.error('删除投票失败:', error);\r\n          alert('删除投票失败');\r\n        }\r\n      },\r\n  \r\n      createNewVote() {\r\n        this.$router.push('/create-vote'); // 跳转到创建投票页面\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* 样式代码 */\r\n  </style>\r\n  "],"mappings":";mBAAA;;uBACIA,mBAAA,CAOM,c,0BANJC,mBAAA,CAAa,YAAT,MAAI,uB,kBACRD,mBAAA,CAGME,SAAA,QANZC,WAAA,CAG0BC,KAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAhBN,mBAAA,CAGM;MAHsBO,GAAG,EAAED,IAAI,CAACE;QACpCP,mBAAA,CAAyB,YAAAQ,gBAAA,CAAlBH,IAAI,CAACI,KAAK,kBACjBT,mBAAA,CAAkD;MAAzCU,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU,CAACR,IAAI,CAACE,EAAE;OAAG,MAAI,iBALjDO,UAAA,E;kCAOMd,mBAAA,CAA6C;IAApCU,OAAK,EAAAK,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEJ,QAAA,CAAAK,aAAA,IAAAL,QAAA,CAAAK,aAAA,IAAAD,IAAA,CAAa;KAAE,OAAK,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}