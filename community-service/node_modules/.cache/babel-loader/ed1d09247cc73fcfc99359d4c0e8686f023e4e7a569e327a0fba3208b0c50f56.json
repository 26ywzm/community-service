{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      menuItems: [],\n      // 菜单数据\n      cart: [] // 购物车数据\n    };\n  },\n  mounted() {\n    this.fetchMenuItems(); // 加载可用的菜单项\n  },\n  methods: {\n    async fetchMenuItems() {\n      try {\n        const response = await axios.get('http://localhost:3000/api/auth/canteen/menu'); // 请求可用菜单项\n        this.menuItems = response.data.map(item => ({\n          ...item,\n          quantity: 1\n        })); // 添加 quantity 字段并设置默认值为1\n      } catch (error) {\n        console.error('获取菜单失败:', error);\n      }\n    },\n    addToCart(item) {\n      // 检查购物车中是否已经存在该菜品\n      const existingItem = this.cart.find(cartItem => cartItem.id === item.id);\n      if (existingItem) {\n        existingItem.quantity += item.quantity; // 更新数量\n      } else {\n        this.cart.push({\n          ...item\n        }); // 将菜品添加到购物车\n      }\n      item.quantity = 1; // 重置输入框为1\n      alert(`${item.name} 已加入购物车！`);\n    },\n    removeFromCart(index) {\n      this.cart.splice(index, 1); // 从购物车中删除指定索引的菜品\n      alert('菜品已从购物车中删除！');\n    },\n    async checkout() {\n      const orders = this.cart.map(cartItem => ({\n        menu_item_id: cartItem.id,\n        quantity: cartItem.quantity,\n        price: cartItem.price // 确保 price 字段有效\n      }));\n      if (orders.length === 0) {\n        alert('请至少选择一项菜品！');\n        return;\n      }\n      try {\n        const response = await axios.post('http://localhost:3000/api/auth/canteen/order', {\n          items: orders\n        }, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('authToken')}`\n          }\n        });\n        alert(response.data.message || '结账成功！');\n        this.$router.push(`/order-detail/${response.data.orderId}`);\n      } catch (error) {\n        console.error('结账失败:', error);\n        alert('结账失败，请重试。');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","menuItems","cart","mounted","fetchMenuItems","methods","response","get","map","item","quantity","error","console","addToCart","existingItem","find","cartItem","id","push","alert","name","removeFromCart","index","splice","checkout","orders","menu_item_id","price","length","post","items","headers","Authorization","localStorage","getItem","message","$router","orderId"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\CanteenOrder.vue"],"sourcesContent":["<template>\r\n  <div class=\"canteen-order\">\r\n    <h2>社区食堂</h2>\r\n\r\n    <!-- 菜品列表 -->\r\n    <div v-if=\"menuItems.length > 0\">\r\n      <div v-for=\"item in menuItems\" :key=\"item.id\" class=\"menu-item\">\r\n        <img :src=\"item.image_url\" alt=\"菜品图片\" />\r\n        <h3>{{ item.name }}</h3>\r\n        <p>{{ item.description }}</p>\r\n        <p>价格: {{ item.price }} 元</p>\r\n\r\n        <!-- 订餐数量输入框 -->\r\n        <input type=\"number\" v-model.number=\"item.quantity\" min=\"1\" placeholder=\"订购数量\" />\r\n\r\n        <!-- 加入购物车按钮 -->\r\n        <button @click=\"addToCart(item)\">加入购物车</button>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-else>\r\n      <p>目前没有可用的菜品。</p>\r\n    </div>\r\n\r\n    <!-- 购物车 -->\r\n    <div v-if=\"cart.length > 0\">\r\n      <h3>购物车</h3>\r\n      <ul>\r\n        <li v-for=\"(cartItem, index) in cart\" :key=\"cartItem.id\">\r\n          {{ cartItem.name }} ({{ cartItem.quantity }}): {{ cartItem.price * cartItem.quantity }} 元\r\n          <button @click=\"removeFromCart(index)\">删除</button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <!-- 结账按钮 -->\r\n    <button @click=\"checkout\">结账</button>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      menuItems: [], // 菜单数据\r\n      cart: [] // 购物车数据\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchMenuItems(); // 加载可用的菜单项\r\n  },\r\n  methods: {\r\n    async fetchMenuItems() {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/api/auth/canteen/menu'); // 请求可用菜单项\r\n        this.menuItems = response.data.map(item => ({ ...item, quantity: 1 })); // 添加 quantity 字段并设置默认值为1\r\n      } catch (error) {\r\n        console.error('获取菜单失败:', error);\r\n      }\r\n    },\r\n\r\n    addToCart(item) {\r\n      // 检查购物车中是否已经存在该菜品\r\n      const existingItem = this.cart.find(cartItem => cartItem.id === item.id);\r\n      if (existingItem) {\r\n        existingItem.quantity += item.quantity; // 更新数量\r\n      } else {\r\n        this.cart.push({ ...item }); // 将菜品添加到购物车\r\n      }\r\n      item.quantity = 1; // 重置输入框为1\r\n      alert(`${item.name} 已加入购物车！`);\r\n    },\r\n\r\n    removeFromCart(index) {\r\n      this.cart.splice(index, 1); // 从购物车中删除指定索引的菜品\r\n      alert('菜品已从购物车中删除！');\r\n    },\r\n\r\n    async checkout() {\r\n  const orders = this.cart.map(cartItem => ({\r\n    menu_item_id: cartItem.id,\r\n    quantity: cartItem.quantity,\r\n    price: cartItem.price // 确保 price 字段有效\r\n  }));\r\n\r\n  if (orders.length === 0) {\r\n    alert('请至少选择一项菜品！');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await axios.post(\r\n      'http://localhost:3000/api/auth/canteen/order',\r\n      { items: orders },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('authToken')}`,\r\n        }\r\n      }\r\n    );\r\n    alert(response.data.message || '结账成功！');\r\n    this.$router.push(`/order-detail/${response.data.orderId}`);\r\n  } catch (error) {\r\n    console.error('结账失败:', error);\r\n    alert('结账失败，请重试。');\r\n  }\r\n}\r\n\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.canteen-order {\r\n  padding: 20px;\r\n}\r\n\r\n.menu-item {\r\n  border: 1px solid #ccc;\r\n  padding: 10px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\nimg {\r\n  max-width: 100px;\r\n  margin-right: 20px;\r\n}\r\n\r\nbutton {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #45a049;\r\n}\r\n</style>"],"mappings":";AA0CA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MAAE;MACfC,IAAI,EAAE,EAAC,CAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,cAAc,CAAC,CAAC,EAAE;EACzB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMP,KAAK,CAACQ,GAAG,CAAC,6CAA6C,CAAC,EAAE;QACjF,IAAI,CAACN,SAAQ,GAAIK,QAAQ,CAACN,IAAI,CAACQ,GAAG,CAACC,IAAG,KAAM;UAAE,GAAGA,IAAI;UAAEC,QAAQ,EAAE;QAAE,CAAC,CAAC,CAAC,EAAE;MAC1E,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;MACjC;IACF,CAAC;IAEDE,SAASA,CAACJ,IAAI,EAAE;MACd;MACA,MAAMK,YAAW,GAAI,IAAI,CAACZ,IAAI,CAACa,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,EAAC,KAAMR,IAAI,CAACQ,EAAE,CAAC;MACxE,IAAIH,YAAY,EAAE;QAChBA,YAAY,CAACJ,QAAO,IAAKD,IAAI,CAACC,QAAQ,EAAE;MAC1C,OAAO;QACL,IAAI,CAACR,IAAI,CAACgB,IAAI,CAAC;UAAE,GAAGT;QAAK,CAAC,CAAC,EAAE;MAC/B;MACAA,IAAI,CAACC,QAAO,GAAI,CAAC,EAAE;MACnBS,KAAK,CAAC,GAAGV,IAAI,CAACW,IAAI,UAAU,CAAC;IAC/B,CAAC;IAEDC,cAAcA,CAACC,KAAK,EAAE;MACpB,IAAI,CAACpB,IAAI,CAACqB,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC,EAAE;MAC5BH,KAAK,CAAC,aAAa,CAAC;IACtB,CAAC;IAED,MAAMK,QAAQA,CAAA,EAAG;MACnB,MAAMC,MAAK,GAAI,IAAI,CAACvB,IAAI,CAACM,GAAG,CAACQ,QAAO,KAAM;QACxCU,YAAY,EAAEV,QAAQ,CAACC,EAAE;QACzBP,QAAQ,EAAEM,QAAQ,CAACN,QAAQ;QAC3BiB,KAAK,EAAEX,QAAQ,CAACW,KAAI,CAAE;MACxB,CAAC,CAAC,CAAC;MAEH,IAAIF,MAAM,CAACG,MAAK,KAAM,CAAC,EAAE;QACvBT,KAAK,CAAC,YAAY,CAAC;QACnB;MACF;MAEA,IAAI;QACF,MAAMb,QAAO,GAAI,MAAMP,KAAK,CAAC8B,IAAI,CAC/B,8CAA8C,EAC9C;UAAEC,KAAK,EAAEL;QAAO,CAAC,EACjB;UACEM,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;UAC5D;QACF,CACF,CAAC;QACDf,KAAK,CAACb,QAAQ,CAACN,IAAI,CAACmC,OAAM,IAAK,OAAO,CAAC;QACvC,IAAI,CAACC,OAAO,CAAClB,IAAI,CAAC,iBAAiBZ,QAAQ,CAACN,IAAI,CAACqC,OAAO,EAAE,CAAC;MAC7D,EAAE,OAAO1B,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;QAC7BQ,KAAK,CAAC,WAAW,CAAC;MACpB;IACF;EAEE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}