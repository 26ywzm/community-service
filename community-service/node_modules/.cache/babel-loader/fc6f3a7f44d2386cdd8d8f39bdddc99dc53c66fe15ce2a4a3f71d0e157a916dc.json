{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"order-management\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"订单管理\", -1 /* HOISTED */)), _createElementVNode(\"table\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"用户\"), _createElementVNode(\"th\", null, \"菜品\"), _createElementVNode(\"th\", null, \"数量\"), _createElementVNode(\"th\", null, \"总价\"), _createElementVNode(\"th\", null, \"状态\"), _createElementVNode(\"th\", null, \"操作\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.orders, order => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: order.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(order.username), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.menu_item_name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.quantity), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.total_price) + \" 元\", 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.status), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.updateStatus(order.id, 'confirmed')\n    }, \"确认\", 8 /* PROPS */, _hoisted_2), _createElementVNode(\"button\", {\n      onClick: $event => $options.updateStatus(order.id, 'completed')\n    }, \"完成\", 8 /* PROPS */, _hoisted_3)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_Fragment","_renderList","$data","orders","order","key","id","_toDisplayString","username","menu_item_name","quantity","total_price","status","onClick","$event","$options","updateStatus","_hoisted_2","_hoisted_3"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\OrderManagement.vue"],"sourcesContent":["<template>\r\n    <div class=\"order-management\">\r\n      <h2>订单管理</h2>\r\n  \r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>用户</th>\r\n            <th>菜品</th>\r\n            <th>数量</th>\r\n            <th>总价</th>\r\n            <th>状态</th>\r\n            <th>操作</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"order in orders\" :key=\"order.id\">\r\n            <td>{{ order.username }}</td>\r\n            <td>{{ order.menu_item_name }}</td>\r\n            <td>{{ order.quantity }}</td>\r\n            <td>{{ order.total_price }} 元</td>\r\n            <td>{{ order.status }}</td>\r\n            <td>\r\n              <button @click=\"updateStatus(order.id, 'confirmed')\">确认</button>\r\n              <button @click=\"updateStatus(order.id, 'completed')\">完成</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        orders: [] // 订单列表\r\n      };\r\n    },\r\n    mounted() {\r\n      this.fetchOrders(); // 加载订单\r\n    },\r\n    methods: {\r\n      async fetchOrders() {\r\n        try {\r\n          const response = await axios.get('http://localhost:3000/api/auth/canteen/orders');\r\n          this.orders = response.data;\r\n        } catch (error) {\r\n          console.error('获取订单失败:', error);\r\n        }\r\n      },\r\n      async updateStatus(orderId, status) {\r\n        try {\r\n          await axios.put(`http://localhost:3000/api/auth/canteen/orders/${orderId}/status`, { status });\r\n          this.fetchOrders(); // 刷新订单列表\r\n        } catch (error) {\r\n          console.error('更新订单状态失败:', error);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .order-management {\r\n    padding: 20px;\r\n  }\r\n  \r\n  table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n  \r\n  th, td {\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n  }\r\n  \r\n  button {\r\n    margin-right: 10px;\r\n    padding: 5px;\r\n  }\r\n  </style>\r\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAkB;mBADjC;mBAAA;;uBACIC,mBAAA,CA4BM,OA5BNC,UA4BM,G,0BA3BJC,mBAAA,CAAa,YAAT,MAAI,sBAERA,mBAAA,CAwBQ,gB,0BAvBNA,mBAAA,CASQ,gBARNA,mBAAA,CAOK,aANHA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAW,YAAP,IAAE,E,wBAGVA,mBAAA,CAYQ,iB,kBAXNF,mBAAA,CAUKG,SAAA,QA1BfC,WAAA,CAgB8BC,KAAA,CAAAC,MAAM,EAAfC,KAAK;yBAAhBP,mBAAA,CAUK;MAVwBQ,GAAG,EAAED,KAAK,CAACE;QACtCP,mBAAA,CAA6B,YAAAQ,gBAAA,CAAtBH,KAAK,CAACI,QAAQ,kBACrBT,mBAAA,CAAmC,YAAAQ,gBAAA,CAA5BH,KAAK,CAACK,cAAc,kBAC3BV,mBAAA,CAA6B,YAAAQ,gBAAA,CAAtBH,KAAK,CAACM,QAAQ,kBACrBX,mBAAA,CAAkC,YAAAQ,gBAAA,CAA3BH,KAAK,CAACO,WAAW,IAAG,IAAE,iBAC7BZ,mBAAA,CAA2B,YAAAQ,gBAAA,CAApBH,KAAK,CAACQ,MAAM,kBACnBb,mBAAA,CAGK,aAFHA,mBAAA,CAAgE;MAAvDc,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,YAAY,CAACZ,KAAK,CAACE,EAAE;OAAgB,IAAE,iBAvBrEW,UAAA,GAwBclB,mBAAA,CAAgE;MAAvDc,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,YAAY,CAACZ,KAAK,CAACE,EAAE;OAAgB,IAAE,iBAxBrEY,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}