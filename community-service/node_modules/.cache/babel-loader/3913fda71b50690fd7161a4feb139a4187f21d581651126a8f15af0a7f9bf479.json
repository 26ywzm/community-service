{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { handleApiError } from '../utils/errorHandler';\nconst API = process.env.VUE_APP_API_URL;\nexport default {\n  name: 'UserProfile',\n  data() {\n    return {\n      loading: true,\n      user: {\n        username: localStorage.getItem('username') || '',\n        email: '',\n        role: localStorage.getItem('role') || '',\n        avatar: ''\n      },\n      isEditing: false,\n      editedUser: {},\n      currentPassword: '',\n      newPassword: '',\n      file: null,\n      error: null\n    };\n  },\n  created() {\n    // 立即从 localStorage 加载基本信息\n    this.user = {\n      username: localStorage.getItem('username') || '',\n      email: '',\n      role: localStorage.getItem('role') || '',\n      avatar: ''\n    };\n\n    // 然后从服务器获取完整信息\n    this.fetchUserProfile();\n  },\n  methods: {\n    async fetchUserProfile() {\n      try {\n        const token = localStorage.getItem('authToken');\n        if (!token) {\n          this.$router.replace('/login');\n          return;\n        }\n        const response = await axios.get(`${API}/me`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // 更新用户信息\n        this.user = {\n          ...this.user,\n          ...response.data\n        };\n      } catch (error) {\n        if (error.response && error.response.status === 401) {\n          // 如果token无效，清除本地存储并跳转到登录页\n          localStorage.removeItem('authToken');\n          this.$router.replace('/login');\n        } else {\n          this.error = '获取用户信息失败';\n        }\n      } finally {\n        this.loading = false;\n      }\n    },\n    async updateProfile() {\n      try {\n        const formData = new FormData();\n        formData.append('username', this.editedUser.username);\n        formData.append('email', this.editedUser.email);\n        if (this.currentPassword) {\n          formData.append('currentPassword', this.currentPassword);\n          formData.append('newPassword', this.newPassword);\n        }\n        if (this.file) {\n          formData.append('avatar', this.file);\n        }\n        await axios.put(`${API}/me`, formData, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        alert('个人信息更新成功！');\n        this.isEditing = false;\n        this.currentPassword = '';\n        this.newPassword = '';\n        this.file = null;\n        await this.fetchUserProfile();\n      } catch (error) {\n        handleApiError(error);\n      }\n    },\n    handleFileUpload(event) {\n      this.file = event.target.files[0];\n    },\n    goToLogin() {\n      this.$router.push('/login');\n    },\n    goToRegister() {\n      this.$router.push('/register');\n    },\n    async logout() {\n      localStorage.removeItem('authToken');\n      this.isLoggedIn = false;\n      this.user = {\n        username: '',\n        email: '',\n        role: '',\n        avatar: ''\n      };\n      this.$router.push('/login');\n    },\n    cancelEdit() {\n      this.isEditing = false;\n      this.currentPassword = '';\n      this.newPassword = '';\n      this.file = null;\n      this.fetchUserProfile();\n    }\n  }\n};","map":{"version":3,"names":["axios","handleApiError","API","process","env","VUE_APP_API_URL","name","data","loading","user","username","localStorage","getItem","email","role","avatar","isEditing","editedUser","currentPassword","newPassword","file","error","created","fetchUserProfile","methods","token","$router","replace","response","get","headers","Authorization","status","removeItem","updateProfile","formData","FormData","append","put","alert","handleFileUpload","event","target","files","goToLogin","push","goToRegister","logout","isLoggedIn","cancelEdit"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\Profile.vue"],"sourcesContent":["<template>\n  <div class=\"profile-container\">\n    <h2>我的账户</h2>\n\n    <div v-if=\"!isLoggedIn\" class=\"auth-section\">\n      <p>请先登录或注册以查看您的个人信息。</p>\n      <button class=\"auth-button\" @click=\"goToLogin\">登录</button>\n      <button class=\"auth-button register-button\" @click=\"goToRegister\">注册</button>\n    </div>\n\n    <div v-else-if=\"loading\" class=\"loading-section\">\n      <p>加载中...</p>\n    </div>\n\n    <div v-else class=\"profile-section\">\n      <h3>欢迎, {{ user.username }}</h3>\n      <p>邮箱: {{ user.email }}</p>\n\n      <!-- 编辑按钮 -->\n      <button class=\"edit-button\" @click=\"isEditing = true\" v-if=\"!isEditing\">编辑信息</button>\n\n      <!-- 编辑表单 -->\n      <div v-if=\"isEditing\">\n        <div class=\"form-group\">\n          <label>用户名：</label>\n          <input type=\"text\" v-model=\"editedUser.username\" />\n        </div>\n        <div class=\"form-group\">\n          <label>邮箱：</label>\n          <input type=\"email\" v-model=\"editedUser.email\" />\n        </div>\n        <div class=\"form-group\">\n          <label>当前密码（必填）：</label>\n          <input type=\"password\" v-model=\"currentPassword\" />\n        </div>\n        <div class=\"form-group\">\n          <label>新密码（可选）：</label>\n          <input type=\"password\" v-model=\"newPassword\" />\n        </div>\n        <div class=\"form-group\">\n          <label>头像：</label>\n          <input type=\"file\" @change=\"handleFileUpload\" />\n        </div>\n        <div class=\"button-group\">\n          <button class=\"save-button\" @click=\"updateProfile\">保存</button>\n          <button class=\"cancel-button\" @click=\"cancelEdit\">取消</button>\n        </div>\n      </div>\n\n      <button class=\"logout-button\" @click=\"logout\">退出登录</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { handleApiError } from '../utils/errorHandler';\nconst API = process.env.VUE_APP_API_URL;\n\nexport default {\n  name: 'UserProfile',\n  data() {\n    return {\n      loading: true,\n      user: {\n        username: localStorage.getItem('username') || '',\n        email: '',\n        role: localStorage.getItem('role') || '',\n        avatar: ''\n      },\n      isEditing: false,\n      editedUser: {},\n      currentPassword: '',\n      newPassword: '',\n      file: null,\n      error: null\n    };\n  },\n  created() {\n    // 立即从 localStorage 加载基本信息\n    this.user = {\n      username: localStorage.getItem('username') || '',\n      email: '',\n      role: localStorage.getItem('role') || '',\n      avatar: ''\n    };\n    \n    // 然后从服务器获取完整信息\n    this.fetchUserProfile();\n  },\n  methods: {\n    async fetchUserProfile() {\n      try {\n        const token = localStorage.getItem('authToken');\n        if (!token) {\n          this.$router.replace('/login');\n          return;\n        }\n\n        const response = await axios.get(`${API}/me`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        // 更新用户信息\n        this.user = {\n          ...this.user,\n          ...response.data\n        };\n      } catch (error) {\n        if (error.response && error.response.status === 401) {\n          // 如果token无效，清除本地存储并跳转到登录页\n          localStorage.removeItem('authToken');\n          this.$router.replace('/login');\n        } else {\n          this.error = '获取用户信息失败';\n        }\n      } finally {\n        this.loading = false;\n      }\n    },\n    async updateProfile() {\n      try {\n        const formData = new FormData();\n        formData.append('username', this.editedUser.username);\n        formData.append('email', this.editedUser.email);\n        if (this.currentPassword) {\n          formData.append('currentPassword', this.currentPassword);\n          formData.append('newPassword', this.newPassword);\n        }\n        if (this.file) {\n          formData.append('avatar', this.file);\n        }\n\n        await axios.put(`${API}/me`, formData, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n\n        alert('个人信息更新成功！');\n        this.isEditing = false;\n        this.currentPassword = '';\n        this.newPassword = '';\n        this.file = null;\n        await this.fetchUserProfile();\n      } catch (error) {\n        handleApiError(error);\n      }\n    },\n    handleFileUpload(event) {\n      this.file = event.target.files[0];\n    },\n    goToLogin() {\n      this.$router.push('/login');\n    },\n    goToRegister() {\n      this.$router.push('/register');\n    },\n    async logout() {\n      localStorage.removeItem('authToken');\n      this.isLoggedIn = false;\n      this.user = {\n        username: '',\n        email: '',\n        role: '',\n        avatar: ''\n      };\n      this.$router.push('/login');\n    },\n    cancelEdit() {\n      this.isEditing = false;\n      this.currentPassword = '';\n      this.newPassword = '';\n      this.file = null;\n      this.fetchUserProfile();\n    }\n  }\n};\n</script>\n\n<style scoped>\n.profile-container {\n  max-width: 600px;\n  margin: 20px auto;\n  padding: 20px;\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.loading-section {\n  text-align: center;\n  padding: 20px;\n  color: #666;\n}\n\n.loading-section p {\n  margin: 0;\n  font-size: 16px;\n}\n\n.profile-section {\n  padding: 20px;\n}\n\n.auth-section {\n  text-align: center;\n  padding: 20px;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 5px;\n  color: #333;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  box-sizing: border-box;\n}\n\n.button-group {\n  display: flex;\n  gap: 10px;\n  margin-top: 20px;\n}\n\n.edit-button,\n.save-button,\n.cancel-button,\n.auth-button,\n.logout-button {\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.3s;\n}\n\n.edit-button {\n  background-color: #4CAF50;\n  color: white;\n}\n\n.save-button {\n  background-color: #2196F3;\n  color: white;\n}\n\n.cancel-button {\n  background-color: #f44336;\n  color: white;\n}\n\n.auth-button {\n  background-color: #2196F3;\n  color: white;\n  margin: 0 5px;\n}\n\n.register-button {\n  background-color: #4CAF50;\n}\n\n.logout-button {\n  background-color: #f44336;\n  color: white;\n  margin-top: 20px;\n}\n\n.edit-button:hover,\n.save-button:hover,\n.cancel-button:hover,\n.auth-button:hover,\n.logout-button:hover {\n  opacity: 0.9;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}