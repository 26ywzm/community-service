{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"order-management\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"loading\"\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  class: \"order-cards\"\n};\nconst _hoisted_5 = {\n  class: \"order-info\"\n};\nconst _hoisted_6 = {\n  class: \"user-info\"\n};\nconst _hoisted_7 = {\n  class: \"email\"\n};\nconst _hoisted_8 = {\n  class: \"order-items\"\n};\nconst _hoisted_9 = {\n  class: \"item-name\"\n};\nconst _hoisted_10 = {\n  class: \"item-details\"\n};\nconst _hoisted_11 = {\n  class: \"price\"\n};\nconst _hoisted_12 = {\n  class: \"status\"\n};\nconst _hoisted_13 = {\n  class: \"time-info\"\n};\nconst _hoisted_14 = {\n  class: \"time\"\n};\nconst _hoisted_15 = {\n  class: \"order-actions\"\n};\nconst _hoisted_16 = [\"onClick\"];\nconst _hoisted_17 = [\"onClick\"];\nconst _hoisted_18 = [\"onClick\"];\nconst _hoisted_19 = {\n  key: 2\n};\nconst _hoisted_20 = {\n  key: 3,\n  class: \"dialog-overlay\"\n};\nconst _hoisted_21 = {\n  class: \"dialog\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"订单管理\", -1 /* HOISTED */)), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"加载中...\")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createCommentVNode(\" 订单卡片布局，适用于小屏设备 \"), _createElementVNode(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.orders, order => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: order.id,\n      class: \"order-card\"\n    }, [_createElementVNode(\"h3\", null, \"订单ID: \" + _toDisplayString(order.id), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", null, _toDisplayString(order.username), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_7, _toDisplayString(order.email), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_8, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(order.items, item => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: item.menu_item_id,\n        class: \"order-item\"\n      }, [_createElementVNode(\"span\", _hoisted_9, _toDisplayString(item.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"span\", null, \"数量: \" + _toDisplayString(item.quantity), 1 /* TEXT */), _createElementVNode(\"span\", null, \"单价: ¥\" + _toDisplayString(item.price), 1 /* TEXT */), _createElementVNode(\"span\", null, \"小计: ¥\" + _toDisplayString(item.quantity * item.price), 1 /* TEXT */)])]);\n    }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_11, \"总价: ¥\" + _toDisplayString(order.total_price), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"span\", {\n      class: _normalizeClass(['status-tag', 'status-' + order.status])\n    }, _toDisplayString($data.statusText[order.status]), 3 /* TEXT, CLASS */)]), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"div\", null, _toDisplayString($options.formatDate(order.created_at).date), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_14, _toDisplayString($options.formatDate(order.created_at).time), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_15, [parseInt(order.status) === 0 ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      class: \"btn-confirm\",\n      onClick: $event => $options.handleButtonClick(order)\n    }, \"开始处理\", 8 /* PROPS */, _hoisted_16)) : _createCommentVNode(\"v-if\", true), parseInt(order.status) === 1 ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 1,\n      class: \"btn-complete\",\n      onClick: $event => $options.handleButtonClick(order)\n    }, \"完成订单\", 8 /* PROPS */, _hoisted_17)) : _createCommentVNode(\"v-if\", true), parseInt(order.status) === 2 ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 2,\n      class: \"btn-delete\",\n      onClick: $event => $options.handleDeleteOrder(order)\n    }, \"删除订单\", 8 /* PROPS */, _hoisted_18)) : _createCommentVNode(\"v-if\", true)])])]);\n  }), 128 /* KEYED_FRAGMENT */))])])), $data.orders.length === 0 && !$data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, _cache[1] || (_cache[1] = [_createElementVNode(\"p\", {\n    class: \"empty-message\"\n  }, \"没有找到订单。\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 对话框 \"), $data.showDialog ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, [_createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"p\", null, _toDisplayString($data.dialogMessage), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.closeDialog && $options.closeDialog(...args))\n  }, \"确定\")])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$data","loading","_hoisted_2","_hoisted_3","_createCommentVNode","_hoisted_4","_Fragment","_renderList","orders","order","id","_toDisplayString","_hoisted_5","_hoisted_6","username","_hoisted_7","email","_hoisted_8","items","item","menu_item_id","_hoisted_9","name","_hoisted_10","quantity","price","_hoisted_11","total_price","_hoisted_12","_normalizeClass","status","statusText","_hoisted_13","$options","formatDate","created_at","date","_hoisted_14","time","_hoisted_15","parseInt","onClick","$event","handleButtonClick","_hoisted_16","_hoisted_17","handleDeleteOrder","_hoisted_18","length","_hoisted_19","_cache","showDialog","_hoisted_20","_hoisted_21","dialogMessage","args","closeDialog"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\OrderManagement.vue"],"sourcesContent":["<template>\n  <div class=\"order-management\">\n    <h2>订单管理</h2>\n    <div v-if=\"loading\" class=\"loading\">加载中...</div>\n    <div v-else>\n      <!-- 订单卡片布局，适用于小屏设备 -->\n      <div class=\"order-cards\">\n        <div v-for=\"order in orders\" :key=\"order.id\" class=\"order-card\">\n          <h3>订单ID: {{ order.id }}</h3>\n          <div class=\"order-info\">\n            <div class=\"user-info\">\n              <div>{{ order.username }}</div>\n              <div class=\"email\">{{ order.email }}</div>\n            </div>\n            <div class=\"order-items\">\n              <div v-for=\"item in order.items\" :key=\"item.menu_item_id\" class=\"order-item\">\n                <span class=\"item-name\">{{ item.name }}</span>\n                <div class=\"item-details\">\n                  <span>数量: {{ item.quantity }}</span>\n                  <span>单价: ¥{{ item.price }}</span>\n                  <span>小计: ¥{{ item.quantity * item.price }}</span>\n                </div>\n              </div>\n            </div>\n            <div class=\"price\">总价: ¥{{ order.total_price }}</div>\n            <div class=\"status\">\n              <span :class=\"['status-tag', 'status-' + order.status]\">\n                {{ statusText[order.status] }}\n              </span>\n            </div>\n            <div class=\"time-info\">\n              <div>{{ formatDate(order.created_at).date }}</div>\n              <div class=\"time\">{{ formatDate(order.created_at).time }}</div>\n            </div>\n            <div class=\"order-actions\">\n              <button \n                v-if=\"parseInt(order.status) === 0\" \n                class=\"btn-confirm\"\n                @click=\"handleButtonClick(order)\"\n              >开始处理</button>\n              <button \n                v-if=\"parseInt(order.status) === 1\" \n                class=\"btn-complete\"\n                @click=\"handleButtonClick(order)\"\n              >完成订单</button>\n              <button \n                v-if=\"parseInt(order.status) === 2\" \n                class=\"btn-delete\"\n                @click=\"handleDeleteOrder(order)\"\n              >删除订单</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div v-if=\"orders.length === 0 && !loading\">\n      <p class=\"empty-message\">没有找到订单。</p>\n    </div>\n\n    <!-- 对话框 -->\n    <div v-if=\"showDialog\" class=\"dialog-overlay\">\n      <div class=\"dialog\">\n        <p>{{ dialogMessage }}</p>\n        <button @click=\"closeDialog\">确定</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\n\nconst API = 'http://localhost:3000/api/auth';  // 直接定义 API 地址\n\nexport default {\n  data() {\n    return {\n      orders: [], // 存储所有订单信息\n      showDialog: false,\n      dialogMessage: '',\n      lastActionTime: 0, // 记录上一次操作的时间戳\n      loading: false,\n      // 状态显示文本\n      statusText: {\n        0: '待处理',\n        1: '处理中',\n        2: '已完成',\n        3: '已取消'\n      }\n    };\n  },\n  mounted() {\n    this.fetchOrders(); // 加载所有订单\n  },\n  methods: {\n    async fetchOrders() {\n      try {\n        this.loading = true;\n        const response = await axios.get(`${API}/canteen/orders`, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n          }\n        });\n        console.log('获取到的订单数据:', response.data);\n        \n        // 处理订单数据\n        this.orders = response.data.orders.map(order => ({\n          ...order,\n          lastActionTime: 0,\n          items: order.items || [] // 确保 items 存在\n        }));\n        \n        // 更新分页信息\n        if (response.data.pagination) {\n          this.pagination = response.data.pagination;\n        }\n      } catch (error) {\n        console.error('获取订单列表失败:', error);\n        ElMessage.error('获取订单列表失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    async handleButtonClick(order) {\n      if (!this.canPerformAction(order)) {\n        ElMessage.warning('操作太频繁，请稍后再试');\n        return;\n      }\n\n      try {\n        let newStatus;\n        const currentStatus = parseInt(order.status);\n        switch (currentStatus) {\n          case 0:  // pending\n            newStatus = 1;  // confirmed\n            break;\n          case 1:  // confirmed\n            newStatus = 2;  // completed\n            break;\n          default:\n            ElMessage.error(`当前状态 ${this.statusText[order.status]} 无法进行操作`);\n            return;\n        }\n\n        await this.updateOrderStatus(order, newStatus);\n        // 操作成功后刷新订单列表\n        await this.fetchOrders();\n      } catch (error) {\n        console.error('操作失败:', error);\n        ElMessage.error('操作失败，请重试');\n      }\n    },\n\n    canPerformAction(order) {\n      const now = Date.now();\n      // 如果是第一次操作，或者距离上次操作超过3秒\n      if (!order.lastActionTime || now - order.lastActionTime > 3000) {\n        return true;\n      }\n      return false;\n    },\n\n    async updateOrderStatus(order, status) {\n      try {\n        console.log('Updating order status:', { orderId: order.id, status: status });\n        await axios.put(\n          `${API}/canteen/orders/${order.id}`, \n          { status }, \n          {\n            headers: {\n              'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\n              'Content-Type': 'application/json'\n            }\n          }\n        );\n        \n        ElMessage.success(`订单状态已更新为${this.statusText[status]}`);\n        order.lastActionTime = Date.now(); // 更新最后操作时间\n        order.status = status; // 更新本地状态\n      } catch (error) {\n        console.error('更新订单状态失败:', error);\n        ElMessage.error(error.response?.data?.message || '更新订单状态失败，请重试');\n        throw error;\n      }\n    },\n\n    async handleDeleteOrder(order) {\n      try {\n        if (!confirm('确定要删除这个订单吗？此操作不可撤销。')) {\n          return;\n        }\n        \n        await axios.delete(`${API}/canteen/orders/${order.id}`, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n          }\n        });\n        \n        ElMessage.success('订单已删除');\n        // 从列表中移除该订单\n        this.orders = this.orders.filter(o => o.id !== order.id);\n      } catch (error) {\n        console.error('删除订单失败:', error);\n        ElMessage.error(error.response?.data?.message || '删除订单失败，请重试');\n      }\n    },\n\n    closeDialog() {\n      this.showDialog = false;\n      this.dialogMessage = '';\n    },\n\n    formatDate(dateString) {\n      const date = new Date(dateString);\n      return {\n        date: date.toLocaleDateString('zh-CN', {\n          year: 'numeric',\n          month: '2-digit',\n          day: '2-digit'\n        }),\n        time: date.toLocaleTimeString('zh-CN', {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      };\n    }\n  }\n};\n</script>\n\n<style scoped>\n.order-management {\n  padding: 16px;\n  max-width: 100%;\n}\n\nh2 {\n  color: #303133;\n  margin-bottom: 16px;\n  font-size: 24px;\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 16px;\n  background-color: white;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);\n}\n\nth, td {\n  padding: 10px;\n  text-align: left;\n  border-bottom: 1px solid #EBEEF5;\n  font-size: 14px;\n}\n\nth {\n  background-color: #F5F7FA;\n  color: #606266;\n  font-weight: 500;\n}\n\ntr:hover {\n  background-color: #F5F7FA;\n}\n\nbutton {\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: all 0.3s;\n  margin: 8px 0;\n  font-size: 14px;\n  width: 100%;\n}\n\nbutton:hover {\n  opacity: 0.8;\n}\n\n.dialog-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.dialog {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n  text-align: center;\n}\n\n.dialog p {\n  margin-bottom: 15px;\n  color: #606266;\n}\n\n.dialog button {\n  background-color: #409EFF;\n  color: white;\n  padding: 8px 20px;\n}\n\n.order-actions {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.btn-confirm {\n  background-color: #67C23A;\n  color: white;\n}\n\n.btn-complete {\n  background-color: #409EFF;\n  color: white;\n}\n\n.btn-delete {\n  background-color: #F56C6C;\n  color: white;\n}\n\n.empty-message {\n  text-align: center;\n  color: #909399;\n  margin-top: 40px;\n}\n\n.user-info {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n}\n\n.email {\n  font-size: 12px;\n  color: #909399;\n}\n\n.order-items {\n  max-width: 300px;\n  padding: 8px;\n  overflow-x: auto;\n}\n\n.order-item {\n  background-color: #f8f9fa;\n  border-radius: 4px;\n  padding: 8px;\n  margin-bottom: 8px;\n}\n\n.order-item:last-child {\n  margin-bottom: 0;\n}\n\n.item-info {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n}\n\n.item-name {\n  font-weight: bold;\n  color: #303133;\n}\n\n.item-details {\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n  font-size: 13px;\n  color: #606266;\n}\n\n.item-quantity, .item-price, .item-total {\n  margin-right: 12px;\n}\n\n.item-total {\n  color: #409EFF;\n  font-weight: 500;\n}\n\n.price {\n  font-weight: bold;\n}\n\n.status-tag {\n  padding: 2px 6px;\n  border-radius: 4px;\n  font-size: 12px;\n}\n\n.status-0 {\n  background-color: #F56C6C;\n  color: white;\n}\n\n.status-1 {\n  background-color: #67C23A;\n  color: white;\n}\n\n.status-2 {\n  background-color: #409EFF;\n  color: white;\n}\n\n.status-3 {\n  background-color: #909399;\n  color: white;\n}\n\n.time-info {\n  display: flex;\n  flex-direction: column;\n  font-size: 12px;\n}\n\n.time {\n  color: #909399;\n}\n\n.loading {\n  text-align: center;\n  margin-top: 40px;\n  font-size: 16px;\n}\n\n/* Mobile Optimization */\n@media screen and (max-width: 768px) {\n  table {\n    display: none; /* Hide the table on small screens */\n  }\n\n  .order-management {\n    padding: 16px;\n  }\n\n  .order-item {\n    width: 100%;\n    margin-bottom: 16px;\n  }\n\n  .order-actions {\n    flex-direction: column;\n    gap: 12px;\n  }\n\n  .order-items {\n    display: block;\n    padding: 0;\n  }\n\n  .status-tag {\n    font-size: 14px;\n    padding: 6px 10px;\n  }\n\n  .item-details {\n    font-size: 14px;\n  }\n\n  .btn-confirm,\n  .btn-complete,\n  .btn-delete {\n    width: 100%;\n    padding: 12px 0;\n  }\n\n  .dialog button {\n    width: 100%;\n    padding: 12px 0;\n  }\n\n  .empty-message {\n    margin-top: 40px;\n    font-size: 14px;\n  }\n}\n\n@media screen and (max-width: 480px) {\n  h2 {\n    font-size: 20px;\n  }\n\n  .user-info .email {\n    font-size: 10px;\n  }\n\n  .item-name {\n    font-size: 14px;\n  }\n\n  .order-actions {\n    flex-direction: column;\n    gap: 10px;\n  }\n\n  .btn-confirm, .btn-complete, .btn-delete {\n    padding: 10px 0;\n    font-size: 14px;\n  }\n\n  .dialog button {\n    padding: 12px;\n    font-size: 16px;\n  }\n}\n\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}