{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = process.env.VUE_APP_BASE_URL;\nexport default {\n  data() {\n    return {\n      feedbackMessage: '',\n      // 用户输入的留言内容\n      feedbacks: [],\n      // 留言和回复的历史记录\n      feedbackSubmitted: false,\n      // 提交留言成功标志\n      message: {\n        show: false,\n        content: '',\n        type: ''\n      }\n    };\n  },\n  mounted() {\n    this.loadFeedbacks(); // 页面加载时，获取用户的留言历史\n  },\n  methods: {\n    getAuthHeaders() {\n      const token = localStorage.getItem('authToken');\n      return token ? {\n        'Authorization': `Bearer ${token}`\n      } : {};\n    },\n    // 获取用户的留言和回复历史\n    async loadFeedbacks() {\n      const userId = localStorage.getItem('userId');\n      const token = localStorage.getItem('authToken');\n      if (!userId || !token) {\n        this.showMessage('请先登录', 'error');\n        return;\n      }\n      try {\n        const response = await axios.get(`${BASE_URL}/api/canteen/feedbacks`, {\n          params: {\n            user_id: userId\n          },\n          headers: this.getAuthHeaders()\n        });\n        this.feedbacks = response.data.feedbacks; // 设置留言历史\n      } catch (error) {\n        console.error('加载留言历史失败:', error);\n        this.showMessage('加载留言历史失败，请稍后重试', 'error');\n      }\n    },\n    // 提交留言\n    async submitFeedback() {\n      const userId = localStorage.getItem('userId');\n      const token = localStorage.getItem('authToken');\n      if (!userId || !token) {\n        this.showMessage('请先登录', 'error');\n        return;\n      }\n      if (!this.feedbackMessage.trim()) {\n        this.showMessage('留言内容不能为空', 'error');\n        return;\n      }\n      try {\n        await axios.post(`${BASE_URL}/api/canteen/feedback`, {\n          user_id: userId,\n          message: this.feedbackMessage\n        }, {\n          headers: this.getAuthHeaders()\n        });\n        this.showMessage('留言提交成功');\n        this.feedbackMessage = ''; // 清空留言内容\n\n        this.feedbackSubmitted = true; // 显示提交成功提示\n        setTimeout(() => {\n          this.feedbackSubmitted = false;\n        }, 2000);\n\n        // 重新加载留言历史，显示新的留言和可能的回复\n        await this.loadFeedbacks();\n      } catch (error) {\n        console.error('提交留言失败:', error);\n        this.showMessage('提交留言失败，请稍后重试', 'error');\n      }\n    },\n    // 删除留言\n    async deleteFeedback(feedback) {\n      if (!confirm('确定要删除这条留言吗？')) return;\n      const userId = localStorage.getItem('userId');\n      const token = localStorage.getItem('authToken');\n      if (!userId || !token) {\n        this.showMessage('请先登录', 'error');\n        return;\n      }\n      try {\n        await axios.delete(`${BASE_URL}/api/canteen/feedback/${feedback.id}`, {\n          headers: this.getAuthHeaders(),\n          data: {\n            user_id: userId,\n            is_admin: localStorage.getItem('userRole') === 'admin'\n          }\n        });\n        this.showMessage('留言已删除');\n        await this.loadFeedbacks(); // 重新获取留言列表\n      } catch (error) {\n        console.error('删除留言失败:', error);\n        this.showMessage(error.response?.data?.message || '删除失败，请稍后重试', 'error');\n      }\n    },\n    // 显示提示消息\n    showMessage(content, type = 'success') {\n      this.message = {\n        show: true,\n        content,\n        type\n      };\n      setTimeout(() => {\n        this.message.show = false;\n      }, 3000);\n    },\n    // 格式化时间\n    formatTime(time) {\n      return new Date(time).toLocaleString();\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}