{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { handleApiError } from '../utils/errorHandler';\nconst API = process.env.VUE_APP_API_URL;\nexport default {\n  name: 'UserLogin',\n  data() {\n    return {\n      email: '',\n      // 使用 email 而不是 username\n      password: ''\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await axios.post(`${API}/login`, {\n          email: this.email,\n          // 发送 email 和 password\n          password: this.password\n        });\n        const {\n          token,\n          user\n        } = response.data;\n\n        // 存储认证信息\n        localStorage.setItem('authToken', token);\n        localStorage.setItem('userRole', user.role);\n        localStorage.setItem('username', user.username);\n        localStorage.setItem('userId', user.id);\n        localStorage.setItem('email', user.email);\n\n        // 根据角色重定向\n        switch (user.role) {\n          case 'super_admin':\n            await this.$router.push('/profile');\n            break;\n          case 'admin':\n            await this.$router.push('/profile');\n            break;\n          default:\n            await this.$router.push('/profile');\n        }\n      } catch (error) {\n        // 根据错误类型显示不同的错误信息\n        if (error.response) {\n          // 服务器返回了错误响应\n          if (error.response.status === 401) {\n            alert('邮箱或密码错误，请重试。');\n          } else if (error.response.data && error.response.data.message) {\n            alert(error.response.data.message);\n          } else {\n            alert('登录失败，请稍后重试。');\n          }\n        } else if (error.request) {\n          // 请求已发出，但没有收到响应\n          alert('无法连接到服务器，请检查网络连接。');\n        } else {\n          // 请求配置出错\n          alert('登录请求出错，请稍后重试。');\n        }\n        handleApiError(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","handleApiError","API","process","env","VUE_APP_API_URL","name","data","email","password","methods","login","response","post","token","user","localStorage","setItem","role","username","id","$router","push","error","status","alert","message","request"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\UserLogin.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <h2>用户登录</h2>\n    <form @submit.prevent=\"login\">\n      <div class=\"form-group\">\n        <label>邮箱：</label>\n        <input type=\"email\" v-model=\"email\" required />\n      </div>\n      <div class=\"form-group\">\n        <label>密码：</label>\n        <input type=\"password\" v-model=\"password\" required />\n      </div>\n      <button type=\"submit\" class=\"login-button\">登录</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { handleApiError } from '../utils/errorHandler';\nconst API = process.env.VUE_APP_API_URL;\n\nexport default {\n  name: 'UserLogin',\n  data() {\n    return {\n      email: '',   // 使用 email 而不是 username\n      password: '',\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await axios.post(`${API}/login`, {\n          email: this.email,      // 发送 email 和 password\n          password: this.password,\n        });\n\n        const { token, user } = response.data;\n        \n        // 存储认证信息\n        localStorage.setItem('authToken', token);\n        localStorage.setItem('userRole', user.role);\n        localStorage.setItem('username', user.username);\n        localStorage.setItem('userId', user.id);\n        localStorage.setItem('email', user.email);\n\n        // 根据角色重定向\n        switch(user.role) {\n          case 'super_admin':\n            await this.$router.push('/profile');\n            break;\n          case 'admin':\n            await this.$router.push('/profile');\n            break;\n          default:\n            await this.$router.push('/profile');\n        }\n\n      } catch (error) {\n        // 根据错误类型显示不同的错误信息\n        if (error.response) {\n          // 服务器返回了错误响应\n          if (error.response.status === 401) {\n            alert('邮箱或密码错误，请重试。');\n          } else if (error.response.data && error.response.data.message) {\n            alert(error.response.data.message);\n          } else {\n            alert('登录失败，请稍后重试。');\n          }\n        } else if (error.request) {\n          // 请求已发出，但没有收到响应\n          alert('无法连接到服务器，请检查网络连接。');\n        } else {\n          // 请求配置出错\n          alert('登录请求出错，请稍后重试。');\n        }\n        handleApiError(error);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* 基本样式，您可以根据需要进行修改 */\n.login-container {\n  max-width: 400px;\n  margin: 0 auto;\n  padding: 20px;\n  background-color: #f5f5f5;\n  border-radius: 10px;\n}\n\nh2 {\n  text-align: center;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 5px;\n}\n\ninput {\n  width: 100%;\n  padding: 8px;\n  box-sizing: border-box;\n  border-radius: 4px;\n  border: 1px solid #ccc;\n}\n\n.login-button {\n  width: 100%;\n  padding: 10px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.login-button:hover {\n  background-color: #45a049;\n}\n</style>\n"],"mappings":";AAkBA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,cAAa,QAAS,uBAAuB;AACtD,MAAMC,GAAE,GAAIC,OAAO,CAACC,GAAG,CAACC,eAAe;AAEvC,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MAAI;MACbC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MACZ,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMZ,KAAK,CAACa,IAAI,CAAC,GAAGX,GAAG,QAAQ,EAAE;UAChDM,KAAK,EAAE,IAAI,CAACA,KAAK;UAAO;UACxBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QAEF,MAAM;UAAEK,KAAK;UAAEC;QAAK,IAAIH,QAAQ,CAACL,IAAI;;QAErC;QACAS,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEH,KAAK,CAAC;QACxCE,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEF,IAAI,CAACG,IAAI,CAAC;QAC3CF,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEF,IAAI,CAACI,QAAQ,CAAC;QAC/CH,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEF,IAAI,CAACK,EAAE,CAAC;QACvCJ,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,IAAI,CAACP,KAAK,CAAC;;QAEzC;QACA,QAAOO,IAAI,CAACG,IAAI;UACd,KAAK,aAAa;YAChB,MAAM,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC,UAAU,CAAC;YACnC;UACF,KAAK,OAAO;YACV,MAAM,IAAI,CAACD,OAAO,CAACC,IAAI,CAAC,UAAU,CAAC;YACnC;UACF;YACE,MAAM,IAAI,CAACD,OAAO,CAACC,IAAI,CAAC,UAAU,CAAC;QACvC;MAEF,EAAE,OAAOC,KAAK,EAAE;QACd;QACA,IAAIA,KAAK,CAACX,QAAQ,EAAE;UAClB;UACA,IAAIW,KAAK,CAACX,QAAQ,CAACY,MAAK,KAAM,GAAG,EAAE;YACjCC,KAAK,CAAC,cAAc,CAAC;UACvB,OAAO,IAAIF,KAAK,CAACX,QAAQ,CAACL,IAAG,IAAKgB,KAAK,CAACX,QAAQ,CAACL,IAAI,CAACmB,OAAO,EAAE;YAC7DD,KAAK,CAACF,KAAK,CAACX,QAAQ,CAACL,IAAI,CAACmB,OAAO,CAAC;UACpC,OAAO;YACLD,KAAK,CAAC,aAAa,CAAC;UACtB;QACF,OAAO,IAAIF,KAAK,CAACI,OAAO,EAAE;UACxB;UACAF,KAAK,CAAC,mBAAmB,CAAC;QAC5B,OAAO;UACL;UACAA,KAAK,CAAC,eAAe,CAAC;QACxB;QACAxB,cAAc,CAACsB,KAAK,CAAC;MACvB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}