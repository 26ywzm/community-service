{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { handleApiError } from '../utils/errorHandler';\nconst API = process.env.VUE_APP_API_URL;\nexport default {\n  name: 'OrderDetail',\n  data() {\n    return {\n      order: null,\n      loading: true,\n      statusText: {\n        0: '待处理',\n        1: '处理中',\n        2: '已完成',\n        3: '已取消'\n      }\n    };\n  },\n  async created() {\n    await this.fetchOrderDetails();\n  },\n  methods: {\n    async fetchOrderDetails() {\n      const orderId = this.$route.params.orderId;\n      try {\n        const response = await axios.get(`${API}/canteen/order/${orderId}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('authToken')}`\n          }\n        });\n        console.log('订单原始数据:', response.data);\n\n        // 尝试获取用户信息\n        if (response.data) {\n          try {\n            const userResponse = await axios.get(`${API}/user/${response.data.user_id}`, {\n              headers: {\n                Authorization: `Bearer ${localStorage.getItem('authToken')}`\n              }\n            });\n            console.log('用户数据:', userResponse.data);\n            this.order = {\n              ...response.data,\n              email: userResponse.data.email,\n              username: userResponse.data.username\n            };\n          } catch (userError) {\n            console.error('获取用户信息失败:', userError);\n            this.order = response.data;\n          }\n        }\n        this.loading = false;\n      } catch (error) {\n        console.error('获取订单详情失败:', error);\n        handleApiError(error);\n      }\n    },\n    formatDate(dateString) {\n      if (!dateString) return '暂无日期';\n      try {\n        const date = new Date(dateString);\n        if (isNaN(date.getTime())) return '无效日期';\n        const options = {\n          year: 'numeric',\n          month: '2-digit',\n          day: '2-digit',\n          hour: '2-digit',\n          minute: '2-digit',\n          hour12: false\n        };\n        return date.toLocaleString('zh-CN', options).replace(/\\//g, '-');\n      } catch (error) {\n        console.error('日期格式化错误:', error);\n        return '日期格式错误';\n      }\n    },\n    goBack() {\n      this.$router.push('/discover'); // 返回到点餐页面\n    }\n  }\n};","map":{"version":3,"names":["axios","handleApiError","API","process","env","VUE_APP_API_URL","name","data","order","loading","statusText","created","fetchOrderDetails","methods","orderId","$route","params","response","get","headers","Authorization","localStorage","getItem","console","log","userResponse","user_id","email","username","userError","error","formatDate","dateString","date","Date","isNaN","getTime","options","year","month","day","hour","minute","hour12","toLocaleString","replace","goBack","$router","push"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\OrderDetail.vue"],"sourcesContent":["<template>\n    <div class=\"order-detail\">\n        <h2>订单详细信息</h2>\n\n        <div v-if=\"order\">\n            <h3>订单 ID: {{ order.id }}</h3>\n            <p>用户邮箱: {{ order.email || '未知' }}</p>\n            <p>用户名: {{ order.username || '未知' }}</p>\n            <p>订单状态: {{ statusText[order.status] || '未知状态' }}</p>\n            <p>总价格: {{ order.total_price }} 元</p>\n            <p>创建时间: {{ formatDate(order.created_at) }}</p>\n            <h4>订单内容:</h4>\n            <div v-if=\"order.items && order.items.length\" class=\"order-items\">\n                <div v-for=\"item in order.items\" :key=\"item.menu_item_id\" class=\"order-item\">\n                    <div class=\"item-info\">\n                        <span class=\"item-name\">{{ item.name }}</span>\n                        <div class=\"item-details\">\n                            <span class=\"item-quantity\">数量: {{ item.quantity }}</span>\n                            <span class=\"item-price\">单价: ¥{{ item.price }}</span>\n                            <span class=\"item-total\">小计: ¥{{ item.quantity * item.price }}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <p v-else>暂无订单详情</p>\n        </div>\n\n        <div v-else-if=\"loading\">\n            <p>正在加载订单信息...</p>\n        </div>\n\n        <button @click=\"goBack\">返回</button>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { handleApiError } from '../utils/errorHandler';\nconst API = process.env.VUE_APP_API_URL;\n\nexport default {\n    name: 'OrderDetail',\n    data() {\n        return {\n            order: null,\n            loading: true,\n            statusText: {\n                0: '待处理',\n                1: '处理中',\n                2: '已完成',\n                3: '已取消'\n            }\n        };\n    },\n    async created() {\n        await this.fetchOrderDetails();\n    },\n    methods: {\n        async fetchOrderDetails() {\n            const orderId = this.$route.params.orderId;\n            try {\n                const response = await axios.get(`${API}/canteen/order/${orderId}`, {\n                    headers: {\n                        Authorization: `Bearer ${localStorage.getItem('authToken')}`\n                    }\n                });\n                console.log('订单原始数据:', response.data);\n                \n                // 尝试获取用户信息\n                if (response.data) {\n                    try {\n                        const userResponse = await axios.get(`${API}/user/${response.data.user_id}`, {\n                            headers: {\n                                Authorization: `Bearer ${localStorage.getItem('authToken')}`\n                            }\n                        });\n                        console.log('用户数据:', userResponse.data);\n                        this.order = {\n                            ...response.data,\n                            email: userResponse.data.email,\n                            username: userResponse.data.username\n                        };\n                    } catch (userError) {\n                        console.error('获取用户信息失败:', userError);\n                        this.order = response.data;\n                    }\n                }\n                this.loading = false;\n            } catch (error) {\n                console.error('获取订单详情失败:', error);\n                handleApiError(error);\n            }\n        },\n        formatDate(dateString) {\n            if (!dateString) return '暂无日期';\n            try {\n                const date = new Date(dateString);\n                if (isNaN(date.getTime())) return '无效日期';\n                \n                const options = { \n                    year: 'numeric', \n                    month: '2-digit', \n                    day: '2-digit', \n                    hour: '2-digit', \n                    minute: '2-digit',\n                    hour12: false \n                };\n                return date.toLocaleString('zh-CN', options).replace(/\\//g, '-');\n            } catch (error) {\n                console.error('日期格式化错误:', error);\n                return '日期格式错误';\n            }\n        },\n        goBack() {\n            this.$router.push('/discover'); // 返回到点餐页面\n        }\n    }\n};\n</script>\n\n<style scoped>\n.order-detail {\n    padding: 20px;\n}\n\nbutton {\n    background-color: #4CAF50;\n    color: white;\n    border: none;\n    padding: 10px;\n    cursor: pointer;\n    border-radius: 5px;\n}\n\nbutton:hover {\n    background-color: #45a049;\n}\n</style>\n"],"mappings":";AAoCA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,cAAa,QAAS,uBAAuB;AACtD,MAAMC,GAAE,GAAIC,OAAO,CAACC,GAAG,CAACC,eAAe;AAEvC,eAAe;EACXC,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,KAAK,EAAE,IAAI;MACXC,OAAO,EAAE,IAAI;MACbC,UAAU,EAAE;QACR,CAAC,EAAE,KAAK;QACR,CAAC,EAAE,KAAK;QACR,CAAC,EAAE,KAAK;QACR,CAAC,EAAE;MACP;IACJ,CAAC;EACL,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACZ,MAAM,IAAI,CAACC,iBAAiB,CAAC,CAAC;EAClC,CAAC;EACDC,OAAO,EAAE;IACL,MAAMD,iBAAiBA,CAAA,EAAG;MACtB,MAAME,OAAM,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,OAAO;MAC1C,IAAI;QACA,MAAMG,QAAO,GAAI,MAAMjB,KAAK,CAACkB,GAAG,CAAC,GAAGhB,GAAG,kBAAkBY,OAAO,EAAE,EAAE;UAChEK,OAAO,EAAE;YACLC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;UAC9D;QACJ,CAAC,CAAC;QACFC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEP,QAAQ,CAACV,IAAI,CAAC;;QAErC;QACA,IAAIU,QAAQ,CAACV,IAAI,EAAE;UACf,IAAI;YACA,MAAMkB,YAAW,GAAI,MAAMzB,KAAK,CAACkB,GAAG,CAAC,GAAGhB,GAAG,SAASe,QAAQ,CAACV,IAAI,CAACmB,OAAO,EAAE,EAAE;cACzEP,OAAO,EAAE;gBACLC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;cAC9D;YACJ,CAAC,CAAC;YACFC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEC,YAAY,CAAClB,IAAI,CAAC;YACvC,IAAI,CAACC,KAAI,GAAI;cACT,GAAGS,QAAQ,CAACV,IAAI;cAChBoB,KAAK,EAAEF,YAAY,CAAClB,IAAI,CAACoB,KAAK;cAC9BC,QAAQ,EAAEH,YAAY,CAAClB,IAAI,CAACqB;YAChC,CAAC;UACL,EAAE,OAAOC,SAAS,EAAE;YAChBN,OAAO,CAACO,KAAK,CAAC,WAAW,EAAED,SAAS,CAAC;YACrC,IAAI,CAACrB,KAAI,GAAIS,QAAQ,CAACV,IAAI;UAC9B;QACJ;QACA,IAAI,CAACE,OAAM,GAAI,KAAK;MACxB,EAAE,OAAOqB,KAAK,EAAE;QACZP,OAAO,CAACO,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjC7B,cAAc,CAAC6B,KAAK,CAAC;MACzB;IACJ,CAAC;IACDC,UAAUA,CAACC,UAAU,EAAE;MACnB,IAAI,CAACA,UAAU,EAAE,OAAO,MAAM;MAC9B,IAAI;QACA,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,UAAU,CAAC;QACjC,IAAIG,KAAK,CAACF,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,MAAM;QAExC,MAAMC,OAAM,GAAI;UACZC,IAAI,EAAE,SAAS;UACfC,KAAK,EAAE,SAAS;UAChBC,GAAG,EAAE,SAAS;UACdC,IAAI,EAAE,SAAS;UACfC,MAAM,EAAE,SAAS;UACjBC,MAAM,EAAE;QACZ,CAAC;QACD,OAAOV,IAAI,CAACW,cAAc,CAAC,OAAO,EAAEP,OAAO,CAAC,CAACQ,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;MACpE,EAAE,OAAOf,KAAK,EAAE;QACZP,OAAO,CAACO,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;QAChC,OAAO,QAAQ;MACnB;IACJ,CAAC;IACDgB,MAAMA,CAAA,EAAG;MACL,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC,EAAE;IACpC;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}