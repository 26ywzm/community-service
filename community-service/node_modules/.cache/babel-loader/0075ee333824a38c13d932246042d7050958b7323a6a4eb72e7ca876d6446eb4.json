{"ast":null,"code":"import axios from 'axios';\nconst API = process.env.VUE_APP_API_URL;\nconst BASE_URL = process.env.VUE_APP_BASE_URL;\nexport default {\n  data() {\n    return {\n      title: '',\n      content: '',\n      imageUrl: '',\n      category: 'newsList',\n      imageFile: null,\n      editingArticleId: null,\n      articles: []\n    };\n  },\n  methods: {\n    async fetchArticles(category) {\n      try {\n        const response = await axios.get(`${API}/articles${category ? `?category=${category}` : ''}`);\n        this.articles = response.data;\n      } catch (error) {\n        console.error('获取文章失败:', error);\n      }\n    },\n    async loadArticles(category) {\n      this.category = category; // 更新当前类别\n      await this.fetchArticles(category); // 获取对应类别的文章\n    },\n    handleFileUpload(event) {\n      this.imageFile = event.target.files[0];\n    },\n    async submitArticle() {\n      const formData = new FormData();\n      formData.append('title', this.title);\n      formData.append('content', this.content);\n      formData.append('category', this.category);\n      formData.append('image_url', this.imageUrl);\n      if (this.imageFile) {\n        formData.append('image', this.imageFile);\n      }\n      try {\n        if (this.editingArticleId) {\n          // 编辑模式\n          await axios.put(`${API}/articles/${this.editingArticleId}`, formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n          alert('文章修改成功');\n        } else {\n          // 新建模式\n          await axios.post(`${API}/articles`, formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n          alert('文章发布成功');\n        }\n        this.resetForm();\n        this.fetchArticles();\n      } catch (error) {\n        console.error('提交文章失败:', error);\n        alert('提交失败，请重试。');\n      }\n    },\n    editArticle(article) {\n      this.title = article.title;\n      this.content = article.content;\n      this.imageUrl = article.image_url;\n      this.category = article.category;\n      this.editingArticleId = article.id;\n    },\n    async deleteArticle(articleId) {\n      if (confirm('确定要删除这篇文章吗？')) {\n        try {\n          await axios.delete(`${API}/articles/${articleId}`);\n          this.fetchArticles(); // 重新加载文章列表\n        } catch (error) {\n          console.error('删除文章失败:', error);\n          alert('删除失败，请重试。');\n        }\n      }\n    },\n    resetForm() {\n      this.title = '';\n      this.content = '';\n      this.imageUrl = '';\n      this.imageFile = null;\n      this.category = 'newsList';\n      this.editingArticleId = null;\n      this.$refs.fileInput.value = '';\n    },\n    cancelEdit() {\n      this.resetForm();\n    },\n    getImageUrl(path) {\n      if (!path) return ''; // 处理空路径\n      if (path.startsWith('http')) {\n        return path;\n      }\n      // 使用API变量，它已经包含了/api/auth\n      const uploadPath = path.startsWith('/uploads/') ? path : `/uploads/${path}`;\n      // 从API中移除/api/auth部分，因为这是API端点的路径，不是静态资源的路径\n      const baseUrl = API.replace('/api/auth', '');\n      return `${baseUrl}${uploadPath}`;\n    }\n  },\n  mounted() {\n    this.fetchArticles();\n  }\n};","map":{"version":3,"names":["axios","API","process","env","VUE_APP_API_URL","BASE_URL","VUE_APP_BASE_URL","data","title","content","imageUrl","category","imageFile","editingArticleId","articles","methods","fetchArticles","response","get","error","console","loadArticles","handleFileUpload","event","target","files","submitArticle","formData","FormData","append","put","headers","alert","post","resetForm","editArticle","article","image_url","id","deleteArticle","articleId","confirm","delete","$refs","fileInput","value","cancelEdit","getImageUrl","path","startsWith","uploadPath","baseUrl","replace","mounted"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\ArticleEditor.vue"],"sourcesContent":["<template>\n  <div class=\"article-editor\">\n    <h2>{{ editingArticleId ? \"编辑文章\" : \"编写文章\" }}</h2>\n    <form @submit.prevent=\"submitArticle\">\n      <div>\n        <label>标题：</label>\n        <input type=\"text\" v-model=\"title\" required />\n      </div>\n      <div>\n        <label>内容：</label>\n        <textarea v-model=\"content\" required></textarea>\n      </div>\n      <div>\n        <label>图片链接：</label>\n        <input type=\"text\" v-model=\"imageUrl\" />\n      </div>\n      <div>\n        <label>或上传图片：</label>\n        <input type=\"file\" ref=\"fileInput\" @change=\"handleFileUpload\" />\n      </div>\n      <div>\n        <label>选择发布位置：</label>\n        <select v-model=\"category\" required>\n          <option value=\"carousel\">轮播图</option>\n          <option value=\"hotNews\">热门新闻</option>\n          <option value=\"newsList\">新闻列表</option>\n        </select>\n      </div>\n      <button type=\"submit\">{{ editingArticleId ? \"保存修改\" : \"发布文章\" }}</button>\n      <button v-if=\"editingArticleId\" type=\"button\" @click=\"cancelEdit\">取消编辑</button>\n    </form>\n\n    <!-- 选择文章区域 -->\n    <div class=\"articles-area\">\n      <!-- 切换按钮 -->\n      <div class=\"category-buttons\">\n        <button @click=\"loadArticles('carousel')\">轮播图</button>\n        <button @click=\"loadArticles('hotNews')\">热门新闻</button>\n        <button @click=\"loadArticles('newsList')\">新闻列表</button>\n      </div>\n\n      <!-- 列表展示 -->\n      <div v-for=\"article in articles\" :key=\"article.id\" class=\"article\">\n        <h3>{{ article.title }}</h3>\n        <img v-if=\"article.image_url\" :src=\"getImageUrl(article.image_url)\" :alt=\"article.title\" class=\"article-image\">\n        <p>{{ article.content }}</p>\n        <div class=\"action-buttons\">\n          <button class=\"edit\" @click=\"editArticle(article)\">修改</button>\n          <button @click=\"deleteArticle(article.id)\">删除</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nconst API = process.env.VUE_APP_API_URL;\nconst BASE_URL = process.env.VUE_APP_BASE_URL;\n\nexport default {\n  data() {\n    return {\n      title: '',\n      content: '',\n      imageUrl: '',\n      category: 'newsList',\n      imageFile: null,\n      editingArticleId: null,\n      articles: []\n    };\n  },\n  methods: {\n    async fetchArticles(category) {\n      try {\n        const response = await axios.get(`${API}/articles${category ? `?category=${category}` : ''}`);\n        this.articles = response.data;\n      } catch (error) {\n        console.error('获取文章失败:', error);\n      }\n    },\n    async loadArticles(category) {\n      this.category = category; // 更新当前类别\n      await this.fetchArticles(category); // 获取对应类别的文章\n    },\n    handleFileUpload(event) {\n      this.imageFile = event.target.files[0];\n    },\n    async submitArticle() {\n      const formData = new FormData();\n      formData.append('title', this.title);\n      formData.append('content', this.content);\n      formData.append('category', this.category);\n      formData.append('image_url', this.imageUrl);\n      if (this.imageFile) {\n        formData.append('image', this.imageFile);\n      }\n\n      try {\n        if (this.editingArticleId) {\n          // 编辑模式\n          await axios.put(`${API}/articles/${this.editingArticleId}`, formData, {\n            headers: { 'Content-Type': 'multipart/form-data' }\n          });\n          alert('文章修改成功');\n        } else {\n          // 新建模式\n          await axios.post(`${API}/articles`, formData, {\n            headers: { 'Content-Type': 'multipart/form-data' }\n          });\n          alert('文章发布成功');\n        }\n        this.resetForm();\n        this.fetchArticles();\n      } catch (error) {\n        console.error('提交文章失败:', error);\n        alert('提交失败，请重试。');\n      }\n    },\n    editArticle(article) {\n      this.title = article.title;\n      this.content = article.content;\n      this.imageUrl = article.image_url;\n      this.category = article.category;\n      this.editingArticleId = article.id;\n    },\n    async deleteArticle(articleId) {\n      if (confirm('确定要删除这篇文章吗？')) {\n        try {\n          await axios.delete(`${API}/articles/${articleId}`);\n          this.fetchArticles(); // 重新加载文章列表\n        } catch (error) {\n          console.error('删除文章失败:', error);\n          alert('删除失败，请重试。');\n        }\n      }\n    },\n    resetForm() {\n      this.title = '';\n      this.content = '';\n      this.imageUrl = '';\n      this.imageFile = null;\n      this.category = 'newsList';\n      this.editingArticleId = null;\n      this.$refs.fileInput.value = '';\n    },\n    cancelEdit() {\n      this.resetForm();\n    },\n    getImageUrl(path) {\n      if (!path) return ''; // 处理空路径\n      if (path.startsWith('http')) {\n        return path;\n      }\n      // 使用API变量，它已经包含了/api/auth\n      const uploadPath = path.startsWith('/uploads/') ? path : `/uploads/${path}`;\n      // 从API中移除/api/auth部分，因为这是API端点的路径，不是静态资源的路径\n      const baseUrl = API.replace('/api/auth', '');\n      return `${baseUrl}${uploadPath}`;\n    }\n  },\n  mounted() {\n    this.fetchArticles();\n  }\n};\n</script>\n\n<style scoped>\n.article-image {\n  max-width: 100%;\n  height: auto;\n  margin: 10px 0;\n}\n.article-editor {\n  padding: 20px;\n  max-width: 600px;\n  margin: 0 auto;\n  background-color: #ffffff;\n  border-radius: 10px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n}\n\nh2 {\n  text-align: center;\n  color: #333;\n  margin-bottom: 20px;\n}\n\n/* 新增区域样式 */\n.article-area {\n  margin-bottom: 30px;\n}\n\n.category-buttons {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n}\n\n.category-buttons button {\n  flex: 1;\n  padding: 10px;\n  margin-right: 10px;\n  background-color: #42b983;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.category-buttons button:hover {\n  background-color: #369d73;\n}\n\n.category-buttons button:last-child {\n  margin-right: 0; /* 去掉最后一个按钮的右边距 */\n}\n\n/* 修改按钮和删除按钮的样式 */\n.article .action-buttons {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 10px; /* 上方的间距 */\n}\n\n.action-buttons button {\n  flex: 1; /* 使按钮宽度均匀 */\n  padding: 5px; /* 按钮变小 */\n  margin-right: 5px; /* 按钮之间的间距 */\n  background-color: #e74c3c; /* 删除按钮颜色 */\n  border: none;\n  border-radius: 5px;\n  color: white;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.action-buttons button:hover {\n  background-color: #c0392b; /* 删除按钮悬停颜色 */\n}\n\n.action-buttons button.edit {\n  background-color: #42b983; /* 修改按钮颜色 */\n}\n\n.action-buttons button.edit:hover {\n  background-color: #369d73; /* 修改按钮悬停颜色 */\n}\n\n.form-group {\n  margin-bottom: 60px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 8px;\n  font-weight: bold;\n  color: #555;\n}\n\n.form-group label.required::after {\n  content: '*';\n  color: #e74c3c;\n  margin-left: 5px;\n}\n\ninput[type=\"text\"],\ntextarea,\nselect {\n  width: 100%;\n  padding: 10px;\n  font-size: 16px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  box-sizing: border-box;\n  transition: border-color 0.3s ease;\n}\n\ninput[type=\"text\"]:focus,\ntextarea:focus,\nselect:focus {\n  border-color: #42b983;\n  outline: none;\n}\n\ntextarea {\n  resize: vertical;\n  height: 120px;\n}\n\nbutton {\n  width: 100%;\n  background-color: #42b983;\n  color: white;\n  border: none;\n  padding: 12px 0;\n  border-radius: 5px;\n  font-size: 16px;\n  font-weight: bold;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  margin-top: 15px;\n}\n\nbutton:disabled {\n  background-color: #bdc3c7;\n  cursor: not-allowed;\n}\n\nbutton:not(:disabled):hover {\n  background-color: #369d73;\n}\n\n@media (max-width: 768px) {\n  .article-editor {\n    padding: 15px;\n  }\n\n  button {\n    font-size: 14px;\n    padding: 10px 0;\n    margin-top: 15px;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}