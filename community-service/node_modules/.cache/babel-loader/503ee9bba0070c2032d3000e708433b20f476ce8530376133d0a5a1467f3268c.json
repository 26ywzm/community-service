{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nconst AREA_EMPTY_CODE = \"000000\";\nconst INHERIT_SLOTS = [\"title\", \"cancel\", \"confirm\", \"toolbar\", \"columns-top\", \"columns-bottom\"];\nconst INHERIT_PROPS = [\"title\", \"loading\", \"readonly\", \"optionHeight\", \"swipeDuration\", \"visibleOptionNum\", \"cancelButtonText\", \"confirmButtonText\"];\nconst makeOption = (text = \"\", value = AREA_EMPTY_CODE, children = void 0) => ({\n  text,\n  value,\n  children\n});\nfunction formatDataForCascade({\n  areaList,\n  columnsNum,\n  columnsPlaceholder: placeholder\n}) {\n  const {\n    city_list: city = {},\n    county_list: county = {},\n    province_list: province = {}\n  } = areaList;\n  const showCity = +columnsNum > 1;\n  const showCounty = +columnsNum > 2;\n  const getProvinceChildren = () => {\n    if (showCity) {\n      return placeholder.length > 1 ? [makeOption(placeholder[1], AREA_EMPTY_CODE, showCounty ? [] : void 0)] : [];\n    }\n  };\n  const provinceMap = /* @__PURE__ */new Map();\n  Object.keys(province).forEach(code => {\n    provinceMap.set(code.slice(0, 2), makeOption(province[code], code, getProvinceChildren()));\n  });\n  const cityMap = /* @__PURE__ */new Map();\n  if (showCity) {\n    const getCityChildren = () => {\n      if (showCounty) {\n        return placeholder.length > 2 ? [makeOption(placeholder[2])] : [];\n      }\n    };\n    Object.keys(city).forEach(code => {\n      const option = makeOption(city[code], code, getCityChildren());\n      cityMap.set(code.slice(0, 4), option);\n      const province2 = provinceMap.get(code.slice(0, 2));\n      if (province2) {\n        province2.children.push(option);\n      }\n    });\n  }\n  if (showCounty) {\n    Object.keys(county).forEach(code => {\n      const city2 = cityMap.get(code.slice(0, 4));\n      if (city2) {\n        city2.children.push(makeOption(county[code], code));\n      }\n    });\n  }\n  const options = Array.from(provinceMap.values());\n  if (placeholder.length) {\n    const county2 = showCounty ? [makeOption(placeholder[2])] : void 0;\n    const city2 = showCity ? [makeOption(placeholder[1], AREA_EMPTY_CODE, county2)] : void 0;\n    options.unshift(makeOption(placeholder[0], AREA_EMPTY_CODE, city2));\n  }\n  return options;\n}\nexport { AREA_EMPTY_CODE, INHERIT_PROPS, INHERIT_SLOTS, formatDataForCascade };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}