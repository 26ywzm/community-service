{"ast":null,"code":"const API = process.env.VUE_APP_API_URL;\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      title: '',\n      content: '',\n      imageUrl: '',\n      category: 'newsList',\n      imageFile: null,\n      editingArticleId: null,\n      articles: []\n    };\n  },\n  methods: {\n    async fetchArticles() {\n      try {\n        const response = await axios.get(`${API}/articles?category=newsList`);\n        this.articles = response.data;\n        console.log(response.data); // 检查数据是否获取成功\n      } catch (error) {\n        console.error('获取文章失败:', error);\n      }\n    },\n    handleFileUpload(event) {\n      this.imageFile = event.target.files[0];\n    },\n    async submitArticle() {\n      const formData = new FormData();\n      formData.append('title', this.title);\n      formData.append('content', this.content);\n      formData.append('category', this.category);\n      formData.append('image_url', this.imageUrl);\n      if (this.imageFile) {\n        formData.append('image', this.imageFile);\n      }\n      try {\n        if (this.editingArticleId) {\n          // 编辑模式\n          await axios.put(`${API}/articles/${this.editingArticleId}`, formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n          alert('文章修改成功');\n        } else {\n          // 新建模式\n          await axios.post(`${API}/articles`, formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n          alert('文章发布成功');\n        }\n        this.resetForm();\n        this.fetchArticles();\n      } catch (error) {\n        console.error('提交文章失败:', error);\n        alert('提交失败，请重试。');\n      }\n    },\n    editArticle(article) {\n      this.title = article.title;\n      this.content = article.content;\n      this.imageUrl = article.image_url;\n      this.category = article.category;\n      this.editingArticleId = article.id;\n    },\n    async deleteArticle(articleId) {\n      try {\n        await axios.delete(`${API}/articles/${articleId}`);\n        alert('文章删除成功');\n        this.fetchArticles();\n      } catch (error) {\n        console.error('删除文章失败:', error);\n        alert('删除失败，请重试。');\n      }\n    },\n    resetForm() {\n      this.title = '';\n      this.content = '';\n      this.imageUrl = '';\n      this.imageFile = null;\n      this.category = 'newsList';\n      this.editingArticleId = null;\n      this.$refs.fileInput.value = '';\n    },\n    cancelEdit() {\n      this.resetForm();\n    }\n  },\n  mounted() {\n    this.fetchArticles();\n  }\n};","map":{"version":3,"names":["API","process","env","VUE_APP_API_URL","axios","data","title","content","imageUrl","category","imageFile","editingArticleId","articles","methods","fetchArticles","response","get","console","log","error","handleFileUpload","event","target","files","submitArticle","formData","FormData","append","put","headers","alert","post","resetForm","editArticle","article","image_url","id","deleteArticle","articleId","delete","$refs","fileInput","value","cancelEdit","mounted"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\ArticleEditor.vue"],"sourcesContent":["<template>\r\n  <div class=\"article-editor\">\r\n    <h2>{{ editingArticleId ? \"编辑文章\" : \"编写文章\" }}</h2>\r\n    <form @submit.prevent=\"submitArticle\">\r\n      <div>\r\n        <label>标题：</label>\r\n        <input type=\"text\" v-model=\"title\" required />\r\n      </div>\r\n      <div>\r\n        <label>内容：</label>\r\n        <textarea v-model=\"content\" required></textarea>\r\n      </div>\r\n      <div>\r\n        <label>图片链接：</label>\r\n        <input type=\"text\" v-model=\"imageUrl\" />\r\n      </div>\r\n      <div>\r\n        <label>或上传图片：</label>\r\n        <input type=\"file\" ref=\"fileInput\" @change=\"handleFileUpload\" />\r\n      </div>\r\n      <div>\r\n        <label>选择发布位置：</label>\r\n        <select v-model=\"category\" required>\r\n          <option value=\"carousel\">轮播图</option>\r\n          <option value=\"hotNews\">热门新闻</option>\r\n          <option value=\"newsList\">新闻列表</option>\r\n        </select>\r\n      </div>\r\n      <button type=\"submit\">{{ editingArticleId ? \"保存修改\" : \"发布文章\" }}</button>\r\n      <button v-if=\"editingArticleId\" type=\"button\" @click=\"cancelEdit\">取消编辑</button>\r\n    </form>\r\n\r\n    <!-- 切换按钮 -->\r\n    <div class=\"category-buttons\">\r\n      <button @click=\"loadArticles('carousel')\">轮播图</button>\r\n      <button @click=\"loadArticles('hotNews')\">热门新闻</button>\r\n      <button @click=\"loadArticles('newsList')\">新闻列表</button>\r\n    </div>\r\n\r\n    <!-- 列表展示 -->\r\n    <div v-for=\"article in articles\" :key=\"article.id\" class=\"article\">\r\n      <h3>{{ article.title }}</h3>\r\n      <p>{{ article.content }}</p>\r\n      <button @click=\"editArticle(article)\">修改</button>\r\n      <button @click=\"deleteArticle(article.id)\">删除</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nconst API = process.env.VUE_APP_API_URL;\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      title: '',\r\n      content: '',\r\n      imageUrl: '',\r\n      category: 'newsList',\r\n      imageFile: null,\r\n      editingArticleId: null,\r\n      articles: []\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchArticles() {\r\n      try {\r\n        const response = await axios.get(`${API}/articles?category=newsList`);\r\n        this.articles = response.data;\r\n        console.log(response.data); // 检查数据是否获取成功\r\n      } catch (error) {\r\n        console.error('获取文章失败:', error);\r\n      }\r\n    },\r\n    handleFileUpload(event) {\r\n      this.imageFile = event.target.files[0];\r\n    },\r\n    async submitArticle() {\r\n      const formData = new FormData();\r\n      formData.append('title', this.title);\r\n      formData.append('content', this.content);\r\n      formData.append('category', this.category);\r\n      formData.append('image_url', this.imageUrl);\r\n      if (this.imageFile) {\r\n        formData.append('image', this.imageFile);\r\n      }\r\n\r\n      try {\r\n        if (this.editingArticleId) {\r\n          // 编辑模式\r\n          await axios.put(`${API}/articles/${this.editingArticleId}`, formData, {\r\n            headers: { 'Content-Type': 'multipart/form-data' }\r\n          });\r\n          alert('文章修改成功');\r\n        } else {\r\n          // 新建模式\r\n          await axios.post(`${API}/articles`, formData, {\r\n            headers: { 'Content-Type': 'multipart/form-data' }\r\n          });\r\n          alert('文章发布成功');\r\n        }\r\n        this.resetForm();\r\n        this.fetchArticles();\r\n      } catch (error) {\r\n        console.error('提交文章失败:', error);\r\n        alert('提交失败，请重试。');\r\n      }\r\n    },\r\n    editArticle(article) {\r\n      this.title = article.title;\r\n      this.content = article.content;\r\n      this.imageUrl = article.image_url;\r\n      this.category = article.category;\r\n      this.editingArticleId = article.id;\r\n    },\r\n    async deleteArticle(articleId) {\r\n      try {\r\n        await axios.delete(`${API}/articles/${articleId}`);\r\n        alert('文章删除成功');\r\n        this.fetchArticles();\r\n      } catch (error) {\r\n        console.error('删除文章失败:', error);\r\n        alert('删除失败，请重试。');\r\n      }\r\n    },\r\n    resetForm() {\r\n      this.title = '';\r\n      this.content = '';\r\n      this.imageUrl = '';\r\n      this.imageFile = null;\r\n      this.category = 'newsList';\r\n      this.editingArticleId = null;\r\n      this.$refs.fileInput.value = '';\r\n    },\r\n    cancelEdit() {\r\n      this.resetForm();\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchArticles();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.article-editor {\r\n  padding: 20px;\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n  background-color: #ffffff;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n  color: #333;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 60px;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  font-weight: bold;\r\n  color: #555;\r\n}\r\n\r\n.form-group label.required::after {\r\n  content: '*';\r\n  color: #e74c3c;\r\n  margin-left: 5px;\r\n}\r\n\r\ninput[type=\"text\"],\r\ntextarea,\r\nselect {\r\n  width: 100%;\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  box-sizing: border-box;\r\n  transition: border-color 0.3s ease;\r\n}\r\n\r\ninput[type=\"text\"]:focus,\r\ntextarea:focus,\r\nselect:focus {\r\n  border-color: #42b983;\r\n  outline: none;\r\n}\r\n\r\ntextarea {\r\n  resize: vertical;\r\n  height: 120px;\r\n}\r\n\r\nbutton {\r\n  width: 100%;\r\n  background-color: #42b983;\r\n  color: white;\r\n  border: none;\r\n  padding: 12px 0;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n  margin-top: 15px;\r\n}\r\n\r\nbutton:disabled {\r\n  background-color: #bdc3c7;\r\n  cursor: not-allowed;\r\n}\r\n\r\nbutton:not(:disabled):hover {\r\n  background-color: #369d73;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .article-editor {\r\n    padding: 15px;\r\n  }\r\n  \r\n  button {\r\n    font-size: 14px;\r\n    padding: 10px 0;\r\n    margin-top: 15px;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}