{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"submit-feedback\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"提交您的建议或留言\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.message = $event),\n    placeholder: \"请填写您的留言\",\n    rows: \"4\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.message]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.submitFeedback && $options.submitFeedback(...args))\n  }, \"提交留言\")]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_cache","$event","$data","message","placeholder","rows","required","onClick","args","$options","submitFeedback"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\SubmitFeedback.vue"],"sourcesContent":["<template>\n    <div class=\"submit-feedback\">\n      <h2>提交您的建议或留言</h2>\n      <textarea v-model=\"message\" placeholder=\"请填写您的留言\" rows=\"4\" required></textarea>\n      <button @click=\"submitFeedback\">提交留言</button>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  const BASE_URL = process.env.VUE_APP_BASE_URL;\n  export default {\n    data() {\n      return {\n        message: '', // 用户输入的留言内容\n        maxLength: 500, // 设置最大字符数\n      };\n    },\n    methods: {\n      async submitFeedback() {\n        const userId = localStorage.getItem('userId'); // 假设你已经存储了用户 ID\n        \n        if (!userId) {\n          alert('请先登录');\n          this.$router.push('/login');\n          return;\n        }\n\n        if (!this.message.trim()) {\n          alert('留言内容不能为空');\n          return;\n        }\n\n        if (this.message.length > this.maxLength) {\n          alert(`留言内容不能超过${this.maxLength}字符`);\n          return;\n        }\n\n        try {\n          const response = await axios.post(`${BASE_URL}/api/canteen/feedback`, {\n            user_id: userId,\n            message: this.message.trim(),\n          });\n          alert(response.data.message);\n          this.message = ''; // 清空留言内容\n        } catch (error) {\n          console.error('提交留言失败:', error);\n          let errorMessage = '提交留言失败，请稍后重试';\n          if (error.response) {\n            if (error.response.status === 400) {\n              errorMessage = error.response.data.message;\n            } else if (error.response.status === 401) {\n              errorMessage = '请先登录';\n              this.$router.push('/login');\n            }\n          }\n          alert(errorMessage);\n        }\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .submit-feedback {\n    padding: 20px;\n  }\n  \n  textarea {\n    width: 100%;\n    margin-bottom: 10px;\n    padding: 10px;\n  }\n  \n  button {\n    padding: 10px 20px;\n    background-color: #4CAF50;\n    color: white;\n    border: none;\n    cursor: pointer;\n  }\n  \n  button:hover {\n    background-color: #45a049;\n  }\n  </style>"],"mappings":";;EACSA,KAAK,EAAC;AAAiB;;uBAA5BC,mBAAA,CAIM,OAJNC,UAIM,G,0BAHJC,mBAAA,CAAkB,YAAd,WAAS,sB,gBACbA,mBAAA,CAA+E;IAHrF,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAGyBC,KAAA,CAAAC,OAAO,GAAAF,MAAA;IAAEG,WAAW,EAAC,SAAS;IAACC,IAAI,EAAC,GAAG;IAACC,QAAQ,EAAR;iDAAxCJ,KAAA,CAAAC,OAAO,E,GAC1BJ,mBAAA,CAA6C;IAApCQ,OAAK,EAAAP,MAAA,QAAAA,MAAA,UAAAQ,IAAA,KAAEC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;KAAE,MAAI,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}