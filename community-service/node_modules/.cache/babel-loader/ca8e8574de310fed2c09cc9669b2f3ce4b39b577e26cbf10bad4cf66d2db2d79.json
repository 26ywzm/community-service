{"ast":null,"code":"import axios from 'axios';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport { ref } from 'vue';\nimport { API } from '../config';\nexport default {\n  name: 'OrderManagement',\n  setup() {\n    const orders = ref([]);\n    const loading = ref(false);\n    const statusText = {\n      0: '待处理',\n      1: '处理中',\n      2: '已完成',\n      3: '已取消'\n    };\n    return {\n      orders,\n      loading,\n      statusText\n    };\n  },\n  methods: {\n    async fetchOrders() {\n      try {\n        this.loading = true;\n        const response = await axios.get(`${API}/canteen/orders`, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n          }\n        });\n        console.log('获取到的订单数据:', response.data);\n\n        // 处理订单数据\n        this.orders = response.data.orders.map(order => ({\n          ...order,\n          lastActionTime: 0,\n          items: order.items || [] // 确保 items 存在\n        }));\n\n        // 更新分页信息\n        if (response.data.pagination) {\n          this.pagination = response.data.pagination;\n        }\n      } catch (error) {\n        console.error('获取订单列表失败:', error);\n        ElMessage.error('获取订单列表失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    getStatusType(status) {\n      const statusNum = parseInt(status);\n      switch (statusNum) {\n        case 0:\n          return 'danger';\n        case 1:\n          return 'warning';\n        case 2:\n          return 'success';\n        case 3:\n          return 'info';\n        default:\n          return 'info';\n      }\n    },\n    getStatusText(status) {\n      return this.statusText[status] || '未知状态';\n    },\n    formatDate(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n    async handleProcess(order) {\n      if (order.lastActionTime > Date.now() - 2000) {\n        ElMessage.warning('操作太频繁，请稍后再试');\n        return;\n      }\n      try {\n        order.lastActionTime = Date.now();\n        await axios.put(`${API}/canteen/orders/${order.id}`, {\n          status: 1\n        }, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n          }\n        });\n        order.status = 1;\n        ElMessage.success('订单已开始处理');\n      } catch (error) {\n        console.error('处理订单失败:', error);\n        ElMessage.error('处理订单失败');\n      }\n    },\n    async handleComplete(order) {\n      if (order.lastActionTime > Date.now() - 2000) {\n        ElMessage.warning('操作太频繁，请稍后再试');\n        return;\n      }\n      try {\n        order.lastActionTime = Date.now();\n        await axios.put(`${API}/canteen/orders/${order.id}`, {\n          status: 2\n        }, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n          }\n        });\n        order.status = 2;\n        ElMessage.success('订单已完成');\n      } catch (error) {\n        console.error('完成订单失败:', error);\n        ElMessage.error('完成订单失败');\n      }\n    },\n    async handleDelete(order) {\n      try {\n        await ElMessageBox.confirm('确定要删除这个订单吗？', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        });\n        if (order.lastActionTime > Date.now() - 2000) {\n          ElMessage.warning('操作太频繁，请稍后再试');\n          return;\n        }\n        order.lastActionTime = Date.now();\n        await axios.delete(`${API}/canteen/orders/${order.id}`, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n          }\n        });\n\n        // 从列表中移除订单\n        const index = this.orders.findIndex(o => o.id === order.id);\n        if (index > -1) {\n          this.orders.splice(index, 1);\n        }\n        ElMessage.success('订单已删除');\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('删除订单失败:', error);\n          ElMessage.error('删除订单失败');\n        }\n      }\n    }\n  },\n  mounted() {\n    this.fetchOrders();\n  }\n};","map":{"version":3,"names":["axios","ElMessage","ElMessageBox","ref","API","name","setup","orders","loading","statusText","methods","fetchOrders","response","get","headers","localStorage","getItem","console","log","data","map","order","lastActionTime","items","pagination","error","getStatusType","status","statusNum","parseInt","getStatusText","formatDate","dateString","date","Date","toLocaleString","year","month","day","hour","minute","handleProcess","now","warning","put","id","success","handleComplete","handleDelete","confirm","confirmButtonText","cancelButtonText","type","delete","index","findIndex","o","splice","mounted"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\OrderManagement.vue"],"sourcesContent":["<template>\n  <div class=\"order-management\">\n    <h2>订单管理</h2>\n    <div v-if=\"loading\" class=\"loading\">加载中...</div>\n    <div v-else>\n      <el-table :data=\"orders\" style=\"width: 100%\" v-loading=\"loading\">\n        <el-table-column prop=\"id\" label=\"订单ID\" width=\"80\" />\n        <el-table-column prop=\"username\" label=\"用户名\" width=\"120\" />\n        <el-table-column prop=\"email\" label=\"邮箱\" width=\"180\" />\n        <el-table-column label=\"订单详情\" min-width=\"300\">\n          <template #default=\"scope\">\n            <div class=\"order-items\">\n              <div v-if=\"scope.row.items && scope.row.items.length > 0\">\n                <div v-for=\"item in scope.row.items\" :key=\"item.menu_item_id\" class=\"order-item\">\n                  <div class=\"item-info\">\n                    <span class=\"item-name\">{{ item.name }}</span>\n                    <div class=\"item-details\">\n                      <span class=\"item-quantity\">数量: {{ item.quantity }}</span>\n                      <span class=\"item-price\">单价: ¥{{ item.price }}</span>\n                      <span class=\"item-total\">小计: ¥{{ item.quantity * item.price }}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div v-else class=\"no-items\">暂无订单项</div>\n            </div>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"total_price\" label=\"总价\" width=\"100\">\n          <template #default=\"scope\">\n            <span class=\"price\">¥{{ scope.row.total_price }}</span>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\n          <template #default=\"scope\">\n            <el-tag :type=\"getStatusType(scope.row.status)\">\n              {{ getStatusText(scope.row.status) }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"created_at\" label=\"创建时间\" width=\"180\">\n          <template #default=\"scope\">\n            {{ formatDate(scope.row.created_at) }}\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"200\" fixed=\"right\">\n          <template #default=\"scope\">\n            <div class=\"action-buttons\">\n              <el-button\n                v-if=\"scope.row.status === 0\"\n                type=\"primary\"\n                size=\"small\"\n                @click=\"handleProcess(scope.row)\"\n                :loading=\"scope.row.lastActionTime > Date.now() - 2000\"\n              >\n                处理\n              </el-button>\n              <el-button\n                v-if=\"scope.row.status === 1\"\n                type=\"success\"\n                size=\"small\"\n                @click=\"handleComplete(scope.row)\"\n                :loading=\"scope.row.lastActionTime > Date.now() - 2000\"\n              >\n                完成\n              </el-button>\n              <el-button\n                type=\"danger\"\n                size=\"small\"\n                @click=\"handleDelete(scope.row)\"\n                :loading=\"scope.row.lastActionTime > Date.now() - 2000\"\n              >\n                删除\n              </el-button>\n            </div>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n    <div v-if=\"orders.length === 0 && !loading\">\n      <p class=\"empty-message\">没有找到订单。</p>\n    </div>\n\n    <!-- 对话框 -->\n    <div v-if=\"showDialog\" class=\"dialog-overlay\">\n      <div class=\"dialog\">\n        <p>{{ dialogMessage }}</p>\n        <button @click=\"closeDialog\">确定</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport { ref } from 'vue';\nimport { API } from '../config';\n\nexport default {\n  name: 'OrderManagement',\n  setup() {\n    const orders = ref([]);\n    const loading = ref(false);\n    const statusText = {\n      0: '待处理',\n      1: '处理中',\n      2: '已完成',\n      3: '已取消'\n    };\n\n    return {\n      orders,\n      loading,\n      statusText\n    };\n  },\n  methods: {\n    async fetchOrders() {\n      try {\n        this.loading = true;\n        const response = await axios.get(`${API}/canteen/orders`, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n          }\n        });\n        console.log('获取到的订单数据:', response.data);\n        \n        // 处理订单数据\n        this.orders = response.data.orders.map(order => ({\n          ...order,\n          lastActionTime: 0,\n          items: order.items || [] // 确保 items 存在\n        }));\n        \n        // 更新分页信息\n        if (response.data.pagination) {\n          this.pagination = response.data.pagination;\n        }\n      } catch (error) {\n        console.error('获取订单列表失败:', error);\n        ElMessage.error('获取订单列表失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    getStatusType(status) {\n      const statusNum = parseInt(status);\n      switch (statusNum) {\n        case 0:\n          return 'danger';\n        case 1:\n          return 'warning';\n        case 2:\n          return 'success';\n        case 3:\n          return 'info';\n        default:\n          return 'info';\n      }\n    },\n\n    getStatusText(status) {\n      return this.statusText[status] || '未知状态';\n    },\n\n    formatDate(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n\n    async handleProcess(order) {\n      if (order.lastActionTime > Date.now() - 2000) {\n        ElMessage.warning('操作太频繁，请稍后再试');\n        return;\n      }\n\n      try {\n        order.lastActionTime = Date.now();\n        await axios.put(\n          `${API}/canteen/orders/${order.id}`,\n          { status: 1 },\n          {\n            headers: {\n              'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n            }\n          }\n        );\n        order.status = 1;\n        ElMessage.success('订单已开始处理');\n      } catch (error) {\n        console.error('处理订单失败:', error);\n        ElMessage.error('处理订单失败');\n      }\n    },\n\n    async handleComplete(order) {\n      if (order.lastActionTime > Date.now() - 2000) {\n        ElMessage.warning('操作太频繁，请稍后再试');\n        return;\n      }\n\n      try {\n        order.lastActionTime = Date.now();\n        await axios.put(\n          `${API}/canteen/orders/${order.id}`,\n          { status: 2 },\n          {\n            headers: {\n              'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n            }\n          }\n        );\n        order.status = 2;\n        ElMessage.success('订单已完成');\n      } catch (error) {\n        console.error('完成订单失败:', error);\n        ElMessage.error('完成订单失败');\n      }\n    },\n\n    async handleDelete(order) {\n      try {\n        await ElMessageBox.confirm('确定要删除这个订单吗？', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        });\n\n        if (order.lastActionTime > Date.now() - 2000) {\n          ElMessage.warning('操作太频繁，请稍后再试');\n          return;\n        }\n\n        order.lastActionTime = Date.now();\n        await axios.delete(`${API}/canteen/orders/${order.id}`, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n          }\n        });\n        \n        // 从列表中移除订单\n        const index = this.orders.findIndex(o => o.id === order.id);\n        if (index > -1) {\n          this.orders.splice(index, 1);\n        }\n        \n        ElMessage.success('订单已删除');\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('删除订单失败:', error);\n          ElMessage.error('删除订单失败');\n        }\n      }\n    }\n  },\n  mounted() {\n    this.fetchOrders();\n  }\n};\n</script>\n\n<style scoped>\n.order-management {\n  padding: 20px;\n}\n\nh2 {\n  color: #303133;\n  margin-bottom: 20px;\n}\n\n.el-table {\n  margin-top: 20px;\n  background-color: white;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\n}\n\n.el-table th, .el-table td {\n  padding: 12px 15px;\n  text-align: left;\n  border-bottom: 1px solid #EBEEF5;\n}\n\n.el-table th {\n  background-color: #F5F7FA;\n  color: #606266;\n  font-weight: 500;\n}\n\n.el-table tr:hover {\n  background-color: #F5F7FA;\n}\n\n.el-button {\n  padding: 6px 12px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: all 0.3s;\n  margin: 0 5px;\n}\n\n.el-button:hover {\n  opacity: 0.8;\n}\n\n.dialog-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.dialog {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\n  text-align: center;\n}\n\n.dialog p {\n  margin-bottom: 15px;\n  color: #606266;\n}\n\n.dialog button {\n  background-color: #409EFF;\n  color: white;\n  padding: 8px 20px;\n}\n\n.order-actions {\n  display: flex;\n  gap: 8px;\n}\n\n.action-buttons {\n  display: flex;\n  gap: 8px;\n}\n\n.empty-message {\n  text-align: center;\n  color: #909399;\n  margin-top: 40px;\n}\n\n.user-info {\n  display: flex;\n  flex-direction: column;\n}\n\n.email {\n  font-size: 14px;\n  color: #909399;\n}\n\n.order-items {\n  max-width: 300px;\n  padding: 8px;\n}\n\n.order-item {\n  background-color: #f8f9fa;\n  border-radius: 4px;\n  padding: 8px;\n  margin-bottom: 8px;\n}\n\n.order-item:last-child {\n  margin-bottom: 0;\n}\n\n.item-info {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n}\n\n.item-name {\n  font-weight: bold;\n  color: #303133;\n}\n\n.item-details {\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n  font-size: 13px;\n  color: #606266;\n}\n\n.item-quantity, .item-price, .item-total {\n  margin-right: 12px;\n}\n\n.item-total {\n  color: #409EFF;\n  font-weight: 500;\n}\n\n.price {\n  font-weight: bold;\n}\n\n.status-tag {\n  padding: 2px 6px;\n  border-radius: 4px;\n  font-size: 12px;\n}\n\n.status-0 {\n  background-color: #F56C6C;\n  color: white;\n}\n\n.status-1 {\n  background-color: #67C23A;\n  color: white;\n}\n\n.status-2 {\n  background-color: #409EFF;\n  color: white;\n}\n\n.status-3 {\n  background-color: #909399;\n  color: white;\n}\n\n.time-info {\n  display: flex;\n  flex-direction: column;\n}\n\n.time {\n  font-size: 14px;\n  color: #909399;\n}\n\n.loading {\n  text-align: center;\n  margin-top: 40px;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}