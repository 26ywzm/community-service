{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { handleApiError } from '../utils/errorHandler';\nconst API = process.env.VUE_APP_API_URL;\nexport default {\n  name: 'UserProfile',\n  data() {\n    return {\n      isLoggedIn: !!localStorage.getItem('authToken'),\n      userInfo: {\n        username: '',\n        email: '',\n        role: '',\n        balance: 0\n      },\n      editMode: false,\n      currentPassword: '',\n      newPassword: '',\n      file: null,\n      loading: false,\n      loadError: '',\n      updateSuccess: ''\n    };\n  },\n  async created() {\n    // 从 localStorage 获取基本信息\n    const token = localStorage.getItem('authToken');\n    const role = localStorage.getItem('userRole');\n    const username = localStorage.getItem('username');\n    const email = localStorage.getItem('email');\n    if (!token) {\n      this.isLoggedIn = false;\n    } else {\n      // 立即设置基本信息\n      this.userInfo = {\n        username: username || '',\n        email: email || '',\n        role: role || ''\n      };\n\n      // 异步加载完整用户信息\n      try {\n        await this.fetchUserProfile();\n      } catch (error) {\n        console.error('Failed to fetch user profile:', error);\n        if (error.response && error.response.status === 401) {\n          this.handleUnauthorized();\n        }\n      }\n    }\n  },\n  methods: {\n    formatRole(role) {\n      const roleMap = {\n        'super_admin': '超级管理员',\n        'admin': '管理员',\n        'user': '普通用户'\n      };\n      return roleMap[role] || role;\n    },\n    async retryLoad() {\n      this.loadError = '';\n      await this.fetchUserProfile();\n    },\n    async fetchUserProfile() {\n      this.loading = true;\n      this.loadError = '';\n      try {\n        const token = localStorage.getItem('authToken');\n        if (!token) {\n          console.warn('No auth token found, using local storage data');\n          this.useLocalStorageData();\n          return;\n        }\n        const requestConfig = {\n          method: 'get',\n          url: `${API}/me`,\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        };\n        const response = await axios(requestConfig);\n        // console.log('Profile response:', {\n        //   status: response.status,\n        //   data: response.data\n        // });\n\n        if (response.data && response.data.user) {\n          this.userInfo = response.data.user;\n        } else if (response.data) {\n          this.userInfo = response.data;\n        } else {\n          throw new Error('Invalid response format');\n        }\n      } catch (error) {\n        console.error('Error fetching user profile:', error);\n        if (error.response) {\n          if (error.response.status === 401) {\n            this.handleUnauthorized();\n            return;\n          }\n          this.loadError = `加载失败: ${error.response.data.message || '服务器错误'}`;\n        } else {\n          this.loadError = '网络错误，请检查网络连接';\n        }\n        this.useLocalStorageData();\n      } finally {\n        this.loading = false;\n      }\n    },\n    useLocalStorageData() {\n      this.userInfo = {\n        username: localStorage.getItem('username') || '',\n        email: localStorage.getItem('email') || '',\n        role: localStorage.getItem('userRole') || ''\n      };\n    },\n    handleUnauthorized() {\n      // 清除所有认证信息\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('userRole');\n      localStorage.removeItem('username');\n      localStorage.removeItem('userId');\n      localStorage.removeItem('email');\n      this.isLoggedIn = false;\n    },\n    async updateProfile() {\n      this.loading = true;\n      this.updateSuccess = '';\n      try {\n        const formData = new FormData();\n        formData.append('username', this.userInfo.username);\n        formData.append('email', this.userInfo.email);\n        if (this.currentPassword) {\n          formData.append('currentPassword', this.currentPassword);\n          if (this.newPassword) {\n            formData.append('newPassword', this.newPassword);\n          }\n        }\n        if (this.file) {\n          formData.append('avatar', this.file);\n        }\n        await axios.put(`${API}/me`, formData, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        this.updateSuccess = '个人信息更新成功！';\n        this.editMode = false;\n        this.currentPassword = '';\n        this.newPassword = '';\n        this.file = null;\n        await this.fetchUserProfile();\n      } catch (error) {\n        handleApiError(error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    handleFileUpload(event) {\n      this.file = event.target.files[0];\n    },\n    goToLogin() {\n      this.$router.push('/login');\n    },\n    goToRegister() {\n      this.$router.push('/register');\n    },\n    async logout() {\n      // 清除所有本地存储\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('userRole');\n      localStorage.removeItem('username');\n      localStorage.removeItem('userId');\n      localStorage.removeItem('email');\n\n      // 可选：完全清除所有本地存储\n      // localStorage.clear();\n\n      // 重定向到登录页\n      await this.$router.push('/login');\n\n      // 提示用户\n      alert('已成功退出登录');\n    },\n    cancelEdit() {\n      this.editMode = false;\n      this.currentPassword = '';\n      this.newPassword = '';\n      this.file = null;\n      this.fetchUserProfile();\n    }\n  }\n};","map":{"version":3,"names":["axios","handleApiError","API","process","env","VUE_APP_API_URL","name","data","isLoggedIn","localStorage","getItem","userInfo","username","email","role","balance","editMode","currentPassword","newPassword","file","loading","loadError","updateSuccess","created","token","fetchUserProfile","error","console","response","status","handleUnauthorized","methods","formatRole","roleMap","retryLoad","warn","useLocalStorageData","requestConfig","method","url","headers","user","Error","message","removeItem","updateProfile","formData","FormData","append","put","handleFileUpload","event","target","files","goToLogin","$router","push","goToRegister","logout","alert","cancelEdit"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\Profile.vue"],"sourcesContent":["<template>\n  <div class=\"profile-container\">\n    <div class=\"profile-card\">\n      <!-- 未登录状态 -->\n      <div v-if=\"!isLoggedIn\" class=\"not-logged-in\">\n        <h2>欢迎来到社区</h2>\n        <p>登录或注册以开始您的社区之旅</p>\n        <div class=\"auth-buttons\">\n          <router-link to=\"/login\" class=\"auth-button login-btn\">\n            <span class=\"button-icon\">🔑</span>\n            登录\n          </router-link>\n          <router-link to=\"/register\" class=\"auth-button login-btn\">\n            <span class=\"button-icon\">✨</span>\n            注册\n          </router-link>\n        </div>\n      </div>\n\n      <!-- 加载状态 -->\n      <div v-else-if=\"loading\" class=\"loading-section\">\n        <div class=\"loading-spinner\"></div>\n        <p>正在加载您的个人信息...</p>\n      </div>\n\n      <!-- 个人信息展示 -->\n      <div v-else class=\"profile-content\">\n        <!-- 错误提示 -->\n        <div v-if=\"loadError\" class=\"message error\">\n          <span class=\"message-icon\">⚠️</span>\n          <span>{{ loadError }}</span>\n          <button @click=\"retryLoad\" class=\"btn small\">重试</button>\n        </div>\n\n        <!-- 成功提示 -->\n        <div v-if=\"updateSuccess\" class=\"message success\">\n          <span class=\"message-icon\">✅</span>\n          <span>{{ updateSuccess }}</span>\n        </div>\n\n        <!-- 用户信息展示模式 -->\n        <div v-if=\"!editMode\" class=\"user-info\">\n          <div class=\"avatar-section\">\n            <div class=\"avatar\" :style=\"{ backgroundImage: `url(${userInfo.avatar || '/default-avatar.png'})` }\">\n              <div class=\"avatar-overlay\">\n                <span class=\"role-badge\" :class=\"userInfo.role\">\n                  {{ formatRole(userInfo.role) }}\n                </span>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"info-section\">\n            <h2 style=\"text-align: center;\">{{ userInfo.username }}</h2>\n            <div class=\"info-item\">\n              <span class=\"info-icon\">📧</span>\n              <span class=\"info-label\">邮箱：</span>\n              <span class=\"info-value\">{{ userInfo.email }}</span>\n            </div>\n            <div class=\"info-item\">\n              <span class=\"info-icon\">👑</span>\n              <span class=\"info-label\">角色：</span>\n              <span class=\"info-value\">{{ formatRole(userInfo.role) }}</span>\n            </div>\n          </div>\n\n          <div class=\"action-buttons\">\n            <button class=\"btn primary\" @click=\"editMode = true\">\n              <span class=\"btn-icon\">✏️</span>\n              编辑资料\n            </button>\n            <button class=\"btn outline-danger\" @click=\"logout\">\n              <span class=\"btn-icon\">🚪</span>\n              退出登录\n            </button>\n          </div>\n        </div>\n\n        <!-- 编辑模式 -->\n        <form v-else class=\"edit-form\" @submit.prevent=\"updateProfile\">\n          <h3>编辑个人信息</h3>\n          \n          <div class=\"form-group\">\n            <label>\n              <span class=\"label-icon\">👤</span>\n              用户名\n            </label>\n            <input \n              type=\"text\" \n              v-model=\"userInfo.username\" \n              placeholder=\"请输入用户名\"\n              required\n            />\n          </div>\n\n          <div class=\"form-group\">\n            <label>\n              <span class=\"label-icon\">📧</span>\n              邮箱\n            </label>\n            <input \n              type=\"email\" \n              v-model=\"userInfo.email\" \n              placeholder=\"请输入邮箱\"\n              required\n            />\n          </div>\n\n          <div class=\"form-group\">\n            <label>\n              <span class=\"label-icon\">🔒</span>\n              当前密码\n            </label>\n            <input \n              type=\"password\" \n              v-model=\"currentPassword\" \n              placeholder=\"请输入当前密码\"\n              required\n            />\n          </div>\n\n          <div class=\"form-group\">\n            <label>\n              <span class=\"label-icon\">🔑</span>\n              新密码\n            </label>\n            <input \n              type=\"password\" \n              v-model=\"newPassword\" \n              placeholder=\"如需修改密码请输入新密码\"\n            />\n          </div>\n\n          <div class=\"form-group\">\n            <label>\n              <span class=\"label-icon\">🖼️</span>\n              头像\n            </label>\n            <div class=\"file-upload\">\n              <input \n                type=\"file\" \n                @change=\"handleFileUpload\" \n                accept=\"image/*\" \n                id=\"avatar-upload\"\n              />\n              <label for=\"avatar-upload\" class=\"file-upload-label\">\n                <span class=\"btn-icon\">📤</span>\n                选择图片\n              </label>\n              <span class=\"file-name\" v-if=\"file\">{{ file.name }}</span>\n            </div>\n          </div>\n\n          <div class=\"form-actions\">\n            <button type=\"submit\" class=\"btn primary\" :disabled=\"loading\">\n              <span class=\"btn-icon\">💾</span>\n              {{ loading ? '保存中...' : '保存修改' }}\n            </button>\n            <button type=\"button\" class=\"btn secondary\" @click=\"cancelEdit\">\n              <span class=\"btn-icon\">✖️</span>\n              取消\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { handleApiError } from '../utils/errorHandler';\nconst API = process.env.VUE_APP_API_URL;\n\nexport default {\n  name: 'UserProfile',\n  data() {\n    return {\n      isLoggedIn: !!localStorage.getItem('authToken'),\n      userInfo: {\n        username: '',\n        email: '',\n        role: '',\n        balance: 0\n      },\n      editMode: false,\n      currentPassword: '',\n      newPassword: '',\n      file: null,\n      loading: false,\n      loadError: '',\n      updateSuccess: ''\n    };\n  },\n  async created() {\n    // 从 localStorage 获取基本信息\n    const token = localStorage.getItem('authToken');\n    const role = localStorage.getItem('userRole');\n    const username = localStorage.getItem('username');\n    const email = localStorage.getItem('email');\n\n    if (!token) {\n      this.isLoggedIn = false;\n    } else {\n      // 立即设置基本信息\n      this.userInfo = {\n        username: username || '',\n        email: email || '',\n        role: role || ''\n      };\n\n      // 异步加载完整用户信息\n      try {\n        await this.fetchUserProfile();\n      } catch (error) {\n        console.error('Failed to fetch user profile:', error);\n        if (error.response && error.response.status === 401) {\n          this.handleUnauthorized();\n        }\n      }\n    }\n  },\n  methods: {\n    formatRole(role) {\n      const roleMap = {\n        'super_admin': '超级管理员',\n        'admin': '管理员',\n        'user': '普通用户'\n      };\n      return roleMap[role] || role;\n    },\n\n    async retryLoad() {\n      this.loadError = '';\n      await this.fetchUserProfile();\n    },\n\n    async fetchUserProfile() {\n      this.loading = true;\n      this.loadError = '';\n      try {\n        const token = localStorage.getItem('authToken');\n        \n        if (!token) {\n          console.warn('No auth token found, using local storage data');\n          this.useLocalStorageData();\n          return;\n        }\n\n        const requestConfig = {\n          method: 'get',\n          url: `${API}/me`,\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        };\n\n        const response = await axios(requestConfig);\n        // console.log('Profile response:', {\n        //   status: response.status,\n        //   data: response.data\n        // });\n\n        if (response.data && response.data.user) {\n          this.userInfo = response.data.user;\n        } else if (response.data) {\n          this.userInfo = response.data;\n        } else {\n          throw new Error('Invalid response format');\n        }\n\n      } catch (error) {\n        console.error('Error fetching user profile:', error);\n        if (error.response) {\n          if (error.response.status === 401) {\n            this.handleUnauthorized();\n            return;\n          }\n          this.loadError = `加载失败: ${error.response.data.message || '服务器错误'}`;\n        } else {\n          this.loadError = '网络错误，请检查网络连接';\n        }\n        this.useLocalStorageData();\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    useLocalStorageData() {\n      this.userInfo = {\n        username: localStorage.getItem('username') || '',\n        email: localStorage.getItem('email') || '',\n        role: localStorage.getItem('userRole') || ''\n      };\n    },\n\n    handleUnauthorized() {\n      // 清除所有认证信息\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('userRole');\n      localStorage.removeItem('username');\n      localStorage.removeItem('userId');\n      localStorage.removeItem('email');\n      \n      this.isLoggedIn = false;\n    },\n\n    async updateProfile() {\n      this.loading = true;\n      this.updateSuccess = '';\n      try {\n        const formData = new FormData();\n        formData.append('username', this.userInfo.username);\n        formData.append('email', this.userInfo.email);\n        if (this.currentPassword) {\n          formData.append('currentPassword', this.currentPassword);\n          if (this.newPassword) {\n            formData.append('newPassword', this.newPassword);\n          }\n        }\n        if (this.file) {\n          formData.append('avatar', this.file);\n        }\n\n        await axios.put(`${API}/me`, formData, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n\n        this.updateSuccess = '个人信息更新成功！';\n        this.editMode = false;\n        this.currentPassword = '';\n        this.newPassword = '';\n        this.file = null;\n        await this.fetchUserProfile();\n      } catch (error) {\n        handleApiError(error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    handleFileUpload(event) {\n      this.file = event.target.files[0];\n    },\n    goToLogin() {\n      this.$router.push('/login');\n    },\n    goToRegister() {\n      this.$router.push('/register');\n    },\n    async logout() {\n      // 清除所有本地存储\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('userRole');\n      localStorage.removeItem('username');\n      localStorage.removeItem('userId');\n      localStorage.removeItem('email');\n      \n      // 可选：完全清除所有本地存储\n      // localStorage.clear();\n      \n      // 重定向到登录页\n      await this.$router.push('/login');\n      \n      // 提示用户\n      alert('已成功退出登录');\n    },\n    cancelEdit() {\n      this.editMode = false;\n      this.currentPassword = '';\n      this.newPassword = '';\n      this.file = null;\n      this.fetchUserProfile();\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* 基础变量 */\n:root {\n  --primary-color: #4CAF50;\n  --secondary-color: #2196F3;\n  --danger-color: #f44336;\n  --success-color: #4CAF50;\n  --warning-color: #ff9800;\n  --text-primary: #333333;\n  --text-secondary: #666666;\n  --background-light: #f5f7fa;\n  --card-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\n  --border-radius: 12px;\n  --transition-speed: 0.3s;\n}\n\n/* 容器样式 */\n.profile-container {\n  min-height: 100vh;\n  background-color: var(--background-light);\n  padding: 2rem;\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  overflow-y: auto;\n  position: fixed;\n  width: 100%;\n  top: 0;\n  left: 0;\n}\n\n.profile-card {\n  background: white;\n  border-radius: var(--border-radius);\n  box-shadow: var(--card-shadow);\n  width: 100%;\n  max-width: 800px;\n  overflow: hidden;\n  animation: slideIn 0.5s ease-out;\n  margin: auto;\n  position: relative;\n  overflow-y: auto;\n  max-height: 90vh;\n}\n\n@keyframes slideIn {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.not-logged-in {\n  text-align: center;\n  padding: 2rem;\n  background: white;\n  border-radius: var(--border-radius);\n  box-shadow: var(--box-shadow);\n  margin: 2rem auto;\n  max-width: 400px;\n  animation: fadeIn 0.5s ease-out;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.not-logged-in h2 {\n  color: var(--text-primary);\n  margin-bottom: 1rem;\n  font-size: 1.8rem;\n}\n\n.not-logged-in p {\n  color: var(--text-secondary);\n  margin-bottom: 2rem;\n}\n\n.auth-buttons {\n  display: flex;\n  gap: 1rem;\n  justify-content: center;\n}\n\n.auth-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n  padding: 0.8rem 2rem;\n  border-radius: var(--border-radius);\n  font-size: 1rem;\n  font-weight: 500;\n  text-decoration: none;\n  transition: all 0.3s ease;\n  border: none;\n  cursor: pointer;\n}\n\n.login-btn {\n  background: var(--primary-color);\n  color: white;\n}\n\n.login-btn:hover {\n  background: #43a047;\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(76, 175, 80, 0.2);\n}\n\n.register-btn {\n  background: white;\n  color: var(--primary-color);\n  border: 2px solid var(--primary-color);\n}\n\n.register-btn:hover {\n  background: var(--primary-color);\n  color: white;\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(76, 175, 80, 0.2);\n}\n\n.button-icon {\n  font-size: 1.2rem;\n}\n\n/* 暗色模式支持 */\n@media (prefers-color-scheme: dark) {\n  .not-logged-in {\n    background: #2d2d2d;\n  }\n\n  .not-logged-in h2 {\n    color: #ffffff;\n  }\n\n  .not-logged-in p {\n    color: #b0b0b0;\n  }\n\n  .register-btn {\n    background: #2d2d2d;\n  }\n\n  .register-btn:hover {\n    background: var(--primary-color);\n  }\n}\n\n/* 响应式设计 */\n@media screen and (max-width: 480px) {\n  .not-logged-in {\n    margin: 1rem;\n    padding: 1.5rem;\n  }\n\n  .auth-buttons {\n    flex-direction: column;\n  }\n\n  .auth-button {\n    width: 74%;\n  }\n}\n\n.loading-section {\n  padding: 2rem;\n  text-align: center;\n}\n\n.loading-spinner {\n  border: 4px solid rgba(0, 0, 0, 0.1);\n  border-left-color: var(--primary-color);\n  border-radius: 50%;\n  width: 24px;\n  height: 24px;\n  animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n.profile-content {\n  padding: 2rem;\n}\n\n.message {\n  padding: 1rem;\n  border-radius: var(--border-radius);\n  margin-bottom: 1rem;\n  display: flex;\n  align-items: center;\n}\n\n.message-icon {\n  font-size: 18px;\n  margin-right: 0.5rem;\n}\n\n.message.error {\n  background-color: #f44336;\n  color: white;\n}\n\n.message.success {\n  background-color: #4CAF50;\n  color: white;\n}\n\n.user-info {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.avatar-section {\n  margin-bottom: 1rem;\n}\n\n.avatar {\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  background-size: cover;\n  background-position: center;\n  margin: 0 auto;\n}\n\n.avatar-overlay {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-size: 14px;\n}\n\n.role-badge {\n  padding: 0.2rem 0.5rem;\n  border-radius: var(--border-radius);\n  font-size: 12px;\n}\n\n.role-badge.super_admin {\n  background-color: #2196F3;\n}\n\n.role-badge.admin {\n  background-color: #4CAF50;\n}\n\n.role-badge.user {\n  background-color: #f44336;\n}\n\n.info-section {\n  margin-bottom: 1rem;\n}\n\n.info-item {\n  margin-bottom: 0.5rem;\n  display: flex;\n  align-items: center;\n}\n\n.info-icon {\n  font-size: 18px;\n  margin-right: 0.5rem;\n}\n\n.info-label {\n  font-size: 14px;\n  color: var(--text-secondary);\n}\n\n.info-value {\n  font-size: 14px;\n  color: var(--text-primary);\n}\n\n.action-buttons {\n  margin-top: 1rem;\n  display: flex;\n  gap: 2rem;\n  justify-content: center;\n}\n\n.btn {\n  min-width: 120px;\n  padding: 0.5rem 1.5rem;\n  border: none;\n  border-radius: var(--border-radius);\n  font-size: 14px;\n  cursor: pointer;\n  transition: background-color var(--transition-speed);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n}\n\n/* 在移动端保持合适的间距 */\n@media screen and (max-width: 768px) {\n  .action-buttons {\n    gap: 1rem;\n  }\n}\n\n.edit-form {\n  padding: 2rem;\n}\n\n.form-group {\n  margin-bottom: 1rem;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-size: 14px;\n  color: var(--text-secondary);\n}\n\n.form-group input {\n  width: 100%;\n  padding: 0.5rem;\n  border: 1px solid #ddd;\n  border-radius: var(--border-radius);\n  font-size: 14px;\n}\n\n.form-group input:focus {\n  border-color: var(--primary-color);\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);\n}\n\n.file-upload {\n  margin-top: 0.5rem;\n}\n\n.file-upload-label {\n  padding: 0.5rem 1rem;\n  border: none;\n  border-radius: var(--border-radius);\n  background-color: var(--primary-color);\n  color: white;\n  cursor: pointer;\n}\n\n.file-upload-label:hover {\n  background-color: #3e8e41;\n}\n\n.file-name {\n  font-size: 14px;\n  color: var(--text-secondary);\n  margin-left: 0.5rem;\n}\n\n.form-actions {\n  margin-top: 1rem;\n  display: flex;\n  justify-content: space-between;\n}\n\n.btn.primary {\n  background-color: var(--primary-color);\n  color: white;\n}\n\n.btn.primary:hover {\n  background-color: #43a047;\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(76, 175, 80, 0.2);\n}\n\n.btn.secondary {\n  background-color: var(--secondary-color);\n  color: white;\n}\n\n.btn.secondary:hover {\n  background-color: #1976d2;\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(25, 118, 210, 0.2);\n}\n\n.btn.danger {\n  background-color: var(--danger-color);\n  color: white;\n}\n\n.btn.danger:hover {\n  background-color: #d32f2f;\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(211, 47, 47, 0.2);\n}\n\n.btn.small {\n  padding: 0.2rem 0.5rem;\n  font-size: 12px;\n}\n\n.btn.outline-danger {\n  color:#ffffff;\n  background-color: #3498db;\n  border: 2px solid var(--danger-color);\n  transition: all var(--transition-speed);\n}\n\n.btn.outline-danger:hover {\n  background-color: #ff6b6b;\n  color: white;\n  transform: translateY(-1px);\n  box-shadow: 0 2px 8px rgba(244, 67, 54, 0.3);\n}\n\n/* 响应式设计 */\n@media screen and (max-width: 768px) {\n  .profile-container {\n    padding: 1rem;\n  }\n\n  .profile-card {\n    border-radius: calc(var(--border-radius) / 2);\n  }\n\n  .user-info {\n    padding: 1rem;\n  }\n\n  .avatar {\n    width: 80px;\n    height: 80px;\n  }\n\n  .action-buttons {\n    flex-direction: column;\n    gap: 0.5rem;\n  }\n\n  .btn {\n    width: 100%;\n    justify-content: center;\n  }\n\n  .edit-form {\n    padding: 1rem;\n  }\n\n  .form-actions {\n    flex-direction: column;\n    gap: 0.5rem;\n  }\n\n  .file-upload {\n    flex-direction: column;\n  }\n\n  .file-upload-label {\n    width: 100%;\n    text-align: center;\n    margin-bottom: 0.5rem;\n  }\n}\n\n/* 暗色模式支持 */\n@media (prefers-color-scheme: dark) {\n  :root {\n    --text-primary: #ffffff;\n    --text-secondary: #b0b0b0;\n    --background-light: #1a1a1a;\n    --card-shadow: 0 2px 12px 0 rgba(0,0,0,0.2);\n  }\n\n  .profile-card {\n    background: #2d2d2d;\n  }\n\n  .info-item {\n    background: rgba(255, 255, 255, 0.05);\n  }\n\n  input[type=\"text\"],\n  input[type=\"email\"],\n  input[type=\"password\"] {\n    background: #363636;\n    border-color: #4a4a4a;\n    color: white;\n  }\n\n  input[type=\"text\"]:focus,\n  input[type=\"email\"]:focus,\n  input[type=\"password\"]:focus {\n    border-color: var(--primary-color);\n  }\n\n  .file-upload-label {\n    background: #363636;\n    border: 1px solid #4a4a4a;\n  }\n\n  .file-upload-label:hover {\n    background: #4a4a4a;\n  }\n\n  .message.error {\n    background: rgba(244, 67, 54, 0.2);\n    color: #ff8a80;\n  }\n\n  .message.success {\n    background: rgba(76, 175, 80, 0.2);\n    color: #b9f6ca;\n  }\n\n  .btn.secondary {\n    background: #363636;\n    color: white;\n  }\n\n  .btn.secondary:hover {\n    background: #4a4a4a;\n  }\n\n  .role-badge.super_admin {\n    background: linear-gradient(45deg, #ff9800, #f44336);\n  }\n\n  .role-badge.admin {\n    background: linear-gradient(45deg, #2196F3, #3f51b5);\n  }\n\n  .role-badge.user {\n    background: linear-gradient(45deg, #4CAF50, #009688);\n  }\n\n  .btn.outline-danger {\n    border-color: #ff6b6b;\n    color: #ff6b6b;\n  }\n\n  .btn.outline-danger:hover {\n    background-color: #ff6b6b;\n    color: #1a1a1a;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}