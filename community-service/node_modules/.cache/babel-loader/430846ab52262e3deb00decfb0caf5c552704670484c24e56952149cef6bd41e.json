{"ast":null,"code":"import { ref, onMounted, onUnmounted } from 'vue';\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\nconst API = 'http://localhost:3000/api/auth';\nexport default {\n  name: 'OrderManagement',\n  setup() {\n    const orders = ref([]);\n    const loading = ref(false);\n    const isMobile = ref(false);\n    const currentPage = ref(1);\n    const pageSize = ref(10);\n    const total = ref(0);\n    const statusText = {\n      0: '待处理',\n      1: '处理中',\n      2: '已完成',\n      3: '已取消'\n    };\n    const checkDeviceType = () => {\n      isMobile.value = window.innerWidth <= 768;\n    };\n    const getStatusTagType = status => {\n      const types = {\n        0: 'danger',\n        1: 'warning',\n        2: 'success',\n        3: 'info'\n      };\n      return types[status] || 'info';\n    };\n    const fetchOrders = async () => {\n      try {\n        loading.value = true;\n        const response = await axios.get(`${API}/canteen/orders`, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n          }\n        });\n        orders.value = response.data.orders.map(order => ({\n          ...order,\n          items: order.items || []\n        }));\n        if (response.data.pagination) {\n          total.value = response.data.pagination.total;\n        }\n      } catch (error) {\n        console.error('获取订单列表失败:', error);\n        ElMessage.error('获取订单列表失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n    const handleButtonClick = async order => {\n      try {\n        const newStatus = parseInt(order.status) + 1;\n        await axios.put(`${API}/canteen/orders/${order.id}`, {\n          status: newStatus\n        }, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n          }\n        });\n        order.status = newStatus;\n        ElMessage.success('订单状态更新成功');\n      } catch (error) {\n        console.error('更新订单状态失败:', error);\n        ElMessage.error('更新订单状态失败');\n      }\n    };\n    const handleDeleteOrder = async order => {\n      try {\n        await ElMessageBox.confirm('确定要删除这个订单吗？', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        });\n        await axios.delete(`${API}/canteen/orders/${order.id}`, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n          }\n        });\n        orders.value = orders.value.filter(o => o.id !== order.id);\n        ElMessage.success('订单删除成功');\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('删除订单失败:', error);\n          ElMessage.error('删除订单失败');\n        }\n      }\n    };\n    const handlePageChange = page => {\n      currentPage.value = page;\n      fetchOrders();\n    };\n    onMounted(() => {\n      checkDeviceType();\n      window.addEventListener('resize', checkDeviceType);\n      fetchOrders();\n    });\n    onUnmounted(() => {\n      window.removeEventListener('resize', checkDeviceType);\n    });\n    return {\n      orders,\n      loading,\n      isMobile,\n      currentPage,\n      pageSize,\n      total,\n      statusText,\n      getStatusTagType,\n      handleButtonClick,\n      handleDeleteOrder,\n      handlePageChange\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","axios","ElMessage","API","name","setup","orders","loading","isMobile","currentPage","pageSize","total","statusText","checkDeviceType","value","window","innerWidth","getStatusTagType","status","types","fetchOrders","response","get","headers","localStorage","getItem","data","map","order","items","pagination","error","console","handleButtonClick","newStatus","parseInt","put","id","success","handleDeleteOrder","ElMessageBox","confirm","confirmButtonText","cancelButtonText","type","delete","filter","o","handlePageChange","page","addEventListener","removeEventListener"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\OrderManagement.vue"],"sourcesContent":["<template>\n  <div class=\"order-management\">\n    <div class=\"header\">\n      <h2>订单管理</h2>\n    </div>\n\n    <div class=\"content\" v-loading=\"loading\">\n      <!-- 移动端视图 -->\n      <div v-if=\"isMobile\" class=\"mobile-view\">\n        <el-card v-for=\"order in orders\" :key=\"order.id\" class=\"order-card\">\n          <div class=\"order-header\">\n            <div class=\"order-id\">#{{ order.id }}</div>\n            <el-tag :type=\"getStatusTagType(order.status)\" size=\"small\">\n              {{ statusText[order.status] }}\n            </el-tag>\n          </div>\n\n          <div class=\"customer-info\">\n            <div class=\"username\">{{ order.username }}</div>\n            <div class=\"email\">{{ order.email }}</div>\n          </div>\n\n          <div class=\"order-items\">\n            <div v-for=\"item in order.items\" :key=\"item.menu_item_id\" class=\"item\">\n              <div class=\"item-name\">{{ item.name }}</div>\n              <div class=\"item-details\">\n                <span>{{ item.quantity }}份</span>\n                <span>¥{{ item.price }}/份</span>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"order-footer\">\n            <div class=\"total\">总计: ¥{{ order.total_price }}</div>\n            <div class=\"actions\">\n              <el-button v-if=\"order.status === 0\" type=\"primary\" size=\"small\" @click=\"handleButtonClick(order)\">\n                开始处理\n              </el-button>\n              <el-button v-if=\"order.status === 1\" type=\"success\" size=\"small\" @click=\"handleButtonClick(order)\">\n                完成订单\n              </el-button>\n              <el-button v-if=\"order.status === 2\" type=\"danger\" size=\"small\" @click=\"handleDeleteOrder(order)\">\n                删除订单\n              </el-button>\n            </div>\n          </div>\n        </el-card>\n      </div>\n\n      <!-- PC端视图 -->\n      <div v-else class=\"desktop-view\">\n        <el-table :data=\"orders\" style=\"width: 100%\">\n          <el-table-column label=\"订单信息\" width=\"300\">\n            <template #default=\"{ row }\">\n              <div class=\"order-basic-info\">\n                <div class=\"order-id\">#{{ row.id }}</div>\n                <div class=\"customer\">\n                  <div>{{ row.username }}</div>\n                  <div class=\"email\">{{ row.email }}</div>\n                </div>\n              </div>\n            </template>\n          </el-table-column>\n\n          <el-table-column label=\"订单内容\">\n            <template #default=\"{ row }\">\n              <div class=\"items-list\">\n                <el-tag \n                  v-for=\"item in row.items\" \n                  :key=\"item.menu_item_id\"\n                  size=\"small\"\n                  class=\"item-tag\"\n                >\n                  {{ item.name }} × {{ item.quantity }}\n                </el-tag>\n              </div>\n            </template>\n          </el-table-column>\n\n          <el-table-column label=\"总价\" width=\"120\" align=\"right\">\n            <template #default=\"{ row }\">\n              <span class=\"total-price\">¥{{ row.total_price }}</span>\n            </template>\n          </el-table-column>\n\n          <el-table-column label=\"状态\" width=\"100\" align=\"center\">\n            <template #default=\"{ row }\">\n              <el-tag :type=\"getStatusTagType(row.status)\" size=\"small\">\n                {{ statusText[row.status] }}\n              </el-tag>\n            </template>\n          </el-table-column>\n\n          <el-table-column label=\"操作\" width=\"200\" align=\"center\">\n            <template #default=\"{ row }\">\n              <el-button-group>\n                <el-button \n                  v-if=\"row.status === 0\" \n                  type=\"primary\" \n                  size=\"small\" \n                  @click=\"handleButtonClick(row)\"\n                >\n                  开始处理\n                </el-button>\n                <el-button \n                  v-if=\"row.status === 1\" \n                  type=\"success\" \n                  size=\"small\" \n                  @click=\"handleButtonClick(row)\"\n                >\n                  完成订单\n                </el-button>\n                <el-button \n                  v-if=\"row.status === 2\" \n                  type=\"danger\" \n                  size=\"small\" \n                  @click=\"handleDeleteOrder(row)\"\n                >\n                  删除订单\n                </el-button>\n              </el-button-group>\n            </template>\n          </el-table-column>\n        </el-table>\n      </div>\n\n      <!-- 分页 -->\n      <div class=\"pagination\">\n        <el-pagination\n          v-model:current-page=\"currentPage\"\n          :page-size=\"pageSize\"\n          :total=\"total\"\n          layout=\"prev, pager, next\"\n          @current-change=\"handlePageChange\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, onUnmounted } from 'vue';\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\n\nconst API = 'http://localhost:3000/api/auth';\n\nexport default {\n  name: 'OrderManagement',\n  \n  setup() {\n    const orders = ref([]);\n    const loading = ref(false);\n    const isMobile = ref(false);\n    const currentPage = ref(1);\n    const pageSize = ref(10);\n    const total = ref(0);\n\n    const statusText = {\n      0: '待处理',\n      1: '处理中',\n      2: '已完成',\n      3: '已取消'\n    };\n\n    const checkDeviceType = () => {\n      isMobile.value = window.innerWidth <= 768;\n    };\n\n    const getStatusTagType = (status) => {\n      const types = {\n        0: 'danger',\n        1: 'warning',\n        2: 'success',\n        3: 'info'\n      };\n      return types[status] || 'info';\n    };\n\n    const fetchOrders = async () => {\n      try {\n        loading.value = true;\n        const response = await axios.get(`${API}/canteen/orders`, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n          }\n        });\n        \n        orders.value = response.data.orders.map(order => ({\n          ...order,\n          items: order.items || []\n        }));\n\n        if (response.data.pagination) {\n          total.value = response.data.pagination.total;\n        }\n      } catch (error) {\n        console.error('获取订单列表失败:', error);\n        ElMessage.error('获取订单列表失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    const handleButtonClick = async (order) => {\n      try {\n        const newStatus = parseInt(order.status) + 1;\n        await axios.put(`${API}/canteen/orders/${order.id}`, \n          { status: newStatus },\n          {\n            headers: {\n              'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n            }\n          }\n        );\n        order.status = newStatus;\n        ElMessage.success('订单状态更新成功');\n      } catch (error) {\n        console.error('更新订单状态失败:', error);\n        ElMessage.error('更新订单状态失败');\n      }\n    };\n\n    const handleDeleteOrder = async (order) => {\n      try {\n        await ElMessageBox.confirm('确定要删除这个订单吗？', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        });\n\n        await axios.delete(`${API}/canteen/orders/${order.id}`, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n          }\n        });\n        \n        orders.value = orders.value.filter(o => o.id !== order.id);\n        ElMessage.success('订单删除成功');\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('删除订单失败:', error);\n          ElMessage.error('删除订单失败');\n        }\n      }\n    };\n\n    const handlePageChange = (page) => {\n      currentPage.value = page;\n      fetchOrders();\n    };\n\n    onMounted(() => {\n      checkDeviceType();\n      window.addEventListener('resize', checkDeviceType);\n      fetchOrders();\n    });\n\n    onUnmounted(() => {\n      window.removeEventListener('resize', checkDeviceType);\n    });\n\n    return {\n      orders,\n      loading,\n      isMobile,\n      currentPage,\n      pageSize,\n      total,\n      statusText,\n      getStatusTagType,\n      handleButtonClick,\n      handleDeleteOrder,\n      handlePageChange\n    };\n  }\n};\n</script>\n\n<style scoped>\n.order-management {\n  padding: 20px;\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.header {\n  margin-bottom: 24px;\n}\n\n.header h2 {\n  margin: 0;\n  font-size: 24px;\n  color: #303133;\n}\n\n/* 移动端样式 */\n.mobile-view {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n}\n\n.order-card {\n  margin-bottom: 16px;\n}\n\n.order-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 12px;\n}\n\n.order-id {\n  font-size: 18px;\n  font-weight: bold;\n  color: #303133;\n}\n\n.customer-info {\n  margin-bottom: 16px;\n}\n\n.username {\n  font-size: 16px;\n  color: #303133;\n}\n\n.email {\n  font-size: 14px;\n  color: #909399;\n}\n\n.order-items {\n  border-top: 1px solid #EBEEF5;\n  border-bottom: 1px solid #EBEEF5;\n  padding: 12px 0;\n  margin: 12px 0;\n}\n\n.item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 0;\n}\n\n.item-name {\n  font-weight: 500;\n  color: #303133;\n}\n\n.item-details {\n  color: #606266;\n  font-size: 14px;\n}\n\n.item-details span {\n  margin-left: 12px;\n}\n\n.order-footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 16px;\n}\n\n.total {\n  font-size: 16px;\n  font-weight: bold;\n  color: #F56C6C;\n}\n\n/* PC端样式 */\n.desktop-view {\n  background: #fff;\n  border-radius: 4px;\n}\n\n.order-basic-info {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.items-list {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n}\n\n.item-tag {\n  margin-right: 8px;\n}\n\n.total-price {\n  font-weight: bold;\n  color: #F56C6C;\n}\n\n/* 分页样式 */\n.pagination {\n  margin-top: 24px;\n  display: flex;\n  justify-content: center;\n}\n\n/* 响应式调整 */\n@media screen and (max-width: 768px) {\n  .order-management {\n    padding: 12px;\n  }\n  \n  .header {\n    margin-bottom: 16px;\n  }\n  \n  .header h2 {\n    font-size: 20px;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}