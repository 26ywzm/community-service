{"ast":null,"code":"const API = process.env.VUE_APP_API_URL;\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\nexport default {\n  data() {\n    return {\n      orders: [],\n      // 存储所有订单信息\n      showDialog: false,\n      dialogMessage: '',\n      lastActionTime: 0,\n      // 记录上一次操作的时间戳\n      loading: false,\n      // 定义有效的状态转换\n      statusMap: {\n        'pending': '1',\n        // 待处理 -> 处理中\n        '1': '2',\n        // 处理中 -> 已完成\n        '2': '3',\n        // 已完成 -> 已取消\n        '1': 'processing',\n        '2': 'completed',\n        '3': 'cancelled'\n      },\n      // 状态显示文本\n      statusText: {\n        'pending': '待处理',\n        '1': '处理中',\n        '2': '已完成',\n        '3': '已取消',\n        'processing': '处理中',\n        'completed': '已完成',\n        'cancelled': '已取消'\n      }\n    };\n  },\n  mounted() {\n    this.fetchOrders(); // 加载所有订单\n  },\n  methods: {\n    async fetchOrders() {\n      this.loading = true;\n      try {\n        const response = await axios.get(`${API}/canteen/orders`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('authToken')}`\n          }\n        });\n\n        // 确保响应数据是数组\n        const ordersData = Array.isArray(response.data) ? response.data : Array.isArray(response.data.orders) ? response.data.orders : [];\n        this.orders = ordersData.map(order => ({\n          ...order,\n          lastActionTime: 0\n        }));\n        if (this.orders.length === 0) {\n          ElMessage.info('暂无订单记录');\n        }\n      } catch (error) {\n        console.error('获取订单列表失败:', error);\n        if (error.response?.status === 403) {\n          ElMessage.warning('您没有权限访问订单管理');\n        } else {\n          ElMessage.error('获取订单列表失败，请重试');\n        }\n      } finally {\n        this.loading = false;\n      }\n    },\n    async handleButtonClick(order, newStatus) {\n      if (!this.canPerformAction(order)) {\n        ElMessage.warning('操作太频繁，请稍后再试');\n        return;\n      }\n      try {\n        const mappedStatus = this.statusMap[order.status.toLowerCase()];\n        if (!mappedStatus) {\n          ElMessage.error(`当前状态 ${order.status} 无法进行操作`);\n          return;\n        }\n        if (mappedStatus === '3') {\n          await this.deleteOrder(order.id);\n        } else {\n          await this.updateOrderStatus(order, mappedStatus);\n        }\n        // 操作成功后刷新订单列表\n        await this.fetchOrders();\n      } catch (error) {\n        console.error('操作失败:', error);\n        ElMessage.error('操作失败，请重试');\n      }\n    },\n    canPerformAction(order) {\n      const currentTime = Date.now();\n      const timeElapsed = currentTime - order.lastActionTime;\n      const delay = 2 * 60 * 1000; // 2分钟\n      return timeElapsed >= delay;\n    },\n    async updateOrderStatus(order, status) {\n      try {\n        console.log('Updating order status:', {\n          orderId: order.id,\n          status: status\n        });\n        const response = await axios.put(`${API}/canteen/orders/${order.id}`, {\n          status: this.statusMap[status] || status\n        }, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        ElMessage.success(`订单状态已更新为${this.statusText[status] || status}`);\n        order.lastActionTime = Date.now();\n        order.status = status; // 更新本地状态\n        await this.fetchOrders(); // 刷新订单列表\n      } catch (error) {\n        console.error('更新订单状态失败:', error);\n        console.error('错误详情:', error.response?.data);\n        ElMessage.error(error.response?.data?.message || '更新订单状态失败，请重试');\n        throw error;\n      }\n    },\n    async deleteOrder(orderId) {\n      try {\n        await axios.delete(`${API}/canteen/orders/${orderId}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('authToken')}`\n          }\n        });\n        ElMessage.success('订单已删除');\n        this.orders = this.orders.filter(order => order.id !== orderId);\n      } catch (error) {\n        console.error('删除订单失败:', error);\n        throw error;\n      }\n    },\n    closeDialog() {\n      this.showDialog = false;\n      this.dialogMessage = '';\n    },\n    formatDate(dateString) {\n      const options = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      };\n      return new Date(dateString).toLocaleDateString('zh-CN', options);\n    }\n  }\n};","map":{"version":3,"names":["API","process","env","VUE_APP_API_URL","axios","ElMessage","data","orders","showDialog","dialogMessage","lastActionTime","loading","statusMap","statusText","mounted","fetchOrders","methods","response","get","headers","Authorization","localStorage","getItem","ordersData","Array","isArray","map","order","length","info","error","console","status","warning","handleButtonClick","newStatus","canPerformAction","mappedStatus","toLowerCase","deleteOrder","id","updateOrderStatus","currentTime","Date","now","timeElapsed","delay","log","orderId","put","success","message","delete","filter","closeDialog","formatDate","dateString","options","year","month","day","hour","minute","toLocaleDateString"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\OrderManagement.vue"],"sourcesContent":["<template>\n    <div class=\"order-management\">\n      <h2>订单管理</h2>\n  \n      <div v-if=\"orders.length > 0\">\n        <table>\n          <thead>\n            <tr>\n              <th>订单 ID</th>\n              <th>用户</th>\n              <th>邮箱</th>\n              <th>总价格</th>\n              <th>创建时间</th>\n              <th>状态</th>\n              <th>详细内容</th>\n              <th>操作</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"order in orders\" :key=\"order.id\">\n              <td>{{ order.id }}</td>\n              <td>{{ order.username }}</td>\n              <td>{{ order.email }}</td>\n              <td>{{ order.total_price }} 元</td>\n              <td>{{ formatDate(order.created_at) }}</td>\n              <td>{{ statusText[order.status] || order.status }}</td>\n              <td>\n                <ul>\n                  <li v-for=\"item in order.items\" :key=\"item.menu_item_id\">\n                    {{ item.name }} ({{ item.quantity }}): {{ item.total }} 元\n                  </li>\n                </ul>\n              </td>\n              <td class=\"order-actions\">\n                <button \n                  v-if=\"order.status === 'pending'\" \n                  class=\"btn-confirm\"\n                  @click=\"handleButtonClick(order, '1')\"\n                >开始处理</button>\n  \n                <button \n                  v-if=\"order.status === '1'\" \n                  class=\"btn-complete\"\n                  @click=\"handleButtonClick(order, '2')\"\n                >完成订单</button>\n  \n                <button \n                  v-if=\"order.status === '2'\" \n                  class=\"btn-delete\"\n                  @click=\"handleButtonClick(order, '3')\"\n                >取消订单</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n  \n      <div v-else>\n        <p class=\"empty-message\">没有找到订单。</p>\n      </div>\n\n      <!-- 对话框 -->\n      <div v-if=\"showDialog\" class=\"dialog-overlay\">\n        <div class=\"dialog\">\n          <p>{{ dialogMessage }}</p>\n          <button @click=\"closeDialog\">确定</button>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  const API = process.env.VUE_APP_API_URL;\n  import axios from 'axios';\n  import { ElMessage } from 'element-plus';\n  \n  export default {\n    data() {\n      return {\n        orders: [], // 存储所有订单信息\n        showDialog: false,\n        dialogMessage: '',\n        lastActionTime: 0, // 记录上一次操作的时间戳\n        loading: false,\n        // 定义有效的状态转换\n        statusMap: {\n          'pending': '1',       // 待处理 -> 处理中\n          '1': '2',             // 处理中 -> 已完成\n          '2': '3',             // 已完成 -> 已取消\n          '1': 'processing',\n          '2': 'completed',\n          '3': 'cancelled'\n        },\n        // 状态显示文本\n        statusText: {\n          'pending': '待处理',\n          '1': '处理中',\n          '2': '已完成',\n          '3': '已取消',\n          'processing': '处理中',\n          'completed': '已完成',\n          'cancelled': '已取消'\n        }\n      };\n    },\n    mounted() {\n      this.fetchOrders(); // 加载所有订单\n    },\n    methods: {\n      async fetchOrders() {\n        this.loading = true;\n        try {\n          const response = await axios.get(`${API}/canteen/orders`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('authToken')}`\n            }\n          });\n          \n          // 确保响应数据是数组\n          const ordersData = Array.isArray(response.data) ? response.data : \n                           Array.isArray(response.data.orders) ? response.data.orders : [];\n          \n          this.orders = ordersData.map(order => ({\n            ...order,\n            lastActionTime: 0\n          }));\n\n          if (this.orders.length === 0) {\n            ElMessage.info('暂无订单记录');\n          }\n        } catch (error) {\n          console.error('获取订单列表失败:', error);\n          if (error.response?.status === 403) {\n            ElMessage.warning('您没有权限访问订单管理');\n          } else {\n            ElMessage.error('获取订单列表失败，请重试');\n          }\n        } finally {\n          this.loading = false;\n        }\n      },\n      \n      async handleButtonClick(order, newStatus) {\n        if (!this.canPerformAction(order)) {\n          ElMessage.warning('操作太频繁，请稍后再试');\n          return;\n        }\n\n        try {\n          const mappedStatus = this.statusMap[order.status.toLowerCase()];\n          if (!mappedStatus) {\n            ElMessage.error(`当前状态 ${order.status} 无法进行操作`);\n            return;\n          }\n\n          if (mappedStatus === '3') {\n            await this.deleteOrder(order.id);\n          } else {\n            await this.updateOrderStatus(order, mappedStatus);\n          }\n          // 操作成功后刷新订单列表\n          await this.fetchOrders();\n        } catch (error) {\n          console.error('操作失败:', error);\n          ElMessage.error('操作失败，请重试');\n        }\n      },\n\n      canPerformAction(order) {\n        const currentTime = Date.now();\n        const timeElapsed = currentTime - order.lastActionTime;\n        const delay = 2 * 60 * 1000; // 2分钟\n        return timeElapsed >= delay;\n      },\n\n      async updateOrderStatus(order, status) {\n        try {\n          console.log('Updating order status:', { orderId: order.id, status: status });\n          const response = await axios.put(\n            `${API}/canteen/orders/${order.id}`, \n            { status: this.statusMap[status] || status }, \n            {\n              headers: {\n                'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\n                'Content-Type': 'application/json'\n              }\n            }\n          );\n          \n          ElMessage.success(`订单状态已更新为${this.statusText[status] || status}`);\n          order.lastActionTime = Date.now();\n          order.status = status; // 更新本地状态\n          await this.fetchOrders(); // 刷新订单列表\n        } catch (error) {\n          console.error('更新订单状态失败:', error);\n          console.error('错误详情:', error.response?.data);\n          ElMessage.error(error.response?.data?.message || '更新订单状态失败，请重试');\n          throw error;\n        }\n      },\n\n      async deleteOrder(orderId) {\n        try {\n          await axios.delete(`${API}/canteen/orders/${orderId}`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('authToken')}`\n            }\n          });\n          ElMessage.success('订单已删除');\n          this.orders = this.orders.filter(order => order.id !== orderId);\n        } catch (error) {\n          console.error('删除订单失败:', error);\n          throw error;\n        }\n      },\n\n      closeDialog() {\n        this.showDialog = false;\n        this.dialogMessage = '';\n      },\n\n      formatDate(dateString) {\n        const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n        return new Date(dateString).toLocaleDateString('zh-CN', options);\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .order-management {\n    padding: 20px;\n  }\n\n  h2 {\n    color: #303133;\n    margin-bottom: 20px;\n  }\n\n  table {\n    width: 100%;\n    border-collapse: collapse;\n    margin-top: 20px;\n    background-color: white;\n    border-radius: 8px;\n    overflow: hidden;\n    box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\n  }\n\n  th, td {\n    padding: 12px 15px;\n    text-align: left;\n    border-bottom: 1px solid #EBEEF5;\n  }\n\n  th {\n    background-color: #F5F7FA;\n    color: #606266;\n    font-weight: 500;\n  }\n\n  tr:hover {\n    background-color: #F5F7FA;\n  }\n\n  button {\n    padding: 6px 12px;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    transition: all 0.3s;\n    margin: 0 5px;\n  }\n\n  button:hover {\n    opacity: 0.8;\n  }\n\n  .dialog-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 1000;\n  }\n\n  .dialog {\n    background-color: white;\n    padding: 20px;\n    border-radius: 8px;\n    box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\n    text-align: center;\n  }\n\n  .dialog p {\n    margin-bottom: 15px;\n    color: #606266;\n  }\n\n  .dialog button {\n    background-color: #409EFF;\n    color: white;\n    padding: 8px 20px;\n  }\n\n  .order-actions {\n    display: flex;\n    gap: 8px;\n  }\n\n  .btn-confirm {\n    background-color: #67C23A;\n    color: white;\n  }\n\n  .btn-complete {\n    background-color: #409EFF;\n    color: white;\n  }\n\n  .btn-delete {\n    background-color: #F56C6C;\n    color: white;\n  }\n\n  .empty-message {\n    text-align: center;\n    color: #909399;\n    margin-top: 40px;\n  }\n\n  ul {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n  }\n\n  li {\n    margin: 5px 0;\n    color: #606266;\n  }\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}