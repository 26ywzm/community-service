{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"order-detail\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"订单详细信息\", -1 /* HOISTED */)), $data.order ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"h3\", null, \"订单 ID: \" + _toDisplayString($data.order.id), 1 /* TEXT */), $data.order.email ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, \"用户邮箱: \" + _toDisplayString($data.order.email), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.order.status ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, \"订单状态: \" + _toDisplayString($data.order.status), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"p\", null, \"总价格: \" + _toDisplayString($data.order.total_price) + \" 元\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"创建时间: \" + _toDisplayString($options.formatDate($data.order.created_at)), 1 /* TEXT */), _cache[1] || (_cache[1] = _createElementVNode(\"h4\", null, \"订单内容:\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.order.details, detail => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: detail.menu_item.id\n    }, _toDisplayString(detail.menu_item.name) + \" (\" + _toDisplayString(detail.quantity) + \"): \" + _toDisplayString(detail.total_price) + \" 元 \", 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _cache[2] || (_cache[2] = [_createElementVNode(\"p\", null, \"正在加载订单信息...\", -1 /* HOISTED */)]))), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.goBack && $options.goBack(...args))\n  }, \"返回\")]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$data","order","_hoisted_2","_toDisplayString","id","email","_hoisted_3","_createCommentVNode","status","_hoisted_4","total_price","$options","formatDate","created_at","_Fragment","_renderList","details","detail","menu_item","name","quantity","_hoisted_5","_cache","onClick","args","goBack"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\OrderDetail.vue"],"sourcesContent":["<template>\r\n    <div class=\"order-detail\">\r\n        <h2>订单详细信息</h2>\r\n\r\n        <div v-if=\"order\">\r\n            <h3>订单 ID: {{ order.id }}</h3>\r\n            <p v-if=\"order.email\">用户邮箱: {{ order.email }}</p>\r\n            <p v-if=\"order.status\">订单状态: {{ order.status }}</p>\r\n            <p>总价格: {{ order.total_price }} 元</p>\r\n            <p>创建时间: {{ formatDate(order.created_at) }}</p>\r\n            <h4>订单内容:</h4>\r\n            <ul>\r\n                <li v-for=\"detail in order.details\" :key=\"detail.menu_item.id\">\r\n                    {{ detail.menu_item.name }} ({{ detail.quantity }}): {{ detail.total_price }} 元\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n        <div v-else>\r\n            <p>正在加载订单信息...</p>\r\n        </div>\r\n\r\n        <button @click=\"goBack\">返回</button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            order: null, // 存储订单详情\r\n        };\r\n    },\r\n    created() {\r\n        const orderId = this.$route.params.orderId; // 从路由获取订单 ID\r\n        console.log('获取的 orderId:', orderId); // 打印 orderId\r\n        if (orderId && orderId !== ':orderId') {\r\n            this.fetchOrderDetails(orderId); // 获取订单详细信息\r\n        } else {\r\n            alert('订单 ID 无效');\r\n        }\r\n    },\r\n    methods: {\r\n        async fetchOrderDetails(orderId) {\r\n            try {\r\n                const response = await axios.get(`http://localhost:3000/api/auth/canteen/order/${orderId}`, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${localStorage.getItem('authToken')}`,\r\n                    },\r\n                });\r\n\r\n                console.log('获取的订单信息:', response.data);\r\n\r\n                this.order = response.data; // 保存订单信息\r\n\r\n                console.log('order email:', this.order.email); // 详细日志\r\n                console.log('order status:', this.order.status); // 详细日志\r\n\r\n            } catch (error) {\r\n                console.error('获取订单详细信息失败:', error);\r\n                alert('获取订单信息失败，请重试。');\r\n            }\r\n        },\r\n\r\n        formatDate(dateString) {\r\n            const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\r\n            return new Date(dateString).toLocaleDateString('zh-CN', options); // 格式化日期\r\n        },\r\n\r\n        goBack() {\r\n            this.$router.push('/discover'); // 返回到点餐页面\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.order-detail {\r\n    padding: 20px;\r\n}\r\n\r\nbutton {\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    border: none;\r\n    padding: 10px;\r\n    cursor: pointer;\r\n    border-radius: 5px;\r\n}\r\n\r\nbutton:hover {\r\n    background-color: #45a049;\r\n}\r\n</style>\r\n"],"mappings":";;EACSA,KAAK,EAAC;AAAc;;EAD7BC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBACIC,mBAAA,CAsBM,OAtBNC,UAsBM,G,0BArBFC,mBAAA,CAAe,YAAX,QAAM,sBAECC,KAAA,CAAAC,KAAK,I,cAAhBJ,mBAAA,CAYM,OAhBdK,UAAA,GAKYH,mBAAA,CAA8B,YAA1B,SAAO,GAAAI,gBAAA,CAAGH,KAAA,CAAAC,KAAK,CAACG,EAAE,kBACbJ,KAAA,CAAAC,KAAK,CAACI,KAAK,I,cAApBR,mBAAA,CAAiD,KAN7DS,UAAA,EAMkC,QAAM,GAAAH,gBAAA,CAAGH,KAAA,CAAAC,KAAK,CAACI,KAAK,oBANtDE,mBAAA,gBAOqBP,KAAA,CAAAC,KAAK,CAACO,MAAM,I,cAArBX,mBAAA,CAAmD,KAP/DY,UAAA,EAOmC,QAAM,GAAAN,gBAAA,CAAGH,KAAA,CAAAC,KAAK,CAACO,MAAM,oBAPxDD,mBAAA,gBAQYR,mBAAA,CAAqC,WAAlC,OAAK,GAAAI,gBAAA,CAAGH,KAAA,CAAAC,KAAK,CAACS,WAAW,IAAG,IAAE,iBACjCX,mBAAA,CAA+C,WAA5C,QAAM,GAAAI,gBAAA,CAAGQ,QAAA,CAAAC,UAAU,CAACZ,KAAA,CAAAC,KAAK,CAACY,UAAU,mB,0BACvCd,mBAAA,CAAc,YAAV,OAAK,sBACTA,mBAAA,CAIK,c,kBAHDF,mBAAA,CAEKiB,SAAA,QAdrBC,WAAA,CAYqCf,KAAA,CAAAC,KAAK,CAACe,OAAO,EAAvBC,MAAM;yBAAjBpB,mBAAA,CAEK;MAFgCD,GAAG,EAAEqB,MAAM,CAACC,SAAS,CAACd;wBACpDa,MAAM,CAACC,SAAS,CAACC,IAAI,IAAG,IAAE,GAAAhB,gBAAA,CAAGc,MAAM,CAACG,QAAQ,IAAG,KAAG,GAAAjB,gBAAA,CAAGc,MAAM,CAACP,WAAW,IAAG,KACjF;uDAIRb,mBAAA,CAEM,OApBdwB,UAAA,EAAAC,MAAA,QAAAA,MAAA,OAmBYvB,mBAAA,CAAkB,WAAf,aAAW,oB,KAGlBA,mBAAA,CAAmC;IAA1BwB,OAAK,EAAAD,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEb,QAAA,CAAAc,MAAA,IAAAd,QAAA,CAAAc,MAAA,IAAAD,IAAA,CAAM;KAAE,IAAE,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}