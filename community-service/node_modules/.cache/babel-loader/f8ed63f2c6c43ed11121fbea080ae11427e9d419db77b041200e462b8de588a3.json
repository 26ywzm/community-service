{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" 显示用户和管理员列表 \"), _createElementVNode(\"div\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"h3\", null, \"用户列表\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.users, user => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: user.id\n    }, [_createTextVNode(_toDisplayString(user.name) + \" \", 1 /* TEXT */), _createCommentVNode(\" 提升为管理员按钮 \"), $data.isSuperAdmin ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      onClick: $event => $options.promoteUser(user.id)\n    }, \"提升为管理员\", 8 /* PROPS */, _hoisted_1)) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"h3\", null, \"管理员列表\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.admins, admin => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: admin.id\n    }, [_createTextVNode(_toDisplayString(admin.name) + \" \", 1 /* TEXT */), _createCommentVNode(\" 降级为普通用户按钮 \"), $data.isSuperAdmin ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      onClick: $event => $options.demoteUser(admin.id)\n    }, \"降级为普通用户\", 8 /* PROPS */, _hoisted_2)) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["_createElementBlock","_createCommentVNode","_createElementVNode","_Fragment","_renderList","$data","users","user","key","id","_createTextVNode","_toDisplayString","name","isSuperAdmin","onClick","$event","$options","promoteUser","_hoisted_1","admins","admin","demoteUser","_hoisted_2"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\DiscoverPage.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- 显示用户和管理员列表 -->\n    <div>\n      <h3>用户列表</h3>\n      <ul>\n        <li v-for=\"user in users\" :key=\"user.id\">\n          {{ user.name }}\n          <!-- 提升为管理员按钮 -->\n          <button v-if=\"isSuperAdmin\" @click=\"promoteUser(user.id)\">提升为管理员</button>\n        </li>\n      </ul>\n    </div>\n    <div>\n      <h3>管理员列表</h3>\n      <ul>\n        <li v-for=\"admin in admins\" :key=\"admin.id\">\n          {{ admin.name }}\n          <!-- 降级为普通用户按钮 -->\n          <button v-if=\"isSuperAdmin\" @click=\"demoteUser(admin.id)\">降级为普通用户</button>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nconst API = \"http://your-api-url\"; // 替换为实际 API 地址\n\nexport default {\n  data() {\n    return {\n      users: [], // 普通用户列表\n      admins: [], // 管理员列表\n      isSuperAdmin: true, // 判断是否为超级管理员，实际根据逻辑动态设置\n    };\n  },\n  methods: {\n    // 获取用户列表\n    async fetchUsers() {\n      const response = await axios.get(`${API}/users`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('authToken')}`,\n        },\n      });\n      this.users = response.data;\n    },\n\n    // 获取管理员列表\n    async fetchAdmins() {\n      const response = await axios.get(`${API}/admins`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('authToken')}`,\n        },\n      });\n      this.admins = response.data;\n    },\n\n    // 提升为管理员\n    async promoteUser(userId) {\n      if (this.isSuperAdmin) {\n        await axios.post(`${API}/promote/${userId}`, {}, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('authToken')}`,\n          },\n        });\n        // 刷新列表\n        this.fetchUsers();\n        this.fetchAdmins();\n      }\n    },\n\n    // 降级为普通用户\n    async demoteUser(adminId) {\n      if (this.isSuperAdmin) {\n        await axios.post(`${API}/demote/${adminId}`, {}, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('authToken')}`,\n          },\n        });\n        // 刷新列表\n        this.fetchUsers();\n        this.fetchAdmins();\n      }\n    },\n  },\n  mounted() {\n    // 页面加载时获取用户和管理员列表\n    this.fetchUsers();\n    this.fetchAdmins();\n  },\n};\n</script>\n\n<style scoped>\n/* 添加样式以美化界面 */\nh3 {\n  color: #333;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli {\n  margin: 5px 0;\n}\n\nbutton {\n  margin-left: 10px;\n  padding: 5px 10px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #0056b3;\n}\n</style>\n"],"mappings":";mBAAA;mBAAA;;uBACEA,mBAAA,CAsBM,cArBJC,mBAAA,gBAAmB,EACnBC,mBAAA,CASM,c,0BARJA,mBAAA,CAAa,YAAT,MAAI,sBACRA,mBAAA,CAMK,c,kBALHF,mBAAA,CAIKG,SAAA,QAVbC,WAAA,CAM2BC,KAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAfP,mBAAA,CAIK;MAJsBQ,GAAG,EAAED,IAAI,CAACE;QAN7CC,gBAAA,CAAAC,gBAAA,CAOaJ,IAAI,CAACK,IAAI,IAAG,GACf,iBAAAX,mBAAA,cAAiB,EACHI,KAAA,CAAAQ,YAAY,I,cAA1Bb,mBAAA,CAAyE;MATnFQ,GAAA;MASuCM,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,WAAW,CAACV,IAAI,CAACE,EAAE;OAAG,QAAM,iBAT1ES,UAAA,KAAAjB,mBAAA,e;sCAaIC,mBAAA,CASM,c,0BARJA,mBAAA,CAAc,YAAV,OAAK,sBACTA,mBAAA,CAMK,c,kBALHF,mBAAA,CAIKG,SAAA,QApBbC,WAAA,CAgB4BC,KAAA,CAAAc,MAAM,EAAfC,KAAK;yBAAhBpB,mBAAA,CAIK;MAJwBQ,GAAG,EAAEY,KAAK,CAACX;QAhBhDC,gBAAA,CAAAC,gBAAA,CAiBaS,KAAK,CAACR,IAAI,IAAG,GAChB,iBAAAX,mBAAA,eAAkB,EACJI,KAAA,CAAAQ,YAAY,I,cAA1Bb,mBAAA,CAA0E;MAnBpFQ,GAAA;MAmBuCM,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAK,UAAU,CAACD,KAAK,CAACX,EAAE;OAAG,SAAO,iBAnB3Ea,UAAA,KAAArB,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}