{"ast":null,"code":"function noop() {}\nconst extend = Object.assign;\nconst inBrowser = typeof window !== \"undefined\";\nconst isObject = val => val !== null && typeof val === \"object\";\nconst isDef = val => val !== void 0 && val !== null;\nconst isFunction = val => typeof val === \"function\";\nconst isPromise = val => isObject(val) && isFunction(val.then) && isFunction(val.catch);\nconst isDate = val => Object.prototype.toString.call(val) === \"[object Date]\" && !Number.isNaN(val.getTime());\nfunction isMobile(value) {\n  value = value.replace(/[^-|\\d]/g, \"\");\n  return /^((\\+86)|(86))?(1)\\d{10}$/.test(value) || /^0[0-9-]{10,13}$/.test(value);\n}\nconst isNumeric = val => typeof val === \"number\" || /^\\d+(\\.\\d+)?$/.test(val);\nconst isIOS = () => inBrowser ? /ios|iphone|ipad|ipod/.test(navigator.userAgent.toLowerCase()) : false;\nfunction get(object, path) {\n  const keys = path.split(\".\");\n  let result = object;\n  keys.forEach(key => {\n    var _a;\n    result = isObject(result) ? (_a = result[key]) != null ? _a : \"\" : \"\";\n  });\n  return result;\n}\nfunction pick(obj, keys, ignoreUndefined) {\n  return keys.reduce((ret, key) => {\n    if (!ignoreUndefined || obj[key] !== void 0) {\n      ret[key] = obj[key];\n    }\n    return ret;\n  }, {});\n}\nconst isSameValue = (newValue, oldValue) => JSON.stringify(newValue) === JSON.stringify(oldValue);\nconst toArray = item => Array.isArray(item) ? item : [item];\nconst flat = arr => arr.reduce((acc, val) => acc.concat(val), []);\nexport { extend, flat, get, inBrowser, isDate, isDef, isFunction, isIOS, isMobile, isNumeric, isObject, isPromise, isSameValue, noop, pick, toArray };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}