{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"profile-container\"\n};\nconst _hoisted_2 = {\n  class: \"profile-content\"\n};\nconst _hoisted_3 = {\n  class: \"user-info\"\n};\nconst _hoisted_4 = {\n  class: \"button-container\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"edit-form\"\n};\nconst _hoisted_6 = {\n  class: \"form-group\"\n};\nconst _hoisted_7 = {\n  class: \"form-group\"\n};\nconst _hoisted_8 = {\n  class: \"form-group\"\n};\nconst _hoisted_9 = {\n  class: \"form-group\"\n};\nconst _hoisted_10 = {\n  class: \"form-actions\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[19] || (_cache[19] = _createElementVNode(\"h2\", null, \"个人中心\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"p\", null, [_cache[8] || (_cache[8] = _createElementVNode(\"strong\", null, \"用户名：\", -1 /* HOISTED */)), _createTextVNode(_toDisplayString($data.userInfo.username), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[9] || (_cache[9] = _createElementVNode(\"strong\", null, \"邮箱：\", -1 /* HOISTED */)), _createTextVNode(_toDisplayString($data.userInfo.email), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"button\", {\n    class: \"edit-button\",\n    onClick: _cache[0] || (_cache[0] = $event => $data.editMode = true)\n  }, _cache[10] || (_cache[10] = [_createElementVNode(\"span\", {\n    class: \"button-icon\"\n  }, \"✏️\", -1 /* HOISTED */), _createTextVNode(\" 编辑资料 \")])), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.logout && $options.logout(...args)),\n    class: \"logout-button\"\n  }, _cache[11] || (_cache[11] = [_createElementVNode(\"span\", {\n    class: \"button-icon\"\n  }, \"🚪\", -1 /* HOISTED */), _createTextVNode(\" 退出登录 \")]))])]), $data.editMode ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_cache[18] || (_cache[18] = _createElementVNode(\"h3\", null, \"编辑个人信息\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_6, [_cache[12] || (_cache[12] = _createElementVNode(\"label\", null, [_createElementVNode(\"span\", {\n    class: \"label-icon\"\n  }, \"👤\"), _createTextVNode(\" 用户名 \")], -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.userInfo.username = $event),\n    placeholder: \"请输入用户名\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.userInfo.username]])]), _createElementVNode(\"div\", _hoisted_7, [_cache[13] || (_cache[13] = _createElementVNode(\"label\", null, [_createElementVNode(\"span\", {\n    class: \"label-icon\"\n  }, \"📧\"), _createTextVNode(\" 邮箱 \")], -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.userInfo.email = $event),\n    placeholder: \"请输入邮箱\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.userInfo.email]])]), _createElementVNode(\"div\", _hoisted_8, [_cache[14] || (_cache[14] = _createElementVNode(\"label\", null, [_createElementVNode(\"span\", {\n    class: \"label-icon\"\n  }, \"🔒\"), _createTextVNode(\" 当前密码 \")], -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.currentPassword = $event),\n    placeholder: \"请输入当前密码\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.currentPassword]])]), _createElementVNode(\"div\", _hoisted_9, [_cache[15] || (_cache[15] = _createElementVNode(\"label\", null, [_createElementVNode(\"span\", {\n    class: \"label-icon\"\n  }, \"🔑\"), _createTextVNode(\" 新密码 \")], -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.newPassword = $event),\n    placeholder: \"如需修改密码请输入新密码\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPassword]])]), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn primary\",\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.updateProfile && $options.updateProfile(...args))\n  }, _cache[16] || (_cache[16] = [_createElementVNode(\"span\", {\n    class: \"btn-icon\"\n  }, \"💾\", -1 /* HOISTED */), _createTextVNode(\" 保存修改 \")])), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn secondary\",\n    onClick: _cache[7] || (_cache[7] = (...args) => $options.cancelEdit && $options.cancelEdit(...args))\n  }, _cache[17] || (_cache[17] = [_createElementVNode(\"span\", {\n    class: \"btn-icon\"\n  }, \"✖️\", -1 /* HOISTED */), _createTextVNode(\" 取消 \")]))])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createTextVNode","_toDisplayString","$data","userInfo","username","email","_hoisted_4","onClick","_cache","$event","editMode","args","$options","logout","_hoisted_5","_hoisted_6","type","placeholder","required","_hoisted_7","_hoisted_8","currentPassword","_hoisted_9","newPassword","_hoisted_10","updateProfile","cancelEdit","_createCommentVNode"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\Profile.vue"],"sourcesContent":["<template>\n  <div class=\"profile-container\">\n    <h2>个人中心</h2>\n    <div class=\"profile-content\">\n      <div class=\"user-info\">\n        <p><strong>用户名：</strong>{{ userInfo.username }}</p>\n        <p><strong>邮箱：</strong>{{ userInfo.email }}</p>\n      </div>\n      <div class=\"button-container\">\n        <button class=\"edit-button\" @click=\"editMode = true\">\n          <span class=\"button-icon\">✏️</span>\n          编辑资料\n        </button>\n        <button @click=\"logout\" class=\"logout-button\">\n          <span class=\"button-icon\">🚪</span>\n          退出登录\n        </button>\n      </div>\n    </div>\n    <div v-if=\"editMode\" class=\"edit-form\">\n      <h3>编辑个人信息</h3>\n      <div class=\"form-group\">\n        <label>\n          <span class=\"label-icon\">👤</span>\n          用户名\n        </label>\n        <input \n          type=\"text\" \n          v-model=\"userInfo.username\" \n          placeholder=\"请输入用户名\"\n          required\n        />\n      </div>\n      <div class=\"form-group\">\n        <label>\n          <span class=\"label-icon\">📧</span>\n          邮箱\n        </label>\n        <input \n          type=\"email\" \n          v-model=\"userInfo.email\" \n          placeholder=\"请输入邮箱\"\n          required\n        />\n      </div>\n      <div class=\"form-group\">\n        <label>\n          <span class=\"label-icon\">🔒</span>\n          当前密码\n        </label>\n        <input \n          type=\"password\" \n          v-model=\"currentPassword\" \n          placeholder=\"请输入当前密码\"\n          required\n        />\n      </div>\n      <div class=\"form-group\">\n        <label>\n          <span class=\"label-icon\">🔑</span>\n          新密码\n        </label>\n        <input \n          type=\"password\" \n          v-model=\"newPassword\" \n          placeholder=\"如需修改密码请输入新密码\"\n        />\n      </div>\n      <div class=\"form-actions\">\n        <button type=\"button\" class=\"btn primary\" @click=\"updateProfile\">\n          <span class=\"btn-icon\">💾</span>\n          保存修改\n        </button>\n        <button type=\"button\" class=\"btn secondary\" @click=\"cancelEdit\">\n          <span class=\"btn-icon\">✖️</span>\n          取消\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { handleApiError } from '../utils/errorHandler';\nconst API = process.env.VUE_APP_API_URL;\n\nexport default {\n  name: 'UserProfile',\n  data() {\n    return {\n      isLoggedIn: !!localStorage.getItem('authToken'),\n      userInfo: {\n        username: '',\n        email: '',\n        role: '',\n        balance: 0\n      },\n      editMode: false,\n      currentPassword: '',\n      newPassword: '',\n      file: null,\n      loading: false,\n      loadError: '',\n      updateSuccess: ''\n    };\n  },\n  async created() {\n    // 从 localStorage 获取基本信息\n    const token = localStorage.getItem('authToken');\n    const role = localStorage.getItem('userRole');\n    const username = localStorage.getItem('username');\n    const email = localStorage.getItem('email');\n\n    if (!token) {\n      this.isLoggedIn = false;\n    } else {\n      // 立即设置基本信息\n      this.userInfo = {\n        username: username || '',\n        email: email || '',\n        role: role || ''\n      };\n\n      // 异步加载完整用户信息\n      try {\n        await this.fetchUserProfile();\n      } catch (error) {\n        console.error('Failed to fetch user profile:', error);\n        if (error.response && error.response.status === 401) {\n          this.handleUnauthorized();\n        }\n      }\n    }\n  },\n  methods: {\n    formatRole(role) {\n      const roleMap = {\n        'super_admin': '超级管理员',\n        'admin': '管理员',\n        'user': '普通用户'\n      };\n      return roleMap[role] || role;\n    },\n\n    async retryLoad() {\n      this.loadError = '';\n      await this.fetchUserProfile();\n    },\n\n    async fetchUserProfile() {\n      this.loading = true;\n      this.loadError = '';\n      try {\n        const token = localStorage.getItem('authToken');\n        \n        if (!token) {\n          console.warn('No auth token found, using local storage data');\n          this.useLocalStorageData();\n          return;\n        }\n\n        const requestConfig = {\n          method: 'get',\n          url: `${API}/me`,\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        };\n\n        const response = await axios(requestConfig);\n        // console.log('Profile response:', {\n        //   status: response.status,\n        //   data: response.data\n        // });\n\n        if (response.data && response.data.user) {\n          this.userInfo = response.data.user;\n        } else if (response.data) {\n          this.userInfo = response.data;\n        } else {\n          throw new Error('Invalid response format');\n        }\n\n      } catch (error) {\n        console.error('Error fetching user profile:', error);\n        if (error.response) {\n          if (error.response.status === 401) {\n            this.handleUnauthorized();\n            return;\n          }\n          this.loadError = `加载失败: ${error.response.data.message || '服务器错误'}`;\n        } else {\n          this.loadError = '网络错误，请检查网络连接';\n        }\n        this.useLocalStorageData();\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    useLocalStorageData() {\n      this.userInfo = {\n        username: localStorage.getItem('username') || '',\n        email: localStorage.getItem('email') || '',\n        role: localStorage.getItem('userRole') || ''\n      };\n    },\n\n    handleUnauthorized() {\n      // 清除所有认证信息\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('userRole');\n      localStorage.removeItem('username');\n      localStorage.removeItem('userId');\n      localStorage.removeItem('email');\n      \n      this.isLoggedIn = false;\n    },\n\n    async updateProfile() {\n      this.loading = true;\n      this.updateSuccess = '';\n      try {\n        const formData = new FormData();\n        formData.append('username', this.userInfo.username);\n        formData.append('email', this.userInfo.email);\n        if (this.currentPassword) {\n          formData.append('currentPassword', this.currentPassword);\n          if (this.newPassword) {\n            formData.append('newPassword', this.newPassword);\n          }\n        }\n        if (this.file) {\n          formData.append('avatar', this.file);\n        }\n\n        await axios.put(`${API}/me`, formData, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n\n        this.updateSuccess = '个人信息更新成功！';\n        this.editMode = false;\n        this.currentPassword = '';\n        this.newPassword = '';\n        this.file = null;\n        await this.fetchUserProfile();\n      } catch (error) {\n        handleApiError(error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    handleFileUpload(event) {\n      this.file = event.target.files[0];\n    },\n    logout() {\n      // 清除所有本地存储\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('userRole');\n      localStorage.removeItem('username');\n      localStorage.removeItem('userId');\n      localStorage.removeItem('email');\n      \n      // 可选：完全清除所有本地存储\n      // localStorage.clear();\n      \n      // 重定向到登录页\n      this.$router.push('/login');\n      \n      // 提示用户\n      alert('已成功退出登录');\n    },\n    cancelEdit() {\n      this.editMode = false;\n      this.currentPassword = '';\n      this.newPassword = '';\n      this.file = null;\n      this.fetchUserProfile();\n    }\n  }\n};\n</script>\n\n<style scoped>\n.profile-container {\n  max-width: 600px;\n  margin: 2rem auto;\n  padding: 2rem;\n  background: white;\n  border-radius: 12px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\nh2 {\n  text-align: center;\n  color: #333;\n  margin-bottom: 2rem;\n}\n\n.profile-content {\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n}\n\n.user-info {\n  background: #f5f7fa;\n  padding: 1.5rem;\n  border-radius: 8px;\n}\n\n.user-info p {\n  margin: 0.5rem 0;\n  color: #666;\n}\n\n.user-info strong {\n  color: #333;\n}\n\n.button-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n  width: 100%;\n}\n\n.edit-button,\n.logout-button {\n  width: 100%;\n  max-width: 300px;\n  padding: 0.8rem;\n  border: none;\n  border-radius: 8px;\n  font-size: 1rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 0.5rem;\n  transition: all 0.3s ease;\n}\n\n.edit-button {\n  background: #2196F3;\n  color: white;\n}\n\n.logout-button {\n  background: #f44336;\n  color: white;\n}\n\n.edit-button:hover {\n  background: #1976D2;\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(33, 150, 243, 0.2);\n}\n\n.logout-button:hover {\n  background: #d32f2f;\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(244, 67, 54, 0.2);\n}\n\n.button-icon {\n  font-size: 1.2rem;\n}\n\n.edit-form {\n  padding: 2rem;\n}\n\n.form-group {\n  margin-bottom: 1rem;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 0.5rem;\n  font-size: 14px;\n  color: #666;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 0.5rem;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  font-size: 14px;\n}\n\n.form-group input:focus {\n  border-color: #2196F3;\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);\n}\n\n.form-actions {\n  margin-top: 1rem;\n  display: flex;\n  justify-content: space-between;\n}\n\n.btn.primary {\n  background-color: #2196F3;\n  color: white;\n}\n\n.btn.primary:hover {\n  background-color: #1976D2;\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(33, 150, 243, 0.2);\n}\n\n.btn.secondary {\n  background-color: #f44336;\n  color: white;\n}\n\n.btn.secondary:hover {\n  background-color: #d32f2f;\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(244, 67, 54, 0.2);\n}\n\n@media (prefers-color-scheme: dark) {\n  .profile-container {\n    background: #2d2d2d;\n  }\n\n  h2 {\n    color: #ffffff;\n  }\n\n  .user-info {\n    background: #363636;\n  }\n\n  .user-info p {\n    color: #b0b0b0;\n  }\n\n  .user-info strong {\n    color: #ffffff;\n  }\n}\n\n@media screen and (max-width: 480px) {\n  .profile-container {\n    margin: 1rem;\n    padding: 1.5rem;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}