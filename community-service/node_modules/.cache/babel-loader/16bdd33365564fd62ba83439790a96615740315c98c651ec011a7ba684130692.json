{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createBlock as _createBlock, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"order-management\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"loading\"\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  class: \"order-list\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"order-cards\"\n};\nconst _hoisted_6 = {\n  class: \"order-header\"\n};\nconst _hoisted_7 = {\n  class: \"order-info\"\n};\nconst _hoisted_8 = {\n  class: \"order-id\"\n};\nconst _hoisted_9 = {\n  class: \"user-info\"\n};\nconst _hoisted_10 = {\n  class: \"email\"\n};\nconst _hoisted_11 = {\n  class: \"order-items\"\n};\nconst _hoisted_12 = {\n  class: \"item-info\"\n};\nconst _hoisted_13 = {\n  class: \"item-name\"\n};\nconst _hoisted_14 = {\n  class: \"item-details\"\n};\nconst _hoisted_15 = {\n  class: \"item-quantity\"\n};\nconst _hoisted_16 = {\n  class: \"item-price\"\n};\nconst _hoisted_17 = {\n  class: \"item-total\"\n};\nconst _hoisted_18 = {\n  class: \"order-footer\"\n};\nconst _hoisted_19 = {\n  class: \"total-price\"\n};\nconst _hoisted_20 = {\n  class: \"order-actions\"\n};\nconst _hoisted_21 = [\"onClick\"];\nconst _hoisted_22 = [\"onClick\"];\nconst _hoisted_23 = [\"onClick\"];\nconst _hoisted_24 = {\n  class: \"order-items\"\n};\nconst _hoisted_25 = {\n  class: \"item-info\"\n};\nconst _hoisted_26 = {\n  class: \"item-name\"\n};\nconst _hoisted_27 = {\n  class: \"item-details\"\n};\nconst _hoisted_28 = {\n  class: \"item-quantity\"\n};\nconst _hoisted_29 = {\n  class: \"item-price\"\n};\nconst _hoisted_30 = {\n  class: \"item-total\"\n};\nconst _hoisted_31 = {\n  class: \"price\"\n};\nconst _hoisted_32 = {\n  class: \"time-info\"\n};\nconst _hoisted_33 = {\n  class: \"time\"\n};\nconst _hoisted_34 = {\n  class: \"order-actions\"\n};\nconst _hoisted_35 = [\"onClick\"];\nconst _hoisted_36 = [\"onClick\"];\nconst _hoisted_37 = [\"onClick\"];\nconst _hoisted_38 = {\n  class: \"pagination-container\"\n};\nconst _hoisted_39 = {\n  key: 2\n};\nconst _hoisted_40 = {\n  key: 3,\n  class: \"dialog-overlay\"\n};\nconst _hoisted_41 = {\n  class: \"dialog\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_pagination = _resolveComponent(\"el-pagination\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"订单管理\", -1 /* HOISTED */)), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"加载中...\")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" 移动端订单卡片 \"), $data.isMobile ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.orders, order => {\n    return _openBlock(), _createBlock(_component_el_card, {\n      key: order.id,\n      class: \"order-card\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"span\", _hoisted_8, \"订单 #\" + _toDisplayString(order.id), 1 /* TEXT */), _createVNode(_component_el_tag, {\n        type: $options.getStatusType(order.status),\n        size: \"small\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($options.getStatusText(order.status)), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"span\", null, _toDisplayString(order.username), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_10, _toDisplayString(order.email), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_11, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(order.items, item => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: item.menu_item_id,\n          class: \"order-item\"\n        }, [_createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"span\", _hoisted_13, _toDisplayString(item.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"span\", _hoisted_15, \"数量: \" + _toDisplayString(item.quantity), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_16, \"单价: ¥\" + _toDisplayString(item.price), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_17, \"小计: ¥\" + _toDisplayString(item.quantity * item.price), 1 /* TEXT */)])])]);\n      }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_18, [_createElementVNode(\"div\", _hoisted_19, \"总价: ¥\" + _toDisplayString(order.total_price), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_20, [_createVNode(_component_el_button, {\n        type: \"danger\",\n        size: \"small\",\n        onClick: $event => $options.confirmDelete(order),\n        loading: order.lastActionTime > 0\n      }, {\n        default: _withCtx(() => [...(_cache[2] || (_cache[2] = [_createTextVNode(\" 删除订单 \")]))]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\", \"loading\"]), parseInt(order.status) === 0 ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 0,\n        class: \"btn-confirm\",\n        onClick: $event => $options.handleButtonClick(order)\n      }, \"开始处理\", 8 /* PROPS */, _hoisted_21)) : _createCommentVNode(\"v-if\", true), parseInt(order.status) === 1 ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 1,\n        class: \"btn-complete\",\n        onClick: $event => $options.handleButtonClick(order)\n      }, \"完成订单\", 8 /* PROPS */, _hoisted_22)) : _createCommentVNode(\"v-if\", true), parseInt(order.status) === 2 ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 2,\n        class: \"btn-delete\",\n        onClick: $event => $options.handleDeleteOrder(order)\n      }, \"删除订单\", 8 /* PROPS */, _hoisted_23)) : _createCommentVNode(\"v-if\", true)])])]),\n      _: 2 /* DYNAMIC */\n    }, 1024 /* DYNAMIC_SLOTS */);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" PC端表格视图 \"), _withDirectives((_openBlock(), _createBlock(_component_el_table, {\n    data: $data.orders,\n    style: {\n      \"width\": \"100%\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"id\",\n      label: \"订单ID\",\n      width: \"100\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"username\",\n      label: \"用户名\",\n      width: \"150\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"订单详情\",\n      width: \"300\"\n    }, {\n      default: _withCtx(slotProps => [_createElementVNode(\"div\", _hoisted_24, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(slotProps?.row?.items || [], item => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: item.menu_item_id,\n          class: \"order-item\"\n        }, [_createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"span\", _hoisted_26, _toDisplayString(item.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_27, [_createElementVNode(\"span\", _hoisted_28, \"数量: \" + _toDisplayString(item.quantity), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_29, \"单价: ¥\" + _toDisplayString(item.price), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_30, \"小计: ¥\" + _toDisplayString(item.quantity * item.price), 1 /* TEXT */)])])]);\n      }), 128 /* KEYED_FRAGMENT */))])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      prop: \"total_price\",\n      label: \"总价\",\n      width: \"100\"\n    }, {\n      default: _withCtx(slotProps => [_createElementVNode(\"span\", _hoisted_31, \"¥\" + _toDisplayString(slotProps?.row?.total_price), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      label: \"状态\",\n      width: \"100\"\n    }, {\n      default: _withCtx(slotProps => [_createVNode(_component_el_tag, {\n        type: $options.getStatusType(slotProps?.row?.status),\n        size: \"small\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($options.getStatusText(slotProps?.row?.status)), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      label: \"创建时间\",\n      width: \"200\"\n    }, {\n      default: _withCtx(slotProps => [_createElementVNode(\"div\", _hoisted_32, [_createElementVNode(\"div\", null, _toDisplayString($options.formatDate(slotProps?.row?.created_at)?.date), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_33, _toDisplayString($options.formatDate(slotProps?.row?.created_at)?.time), 1 /* TEXT */)])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      label: \"操作\",\n      width: \"200\"\n    }, {\n      default: _withCtx(slotProps => [_createElementVNode(\"div\", _hoisted_34, [parseInt(slotProps?.row?.status) === 0 ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 0,\n        class: \"btn-confirm\",\n        onClick: $event => $options.handleButtonClick(slotProps.row)\n      }, \"开始处理\", 8 /* PROPS */, _hoisted_35)) : _createCommentVNode(\"v-if\", true), parseInt(slotProps?.row?.status) === 1 ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 1,\n        class: \"btn-complete\",\n        onClick: $event => $options.handleButtonClick(slotProps.row)\n      }, \"完成订单\", 8 /* PROPS */, _hoisted_36)) : _createCommentVNode(\"v-if\", true), parseInt(slotProps?.row?.status) === 2 ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 2,\n        class: \"btn-delete\",\n        onClick: $event => $options.handleDeleteOrder(slotProps.row)\n      }, \"删除订单\", 8 /* PROPS */, _hoisted_37)) : _createCommentVNode(\"v-if\", true)])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $data.loading]])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_38, [_createVNode(_component_el_pagination, {\n    \"current-page\": $data.currentPage,\n    \"onUpdate:currentPage\": _cache[0] || (_cache[0] = $event => $data.currentPage = $event),\n    \"page-size\": $data.pageSize,\n    total: $data.total,\n    onCurrentChange: _ctx.handlePageChange,\n    layout: \"prev, pager, next\"\n  }, null, 8 /* PROPS */, [\"current-page\", \"page-size\", \"total\", \"onCurrentChange\"])])])), $data.orders.length === 0 && !$data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_39, _cache[3] || (_cache[3] = [_createElementVNode(\"p\", {\n    class: \"empty-message\"\n  }, \"没有找到订单。\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 对话框 \"), $data.showDialog ? (_openBlock(), _createElementBlock(\"div\", _hoisted_40, [_createElementVNode(\"div\", _hoisted_41, [_createElementVNode(\"p\", null, _toDisplayString($data.dialogMessage), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.closeDialog && $options.closeDialog(...args))\n  }, \"确定\")])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$data","loading","_hoisted_2","_hoisted_3","_hoisted_4","_createCommentVNode","isMobile","_hoisted_5","_Fragment","_renderList","orders","order","_createBlock","_component_el_card","id","default","_withCtx","_hoisted_6","_hoisted_7","_hoisted_8","_toDisplayString","_createVNode","_component_el_tag","type","$options","getStatusType","status","size","_createTextVNode","getStatusText","_","_hoisted_9","username","_hoisted_10","email","_hoisted_11","items","item","menu_item_id","_hoisted_12","_hoisted_13","name","_hoisted_14","_hoisted_15","quantity","_hoisted_16","price","_hoisted_17","_hoisted_18","_hoisted_19","total_price","_hoisted_20","_component_el_button","onClick","$event","confirmDelete","lastActionTime","_cache","parseInt","handleButtonClick","_hoisted_21","_hoisted_22","handleDeleteOrder","_hoisted_23","_component_el_table","data","style","_component_el_table_column","prop","label","width","slotProps","_hoisted_24","row","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","formatDate","created_at","date","_hoisted_33","time","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_component_el_pagination","currentPage","pageSize","total","onCurrentChange","_ctx","handlePageChange","layout","length","_hoisted_39","showDialog","_hoisted_40","_hoisted_41","dialogMessage","args","closeDialog"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\OrderManagement.vue"],"sourcesContent":["<template>\n  <div class=\"order-management\">\n    <h2>订单管理</h2>\n    <div v-if=\"loading\" class=\"loading\">加载中...</div>\n    <div v-else>\n      <div class=\"order-list\">\n        <!-- 移动端订单卡片 -->\n        <div class=\"order-cards\" v-if=\"isMobile\">\n          <el-card v-for=\"order in orders\" :key=\"order.id\" class=\"order-card\">\n            <div class=\"order-header\">\n              <div class=\"order-info\">\n                <span class=\"order-id\">订单 #{{ order.id }}</span>\n                <el-tag :type=\"getStatusType(order.status)\" size=\"small\">\n                  {{ getStatusText(order.status) }}\n                </el-tag>\n              </div>\n              <div class=\"user-info\">\n                <span>{{ order.username }}</span>\n                <span class=\"email\">{{ order.email }}</span>\n              </div>\n            </div>\n            \n            <div class=\"order-items\">\n              <div v-for=\"item in order.items\" :key=\"item.menu_item_id\" class=\"order-item\">\n                <div class=\"item-info\">\n                  <span class=\"item-name\">{{ item.name }}</span>\n                  <div class=\"item-details\">\n                    <span class=\"item-quantity\">数量: {{ item.quantity }}</span>\n                    <span class=\"item-price\">单价: ¥{{ item.price }}</span>\n                    <span class=\"item-total\">小计: ¥{{ item.quantity * item.price }}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div class=\"order-footer\">\n              <div class=\"total-price\">总价: ¥{{ order.total_price }}</div>\n              <div class=\"order-actions\">\n                <el-button \n                  type=\"danger\" \n                  size=\"small\" \n                  @click=\"confirmDelete(order)\"\n                  :loading=\"order.lastActionTime > 0\"\n                >\n                  删除订单\n                </el-button>\n                <button \n                  v-if=\"parseInt(order.status) === 0\" \n                  class=\"btn-confirm\"\n                  @click=\"handleButtonClick(order)\"\n                >开始处理</button>\n\n                <button \n                  v-if=\"parseInt(order.status) === 1\" \n                  class=\"btn-complete\"\n                  @click=\"handleButtonClick(order)\"\n                >完成订单</button>\n\n                <button \n                  v-if=\"parseInt(order.status) === 2\" \n                  class=\"btn-delete\"\n                  @click=\"handleDeleteOrder(order)\"\n                >删除订单</button>\n              </div>\n            </div>\n          </el-card>\n        </div>\n\n        <!-- PC端表格视图 -->\n        <el-table v-else :data=\"orders\" style=\"width: 100%\" v-loading=\"loading\">\n          <el-table-column prop=\"id\" label=\"订单ID\" width=\"100\" />\n          <el-table-column prop=\"username\" label=\"用户名\" width=\"150\" />\n          <el-table-column label=\"订单详情\" width=\"300\">\n            <template v-slot=\"slotProps\">\n              <div class=\"order-items\">\n                <div v-for=\"item in slotProps?.row?.items || []\" :key=\"item.menu_item_id\" class=\"order-item\">\n                  <div class=\"item-info\">\n                    <span class=\"item-name\">{{ item.name }}</span>\n                    <div class=\"item-details\">\n                      <span class=\"item-quantity\">数量: {{ item.quantity }}</span>\n                      <span class=\"item-price\">单价: ¥{{ item.price }}</span>\n                      <span class=\"item-total\">小计: ¥{{ item.quantity * item.price }}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"total_price\" label=\"总价\" width=\"100\">\n            <template v-slot=\"slotProps\">\n              <span class=\"price\">¥{{ slotProps?.row?.total_price }}</span>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"状态\" width=\"100\">\n            <template v-slot=\"slotProps\">\n              <el-tag :type=\"getStatusType(slotProps?.row?.status)\" size=\"small\">\n                {{ getStatusText(slotProps?.row?.status) }}\n              </el-tag>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"创建时间\" width=\"200\">\n            <template v-slot=\"slotProps\">\n              <div class=\"time-info\">\n                <div>{{ formatDate(slotProps?.row?.created_at)?.date }}</div>\n                <div class=\"time\">{{ formatDate(slotProps?.row?.created_at)?.time }}</div>\n              </div>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"操作\" width=\"200\">\n            <template v-slot=\"slotProps\">\n              <div class=\"order-actions\">\n                <button \n                  v-if=\"parseInt(slotProps?.row?.status) === 0\" \n                  class=\"btn-confirm\"\n                  @click=\"handleButtonClick(slotProps.row)\"\n                >开始处理</button>\n\n                <button \n                  v-if=\"parseInt(slotProps?.row?.status) === 1\" \n                  class=\"btn-complete\"\n                  @click=\"handleButtonClick(slotProps.row)\"\n                >完成订单</button>\n\n                <button \n                  v-if=\"parseInt(slotProps?.row?.status) === 2\" \n                  class=\"btn-delete\"\n                  @click=\"handleDeleteOrder(slotProps.row)\"\n                >删除订单</button>\n              </div>\n            </template>\n          </el-table-column>\n        </el-table>\n      </div>\n\n      <div class=\"pagination-container\">\n        <el-pagination\n          v-model:current-page=\"currentPage\"\n          :page-size=\"pageSize\"\n          :total=\"total\"\n          @current-change=\"handlePageChange\"\n          layout=\"prev, pager, next\"\n        />\n      </div>\n    </div>\n    <div v-if=\"orders.length === 0 && !loading\">\n      <p class=\"empty-message\">没有找到订单。</p>\n    </div>\n\n    <!-- 对话框 -->\n    <div v-if=\"showDialog\" class=\"dialog-overlay\">\n      <div class=\"dialog\">\n        <p>{{ dialogMessage }}</p>\n        <button @click=\"closeDialog\">确定</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\n\nconst API = 'http://localhost:3000/api/auth';  // 直接定义 API 地址\n\nexport default {\n  data() {\n    return {\n      orders: [], // 存储所有订单信息\n      showDialog: false,\n      dialogMessage: '',\n      lastActionTime: 0, // 记录上一次操作的时间戳\n      loading: false,\n      isMobile: false,\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      // 状态显示文本\n      statusText: {\n        0: '待处理',\n        1: '处理中',\n        2: '已完成',\n        3: '已取消'\n      }\n    };\n  },\n  mounted() {\n    this.checkDeviceType();\n    window.addEventListener('resize', this.checkDeviceType);\n    this.fetchOrders(); // 加载所有订单\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.checkDeviceType);\n  },\n  methods: {\n    checkDeviceType() {\n      this.isMobile = window.innerWidth <= 768;\n    },\n    async fetchOrders() {\n      try {\n        this.loading = true;\n        const response = await axios.get(`${API}/canteen/orders`, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n          }\n        });\n        console.log('获取到的订单数据:', response.data);\n        \n        // 处理订单数据\n        this.orders = response.data.orders.map(order => ({\n          ...order,\n          lastActionTime: 0,\n          items: order.items || [] // 确保 items 存在\n        }));\n        \n        // 更新分页信息\n        if (response.data.pagination) {\n          this.pagination = response.data.pagination;\n          this.currentPage = response.data.pagination.currentPage;\n          this.pageSize = response.data.pagination.pageSize;\n          this.total = response.data.pagination.total;\n        }\n      } catch (error) {\n        console.error('获取订单列表失败:', error);\n        ElMessage.error('获取订单列表失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    async handleButtonClick(order) {\n      if (!this.canPerformAction(order)) {\n        ElMessage.warning('操作太频繁，请稍后再试');\n        return;\n      }\n\n      try {\n        let newStatus;\n        const currentStatus = parseInt(order.status);\n        switch (currentStatus) {\n          case 0:  // pending\n            newStatus = 1;  // confirmed\n            break;\n          case 1:  // confirmed\n            newStatus = 2;  // completed\n            break;\n          default:\n            ElMessage.error(`当前状态 ${this.statusText[order.status]} 无法进行操作`);\n            return;\n        }\n\n        await this.updateOrderStatus(order, newStatus);\n        // 操作成功后刷新订单列表\n        await this.fetchOrders();\n      } catch (error) {\n        console.error('操作失败:', error);\n        ElMessage.error('操作失败，请重试');\n      }\n    },\n\n    canPerformAction(order) {\n      const now = Date.now();\n      // 如果是第一次操作，或者距离上次操作超过3秒\n      if (!order.lastActionTime || now - order.lastActionTime > 3000) {\n        return true;\n      }\n      return false;\n    },\n\n    async updateOrderStatus(order, status) {\n      try {\n        console.log('Updating order status:', { orderId: order.id, status: status });\n        await axios.put(\n          `${API}/canteen/orders/${order.id}`, \n          { status }, \n          {\n            headers: {\n              'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\n              'Content-Type': 'application/json'\n            }\n          }\n        );\n        \n        ElMessage.success(`订单状态已更新为${this.statusText[status]}`);\n        order.lastActionTime = Date.now(); // 更新最后操作时间\n        order.status = status; // 更新本地状态\n      } catch (error) {\n        console.error('更新订单状态失败:', error);\n        ElMessage.error(error.response?.data?.message || '更新订单状态失败，请重试');\n        throw error;\n      }\n    },\n\n    async handleDeleteOrder(order) {\n      try {\n        if (!confirm('确定要删除这个订单吗？此操作不可撤销。')) {\n          return;\n        }\n        \n        await axios.delete(`${API}/canteen/orders/${order.id}`, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n          }\n        });\n        \n        ElMessage.success('订单已删除');\n        // 从列表中移除该订单\n        this.orders = this.orders.filter(o => o.id !== order.id);\n      } catch (error) {\n        console.error('删除订单失败:', error);\n        ElMessage.error(error.response?.data?.message || '删除订单失败，请重试');\n      }\n    },\n\n    closeDialog() {\n      this.showDialog = false;\n      this.dialogMessage = '';\n    },\n\n    formatDate(dateString) {\n      const date = new Date(dateString);\n      return {\n        date: date.toLocaleDateString('zh-CN', {\n          year: 'numeric',\n          month: '2-digit',\n          day: '2-digit'\n        }),\n        time: date.toLocaleTimeString('zh-CN', {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      };\n    },\n    getStatusType(status) {\n      switch (status) {\n        case 0:\n          return 'danger';\n        case 1:\n          return 'success';\n        case 2:\n          return 'info';\n        default:\n          return 'warning';\n      }\n    },\n    getStatusText(status) {\n      return this.statusText[status];\n    },\n    confirmDelete(order) {\n      if (!confirm('确定要删除这个订单吗？此操作不可撤销。')) {\n        return;\n      }\n      this.handleDeleteOrder(order);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.order-management {\n  padding: 20px;\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.order-list {\n  margin-top: 20px;\n}\n\n/* 移动端样式 */\n.order-cards {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n}\n\n.order-card {\n  margin-bottom: 16px;\n}\n\n.order-header {\n  margin-bottom: 16px;\n}\n\n.order-info {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n}\n\n.order-id {\n  font-weight: bold;\n  font-size: 16px;\n}\n\n.user-info {\n  font-size: 14px;\n  color: #606266;\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n}\n\n.email {\n  color: #909399;\n  font-size: 13px;\n}\n\n.order-items {\n  border-top: 1px solid #EBEEF5;\n  border-bottom: 1px solid #EBEEF5;\n  padding: 12px 0;\n  margin: 12px 0;\n}\n\n.order-item {\n  background-color: #f8f9fa;\n  border-radius: 4px;\n  padding: 12px;\n  margin-bottom: 8px;\n}\n\n.order-item:last-child {\n  margin-bottom: 0;\n}\n\n.item-info {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.item-name {\n  font-weight: bold;\n  color: #303133;\n}\n\n.item-details {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  font-size: 13px;\n  color: #606266;\n}\n\n.item-total {\n  color: #409EFF;\n  font-weight: 500;\n}\n\n.order-footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 12px;\n}\n\n.total-price {\n  font-size: 16px;\n  font-weight: bold;\n  color: #F56C6C;\n}\n\n.order-actions {\n  display: flex;\n  gap: 8px;\n}\n\n.btn-confirm {\n  background-color: #67C23A;\n  color: white;\n}\n\n.btn-complete {\n  background-color: #409EFF;\n  color: white;\n}\n\n.btn-delete {\n  background-color: #F56C6C;\n  color: white;\n}\n\n/* 响应式调整 */\n@media screen and (max-width: 768px) {\n  .order-management {\n    padding: 12px;\n  }\n  \n  .pagination-container {\n    margin-top: 20px;\n    display: flex;\n    justify-content: center;\n  }\n}\n\n/* PC端样式保持不变 */\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  margin-top: 20px;\n  background-color: white;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\n}\n\nth, td {\n  padding: 12px 15px;\n  text-align: left;\n  border-bottom: 1px solid #EBEEF5;\n}\n\nth {\n  background-color: #F5F7FA;\n  color: #606266;\n  font-weight: 500;\n}\n\ntr:hover {\n  background-color: #F5F7FA;\n}\n\n.empty-message {\n  text-align: center;\n  color: #909399;\n  margin-top: 40px;\n}\n\n.user-info {\n  display: flex;\n  flex-direction: column;\n}\n\n.email {\n  font-size: 14px;\n  color: #909399;\n}\n\n.order-items {\n  max-width: 300px;\n  padding: 8px;\n}\n\n.order-item {\n  background-color: #f8f9fa;\n  border-radius: 4px;\n  padding: 8px;\n  margin-bottom: 8px;\n}\n\n.order-item:last-child {\n  margin-bottom: 0;\n}\n\n.item-info {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n}\n\n.item-name {\n  font-weight: bold;\n  color: #303133;\n}\n\n.item-details {\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n  font-size: 13px;\n  color: #606266;\n}\n\n.item-quantity, .item-price, .item-total {\n  margin-right: 12px;\n}\n\n.item-total {\n  color: #409EFF;\n  font-weight: 500;\n}\n\n.price {\n  font-weight: bold;\n}\n\n.status-tag {\n  padding: 2px 6px;\n  border-radius: 4px;\n  font-size: 12px;\n}\n\n.status-0 {\n  background-color: #F56C6C;\n  color: white;\n}\n\n.status-1 {\n  background-color: #67C23A;\n  color: white;\n}\n\n.status-2 {\n  background-color: #409EFF;\n  color: white;\n}\n\n.status-3 {\n  background-color: #909399;\n  color: white;\n}\n\n.time-info {\n  display: flex;\n  flex-direction: column;\n}\n\n.time {\n  font-size: 14px;\n  color: #909399;\n}\n\n.loading {\n  text-align: center;\n  margin-top: 40px;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}