{"ast":null,"code":"import { defineComponent, createVNode as _createVNode } from \"vue\";\nimport { makeStringProp, makeNumericProp, createNamespace } from \"../utils/index.mjs\";\nimport { useChildren } from \"@vant/use\";\nconst [name, bem] = createNamespace(\"steps\");\nconst stepsProps = {\n  active: makeNumericProp(0),\n  direction: makeStringProp(\"horizontal\"),\n  activeIcon: makeStringProp(\"checked\"),\n  iconPrefix: String,\n  finishIcon: String,\n  activeColor: String,\n  inactiveIcon: String,\n  inactiveColor: String\n};\nconst STEPS_KEY = Symbol(name);\nvar stdin_default = defineComponent({\n  name,\n  props: stepsProps,\n  emits: [\"clickStep\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const {\n      linkChildren\n    } = useChildren(STEPS_KEY);\n    const onClickStep = index => emit(\"clickStep\", index);\n    linkChildren({\n      props,\n      onClickStep\n    });\n    return () => {\n      var _a;\n      return _createVNode(\"div\", {\n        \"class\": bem([props.direction])\n      }, [_createVNode(\"div\", {\n        \"class\": bem(\"items\")\n      }, [(_a = slots.default) == null ? void 0 : _a.call(slots)])]);\n    };\n  }\n});\nexport { STEPS_KEY, stdin_default as default, stepsProps };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}