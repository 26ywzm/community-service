{"ast":null,"code":"import { watch, defineComponent, createVNode as _createVNode } from \"vue\";\nimport { unknownProp, numericProp, createNamespace } from \"../utils/index.mjs\";\nimport { useChildren, useCustomFieldValue } from \"@vant/use\";\nconst [name, bem] = createNamespace(\"radio-group\");\nconst radioGroupProps = {\n  shape: String,\n  disabled: Boolean,\n  iconSize: numericProp,\n  direction: String,\n  modelValue: unknownProp,\n  checkedColor: String\n};\nconst RADIO_KEY = Symbol(name);\nvar stdin_default = defineComponent({\n  name,\n  props: radioGroupProps,\n  emits: [\"change\", \"update:modelValue\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const {\n      linkChildren\n    } = useChildren(RADIO_KEY);\n    const updateValue = value => emit(\"update:modelValue\", value);\n    watch(() => props.modelValue, value => emit(\"change\", value));\n    linkChildren({\n      props,\n      updateValue\n    });\n    useCustomFieldValue(() => props.modelValue);\n    return () => {\n      var _a;\n      return _createVNode(\"div\", {\n        \"class\": bem([props.direction]),\n        \"role\": \"radiogroup\"\n      }, [(_a = slots.default) == null ? void 0 : _a.call(slots)]);\n    };\n  }\n});\nexport { RADIO_KEY, stdin_default as default, radioGroupProps };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}