{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nconst API = process.env.VUE_APP_API_URL;\nimport axios from 'axios';\nexport default {\n  name: 'UserProfile',\n  data() {\n    return {\n      user: null,\n      passwordForm: {\n        currentPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      }\n    };\n  },\n  async created() {\n    await this.fetchUserProfile();\n  },\n  methods: {\n    formatRole(role) {\n      const roleMap = {\n        'user': '普通用户',\n        'admin': '管理员',\n        'super_admin': '超级管理员'\n      };\n      return roleMap[role] || role;\n    },\n    async fetchUserProfile() {\n      try {\n        const userId = localStorage.getItem('userId');\n        if (!userId) {\n          this.$router.push('/login');\n          return;\n        }\n        const response = await axios.get(`${API}/profile`);\n        this.user = response.data.user;\n      } catch (error) {\n        console.error('获取用户资料失败:', error);\n        alert('获取用户资料失败，请重新登录');\n        this.$router.push('/login');\n      }\n    },\n    async changePassword() {\n      try {\n        if (this.passwordForm.newPassword !== this.passwordForm.confirmPassword) {\n          alert('两次输入的新密码不一致');\n          return;\n        }\n        await axios.put(`${API}/profile/password`, {\n          currentPassword: this.passwordForm.currentPassword,\n          newPassword: this.passwordForm.newPassword\n        });\n        alert('密码修改成功');\n        this.passwordForm = {\n          currentPassword: '',\n          newPassword: '',\n          confirmPassword: ''\n        };\n      } catch (error) {\n        console.error('修改密码失败:', error);\n        alert(error.response?.data?.message || '修改密码失败');\n      }\n    }\n  }\n};","map":{"version":3,"names":["API","process","env","VUE_APP_API_URL","axios","name","data","user","passwordForm","currentPassword","newPassword","confirmPassword","created","fetchUserProfile","methods","formatRole","role","roleMap","userId","localStorage","getItem","$router","push","response","get","error","console","alert","changePassword","put","message"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\UserProfile.vue"],"sourcesContent":["<template>\n  <div class=\"profile-container\">\n    <h2>个人资料</h2>\n    <div class=\"profile-content\" v-if=\"user\">\n      <div class=\"profile-section\">\n        <h3>基本信息</h3>\n        <div class=\"info-group\">\n          <label>用户名：</label>\n          <span>{{ user.username }}</span>\n        </div>\n        <div class=\"info-group\">\n          <label>邮箱：</label>\n          <span>{{ user.email }}</span>\n        </div>\n        <div class=\"info-group\">\n          <label>角色：</label>\n          <span>{{ formatRole(user.role) }}</span>\n        </div>\n      </div>\n\n      <div class=\"profile-section\">\n        <h3>修改密码</h3>\n        <form @submit.prevent=\"changePassword\">\n          <div class=\"form-group\">\n            <label>当前密码：</label>\n            <input type=\"password\" v-model=\"passwordForm.currentPassword\" required />\n          </div>\n          <div class=\"form-group\">\n            <label>新密码：</label>\n            <input type=\"password\" v-model=\"passwordForm.newPassword\" required />\n          </div>\n          <div class=\"form-group\">\n            <label>确认新密码：</label>\n            <input type=\"password\" v-model=\"passwordForm.confirmPassword\" required />\n          </div>\n          <button type=\"submit\" class=\"submit-button\">修改密码</button>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nconst API = process.env.VUE_APP_API_URL;\nimport axios from 'axios';\n\nexport default {\n  name: 'UserProfile',\n  data() {\n    return {\n      user: null,\n      passwordForm: {\n        currentPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      }\n    };\n  },\n  async created() {\n    await this.fetchUserProfile();\n  },\n  methods: {\n    formatRole(role) {\n      const roleMap = {\n        'user': '普通用户',\n        'admin': '管理员',\n        'super_admin': '超级管理员'\n      };\n      return roleMap[role] || role;\n    },\n    async fetchUserProfile() {\n      try {\n        const userId = localStorage.getItem('userId');\n        if (!userId) {\n          this.$router.push('/login');\n          return;\n        }\n\n        const response = await axios.get(`${API}/profile`);\n        this.user = response.data.user;\n      } catch (error) {\n        console.error('获取用户资料失败:', error);\n        alert('获取用户资料失败，请重新登录');\n        this.$router.push('/login');\n      }\n    },\n    async changePassword() {\n      try {\n        if (this.passwordForm.newPassword !== this.passwordForm.confirmPassword) {\n          alert('两次输入的新密码不一致');\n          return;\n        }\n\n        await axios.put(`${API}/profile/password`, {\n          currentPassword: this.passwordForm.currentPassword,\n          newPassword: this.passwordForm.newPassword\n        });\n\n        alert('密码修改成功');\n        this.passwordForm = {\n          currentPassword: '',\n          newPassword: '',\n          confirmPassword: ''\n        };\n      } catch (error) {\n        console.error('修改密码失败:', error);\n        alert(error.response?.data?.message || '修改密码失败');\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.profile-container {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\nh2 {\n  color: #333;\n  text-align: center;\n  margin-bottom: 30px;\n}\n\n.profile-content {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 30px;\n}\n\n.profile-section {\n  background-color: #f5f5f5;\n  padding: 20px;\n  border-radius: 10px;\n}\n\nh3 {\n  color: #444;\n  margin-bottom: 20px;\n  border-bottom: 2px solid #1e90ff;\n  padding-bottom: 10px;\n}\n\n.info-group {\n  margin-bottom: 15px;\n}\n\n.info-group label {\n  color: #666;\n  margin-right: 10px;\n  font-weight: bold;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 5px;\n  color: #666;\n}\n\ninput {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 14px;\n}\n\ninput:focus {\n  outline: none;\n  border-color: #1e90ff;\n}\n\n.submit-button {\n  width: 100%;\n  padding: 10px;\n  background-color: #1e90ff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 16px;\n  margin-top: 10px;\n}\n\n.submit-button:hover {\n  background-color: #187bcd;\n}\n\n@media (max-width: 768px) {\n  .profile-content {\n    grid-template-columns: 1fr;\n  }\n}\n</style>\n"],"mappings":";AA2CA,MAAMA,GAAE,GAAIC,OAAO,CAACC,GAAG,CAACC,eAAe;AACvC,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,IAAI;MACVC,YAAY,EAAE;QACZC,eAAe,EAAE,EAAE;QACnBC,WAAW,EAAE,EAAE;QACfC,eAAe,EAAE;MACnB;IACF,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,gBAAgB,CAAC,CAAC;EAC/B,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAACC,IAAI,EAAE;MACf,MAAMC,OAAM,GAAI;QACd,MAAM,EAAE,MAAM;QACd,OAAO,EAAE,KAAK;QACd,aAAa,EAAE;MACjB,CAAC;MACD,OAAOA,OAAO,CAACD,IAAI,KAAKA,IAAI;IAC9B,CAAC;IACD,MAAMH,gBAAgBA,CAAA,EAAG;MACvB,IAAI;QACF,MAAMK,MAAK,GAAIC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;QAC7C,IAAI,CAACF,MAAM,EAAE;UACX,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;UAC3B;QACF;QAEA,MAAMC,QAAO,GAAI,MAAMnB,KAAK,CAACoB,GAAG,CAAC,GAAGxB,GAAG,UAAU,CAAC;QAClD,IAAI,CAACO,IAAG,GAAIgB,QAAQ,CAACjB,IAAI,CAACC,IAAI;MAChC,EAAE,OAAOkB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjCE,KAAK,CAAC,gBAAgB,CAAC;QACvB,IAAI,CAACN,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;MAC7B;IACF,CAAC;IACD,MAAMM,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,IAAI,IAAI,CAACpB,YAAY,CAACE,WAAU,KAAM,IAAI,CAACF,YAAY,CAACG,eAAe,EAAE;UACvEgB,KAAK,CAAC,aAAa,CAAC;UACpB;QACF;QAEA,MAAMvB,KAAK,CAACyB,GAAG,CAAC,GAAG7B,GAAG,mBAAmB,EAAE;UACzCS,eAAe,EAAE,IAAI,CAACD,YAAY,CAACC,eAAe;UAClDC,WAAW,EAAE,IAAI,CAACF,YAAY,CAACE;QACjC,CAAC,CAAC;QAEFiB,KAAK,CAAC,QAAQ,CAAC;QACf,IAAI,CAACnB,YAAW,GAAI;UAClBC,eAAe,EAAE,EAAE;UACnBC,WAAW,EAAE,EAAE;UACfC,eAAe,EAAE;QACnB,CAAC;MACH,EAAE,OAAOc,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;QAC/BE,KAAK,CAACF,KAAK,CAACF,QAAQ,EAAEjB,IAAI,EAAEwB,OAAM,IAAK,QAAQ,CAAC;MAClD;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}