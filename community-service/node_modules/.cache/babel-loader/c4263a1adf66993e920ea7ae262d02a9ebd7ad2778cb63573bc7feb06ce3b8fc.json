{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from '../router';\nexport const handleAuthError = () => {\n  // 清除所有认证信息\n  localStorage.removeItem('authToken');\n  localStorage.removeItem('userRole');\n  localStorage.removeItem('username');\n  localStorage.removeItem('userId');\n  localStorage.removeItem('email');\n\n  // 跳转到我的页面\n  router.push('/profile');\n};\nexport const handleApiError = (error, customErrorHandler) => {\n  console.error('API请求失败:', error);\n  if (error.response) {\n    switch (error.response.status) {\n      case 403:\n        // 权限不足，清除认证信息并退出\n        handleAuthError();\n        break;\n      case 401:\n        // 未认证，清除认证信息并退出\n        handleAuthError();\n        break;\n      default:\n        // 其他错误，调用自定义错误处理\n        if (customErrorHandler) {\n          customErrorHandler(error);\n        } else {\n          alert('操作失败，请重试。');\n        }\n    }\n  } else if (error.request) {\n    // 请求发出但没有收到响应\n    alert('网络错误，请检查您的网络连接。');\n  } else {\n    // 请求配置出错\n    alert('请求错误，请重试。');\n  }\n};","map":{"version":3,"names":["router","handleAuthError","localStorage","removeItem","push","handleApiError","error","customErrorHandler","console","response","status","alert","request"],"sources":["C:/Users/拯救者/Desktop/text/community-service/src/utils/errorHandler.js"],"sourcesContent":["import router from '../router';\n\nexport const handleAuthError = () => {\n  // 清除所有认证信息\n  localStorage.removeItem('authToken');\n  localStorage.removeItem('userRole');\n  localStorage.removeItem('username');\n  localStorage.removeItem('userId');\n  localStorage.removeItem('email');\n  \n  // 跳转到我的页面\n  router.push('/profile');\n};\n\nexport const handleApiError = (error, customErrorHandler) => {\n  console.error('API请求失败:', error);\n  \n  if (error.response) {\n    switch (error.response.status) {\n      case 403:\n        // 权限不足，清除认证信息并退出\n        handleAuthError();\n        break;\n      case 401:\n        // 未认证，清除认证信息并退出\n        handleAuthError();\n        break;\n      default:\n        // 其他错误，调用自定义错误处理\n        if (customErrorHandler) {\n          customErrorHandler(error);\n        } else {\n          alert('操作失败，请重试。');\n        }\n    }\n  } else if (error.request) {\n    // 请求发出但没有收到响应\n    alert('网络错误，请检查您的网络连接。');\n  } else {\n    // 请求配置出错\n    alert('请求错误，请重试。');\n  }\n};\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,WAAW;AAE9B,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACnC;EACAC,YAAY,CAACC,UAAU,CAAC,WAAW,CAAC;EACpCD,YAAY,CAACC,UAAU,CAAC,UAAU,CAAC;EACnCD,YAAY,CAACC,UAAU,CAAC,UAAU,CAAC;EACnCD,YAAY,CAACC,UAAU,CAAC,QAAQ,CAAC;EACjCD,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;;EAEhC;EACAH,MAAM,CAACI,IAAI,CAAC,UAAU,CAAC;AACzB,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGA,CAACC,KAAK,EAAEC,kBAAkB,KAAK;EAC3DC,OAAO,CAACF,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;EAEhC,IAAIA,KAAK,CAACG,QAAQ,EAAE;IAClB,QAAQH,KAAK,CAACG,QAAQ,CAACC,MAAM;MAC3B,KAAK,GAAG;QACN;QACAT,eAAe,CAAC,CAAC;QACjB;MACF,KAAK,GAAG;QACN;QACAA,eAAe,CAAC,CAAC;QACjB;MACF;QACE;QACA,IAAIM,kBAAkB,EAAE;UACtBA,kBAAkB,CAACD,KAAK,CAAC;QAC3B,CAAC,MAAM;UACLK,KAAK,CAAC,WAAW,CAAC;QACpB;IACJ;EACF,CAAC,MAAM,IAAIL,KAAK,CAACM,OAAO,EAAE;IACxB;IACAD,KAAK,CAAC,iBAAiB,CAAC;EAC1B,CAAC,MAAM;IACL;IACAA,KAAK,CAAC,WAAW,CAAC;EACpB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}