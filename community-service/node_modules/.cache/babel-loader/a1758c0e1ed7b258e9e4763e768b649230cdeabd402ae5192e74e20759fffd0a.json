{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nconst API_BASE = process.env.VUE_APP_BASE_URL;\nexport default {\n  data() {\n    return {\n      users: [],\n      selectedUser: null,\n      chatMessages: [],\n      selectedMessage: null,\n      adminReply: '',\n      loading: false,\n      message: {\n        show: false,\n        content: '',\n        type: ''\n      }\n    };\n  },\n  methods: {\n    async fetchUsers() {\n      try {\n        const token = localStorage.getItem('authToken');\n        const userRole = localStorage.getItem('userRole');\n        if (userRole !== 'admin' && userRole !== 'super_admin') {\n          this.$router.push('/');\n          return;\n        }\n        const headers = {\n          'Authorization': `Bearer ${token}`\n        };\n        const response = await axios.get(`${API_BASE}/api/canteen/users`, {\n          headers\n        });\n        this.users = response.data || [];\n      } catch (error) {\n        console.error('获取用户列表失败:', error);\n        alert('获取用户列表失败：' + (error.response?.data?.message || error.message));\n      }\n    },\n    selectUser(user) {\n      this.selectedUser = user;\n      this.selectedMessage = null;\n      this.adminReply = '';\n      if (user) {\n        this.fetchUserMessages(user.id);\n      } else {\n        this.chatMessages = [];\n      }\n    },\n    async fetchUserMessages(userId) {\n      try {\n        const token = localStorage.getItem('authToken');\n        const userRole = localStorage.getItem('userRole');\n        if (userRole !== 'admin' && userRole !== 'super_admin') {\n          this.$router.push('/');\n          return;\n        }\n        const headers = {\n          'Authorization': `Bearer ${token}`\n        };\n        const response = await axios.get(`${API_BASE}/api/canteen/feedback/${userId}`, {\n          headers\n        });\n        this.chatMessages = response.data.map(msg => ({\n          ...msg,\n          isAdmin: msg.admin_reply !== null\n        }));\n      } catch (error) {\n        console.error('获取留言记录失败:', error);\n        alert('获取留言记录失败：' + (error.response?.data?.message || error.message));\n      }\n    },\n    selectMessage(message) {\n      this.selectedMessage = message;\n      this.adminReply = '';\n    },\n    async sendMessage() {\n      if (!this.adminReply.trim()) {\n        alert('请输入回复内容');\n        return;\n      }\n      if (!this.selectedUser && !this.selectedMessage) {\n        alert('请选择一个用户或留言进行回复');\n        return;\n      }\n      try {\n        const token = localStorage.getItem('authToken');\n        const userRole = localStorage.getItem('userRole');\n        if (userRole !== 'admin' && userRole !== 'super_admin') {\n          this.$router.push('/');\n          return;\n        }\n        const headers = {\n          'Authorization': `Bearer ${token}`\n        };\n        if (this.selectedMessage) {\n          const response = await axios.put(`${API_BASE}/api/canteen/feedback/${this.selectedMessage.id}/reply`, {\n            admin_reply: this.adminReply\n          }, {\n            headers\n          });\n          if (response.data.message === '回复成功') {\n            alert('回复成功');\n            await this.fetchUserMessages(this.selectedUser.id);\n            this.adminReply = '';\n            this.selectedMessage = null;\n          } else {\n            throw new Error(response.data.message || '回复失败');\n          }\n        } else if (this.selectedUser) {\n          const response = await axios.post(`${API_BASE}/api/canteen/feedback/admin-message`, {\n            user_id: this.selectedUser.id,\n            message: this.adminReply\n          }, {\n            headers\n          });\n          if (response.data.message) {\n            alert(response.data.message);\n            await this.fetchUserMessages(this.selectedUser.id);\n            this.adminReply = '';\n          } else {\n            throw new Error('发送失败');\n          }\n        }\n      } catch (error) {\n        console.error('发送消息失败:', error);\n        alert('发送消息失败：' + (error.response?.data?.message || error.message));\n      }\n    },\n    cancelReply() {\n      this.selectedMessage = null;\n      this.adminReply = '';\n    },\n    async deleteMessage(message) {\n      if (!confirm('确定要删除这条留言吗？')) return;\n      try {\n        const token = localStorage.getItem('authToken');\n        const userRole = localStorage.getItem('userRole');\n        if (userRole !== 'admin' && userRole !== 'super_admin') {\n          this.$router.push('/');\n          return;\n        }\n        const headers = {\n          'Authorization': `Bearer ${token}`\n        };\n        await axios.delete(`${API_BASE}/api/canteen/feedback/${message.id}`, {\n          headers\n        });\n        alert('留言已删除');\n        await this.fetchUserMessages(this.selectedUser.id);\n      } catch (error) {\n        alert('删除留言失败：' + (error.response?.data?.message || error.message));\n      }\n    },\n    formatTimestamp(timestamp) {\n      if (!timestamp) return '';\n      const date = new Date(timestamp);\n      return date.toLocaleString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    }\n  },\n  async mounted() {\n    const userRole = localStorage.getItem('userRole');\n    if (userRole !== 'admin' && userRole !== 'super_admin') {\n      this.$router.push('/');\n      return;\n    }\n    this.fetchUsers();\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}