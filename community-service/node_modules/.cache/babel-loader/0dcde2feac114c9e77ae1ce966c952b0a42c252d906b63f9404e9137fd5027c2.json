{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"order-detail\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"订单详细信息\", -1 /* HOISTED */)), $data.order ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"h3\", null, \"订单 ID: \" + _toDisplayString($data.order.id), 1 /* TEXT */), _createElementVNode(\"p\", null, \"用户邮箱: \" + _toDisplayString($data.order.user_email || '未知'), 1 /* TEXT */), _createElementVNode(\"p\", null, \"订单状态: \" + _toDisplayString($data.orderStatusMap[$data.order.status] || '未知状态'), 1 /* TEXT */), _createElementVNode(\"p\", null, \"总价格: \" + _toDisplayString($data.order.total_price) + \" 元\", 1 /* TEXT */), _createElementVNode(\"p\", null, \"创建时间: \" + _toDisplayString($options.formatDate($data.order.create_time)), 1 /* TEXT */), _cache[1] || (_cache[1] = _createElementVNode(\"h4\", null, \"订单内容:\", -1 /* HOISTED */)), $data.order.details && $data.order.details.length ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.order.details, detail => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: detail.id\n    }, _toDisplayString(detail.item_name) + \" × \" + _toDisplayString(detail.quantity) + \" = \" + _toDisplayString(detail.price) + \" 元 \", 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_4, \"暂无订单详情\"))])) : $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _cache[2] || (_cache[2] = [_createElementVNode(\"p\", null, \"正在加载订单信息...\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.goBack && $options.goBack(...args))\n  }, \"返回\")]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$data","order","_hoisted_2","_toDisplayString","id","user_email","orderStatusMap","status","total_price","$options","formatDate","create_time","details","length","_hoisted_3","_Fragment","_renderList","detail","item_name","quantity","price","_hoisted_4","loading","_hoisted_5","_cache","_createCommentVNode","onClick","args","goBack"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\OrderDetail.vue"],"sourcesContent":["<template>\n    <div class=\"order-detail\">\n        <h2>订单详细信息</h2>\n\n        <div v-if=\"order\">\n            <h3>订单 ID: {{ order.id }}</h3>\n            <p>用户邮箱: {{ order.user_email || '未知' }}</p>\n            <p>订单状态: {{ orderStatusMap[order.status] || '未知状态' }}</p>\n            <p>总价格: {{ order.total_price }} 元</p>\n            <p>创建时间: {{ formatDate(order.create_time) }}</p>\n            <h4>订单内容:</h4>\n            <ul v-if=\"order.details && order.details.length\">\n                <li v-for=\"detail in order.details\" :key=\"detail.id\">\n                    {{ detail.item_name }} × {{ detail.quantity }} = {{ detail.price }} 元\n                </li>\n            </ul>\n            <p v-else>暂无订单详情</p>\n        </div>\n\n        <div v-else-if=\"loading\">\n            <p>正在加载订单信息...</p>\n        </div>\n\n        <button @click=\"goBack\">返回</button>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { handleApiError } from '../utils/errorHandler';\nconst API = process.env.VUE_APP_API_URL;\n\nexport default {\n    name: 'OrderDetail',\n    data() {\n        return {\n            order: null,\n            loading: true,\n            orderStatusMap: {\n                0: '待付款',\n                1: '已付款',\n                2: '已完成',\n                3: '已取消'\n            }\n        };\n    },\n    async created() {\n        await this.fetchOrderDetails();\n    },\n    methods: {\n        async fetchOrderDetails() {\n            const orderId = this.$route.params.orderId;\n            try {\n                const response = await axios.get(`${API}/canteen/order/${orderId}`, {\n                    headers: {\n                        Authorization: `Bearer ${localStorage.getItem('authToken')}`\n                    }\n                });\n                console.log('订单数据:', response.data);\n                this.order = response.data;\n                this.loading = false;\n            } catch (error) {\n                console.error('获取订单详情失败:', error);\n                handleApiError(error);\n            }\n        },\n        formatDate(dateString) {\n            if (!dateString) return '暂无日期';\n            try {\n                const date = new Date(dateString);\n                if (isNaN(date.getTime())) return '无效日期';\n                \n                const options = { \n                    year: 'numeric', \n                    month: 'long', \n                    day: 'numeric', \n                    hour: '2-digit', \n                    minute: '2-digit',\n                    hour12: false \n                };\n                return date.toLocaleString('zh-CN', options);\n            } catch (error) {\n                console.error('日期格式化错误:', error);\n                return '日期格式错误';\n            }\n        },\n        goBack() {\n            this.$router.push('/discover'); // 返回到点餐页面\n        }\n    }\n};\n</script>\n\n<style scoped>\n.order-detail {\n    padding: 20px;\n}\n\nbutton {\n    background-color: #4CAF50;\n    color: white;\n    border: none;\n    padding: 10px;\n    cursor: pointer;\n    border-radius: 5px;\n}\n\nbutton:hover {\n    background-color: #45a049;\n}\n</style>\n"],"mappings":";;EACSA,KAAK,EAAC;AAAc;;EAD7BC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBACIC,mBAAA,CAuBM,OAvBNC,UAuBM,G,0BAtBFC,mBAAA,CAAe,YAAX,QAAM,sBAECC,KAAA,CAAAC,KAAK,I,cAAhBJ,mBAAA,CAaM,OAjBdK,UAAA,GAKYH,mBAAA,CAA8B,YAA1B,SAAO,GAAAI,gBAAA,CAAGH,KAAA,CAAAC,KAAK,CAACG,EAAE,kBACtBL,mBAAA,CAA2C,WAAxC,QAAM,GAAAI,gBAAA,CAAGH,KAAA,CAAAC,KAAK,CAACI,UAAU,0BAC5BN,mBAAA,CAAyD,WAAtD,QAAM,GAAAI,gBAAA,CAAGH,KAAA,CAAAM,cAAc,CAACN,KAAA,CAAAC,KAAK,CAACM,MAAM,6BACvCR,mBAAA,CAAqC,WAAlC,OAAK,GAAAI,gBAAA,CAAGH,KAAA,CAAAC,KAAK,CAACO,WAAW,IAAG,IAAE,iBACjCT,mBAAA,CAAgD,WAA7C,QAAM,GAAAI,gBAAA,CAAGM,QAAA,CAAAC,UAAU,CAACV,KAAA,CAAAC,KAAK,CAACU,WAAW,mB,0BACxCZ,mBAAA,CAAc,YAAV,OAAK,sBACCC,KAAA,CAAAC,KAAK,CAACW,OAAO,IAAIZ,KAAA,CAAAC,KAAK,CAACW,OAAO,CAACC,MAAM,I,cAA/ChB,mBAAA,CAIK,MAfjBiB,UAAA,I,kBAYgBjB,mBAAA,CAEKkB,SAAA,QAdrBC,WAAA,CAYqChB,KAAA,CAAAC,KAAK,CAACW,OAAO,EAAvBK,MAAM;yBAAjBpB,mBAAA,CAEK;MAFgCD,GAAG,EAAEqB,MAAM,CAACb;wBAC1Ca,MAAM,CAACC,SAAS,IAAG,KAAG,GAAAf,gBAAA,CAAGc,MAAM,CAACE,QAAQ,IAAG,KAAG,GAAAhB,gBAAA,CAAGc,MAAM,CAACG,KAAK,IAAG,KACvE;qDAEJvB,mBAAA,CAAoB,KAhBhCwB,UAAA,EAgBsB,QAAM,G,KAGJrB,KAAA,CAAAsB,OAAO,I,cAAvBzB,mBAAA,CAEM,OArBd0B,UAAA,EAAAC,MAAA,QAAAA,MAAA,OAoBYzB,mBAAA,CAAkB,WAAf,aAAW,oB,MApB1B0B,mBAAA,gBAuBQ1B,mBAAA,CAAmC;IAA1B2B,OAAK,EAAAF,MAAA,QAAAA,MAAA,UAAAG,IAAA,KAAElB,QAAA,CAAAmB,MAAA,IAAAnB,QAAA,CAAAmB,MAAA,IAAAD,IAAA,CAAM;KAAE,IAAE,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}