{"ast":null,"code":"import axios from 'axios';\nfunction delayAction(order, actionFn, delay) {\n  order.isButtonDisabled = true;\n  setTimeout(() => {\n    order.isButtonDisabled = false;\n    actionFn();\n  }, delay);\n}\nexport default {\n  data() {\n    return {\n      orders: [] // 存储所有订单信息\n    };\n  },\n  mounted() {\n    this.fetchOrders(); // 加载所有订单\n  },\n  methods: {\n    async fetchOrders() {\n      try {\n        const response = await axios.get('http://localhost:3000/api/auth/canteen/orders', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('authToken')}`\n          }\n        });\n        this.orders = response.data.map(order => ({\n          ...order,\n          isButtonDisabled: false\n        })); // 为每个订单添加一个isButtonDisabled属性\n        console.log('Fetched Orders:', JSON.stringify(this.orders, null, 2)); // 打印获取到的订单数据\n      } catch (error) {\n        console.error('获取订单列表失败:', error);\n        alert('获取订单列表失败，请重试。');\n      }\n    },\n    handleButtonClick(order, newStatus) {\n      const actionFn = async () => {\n        try {\n          if (newStatus === 'deleted') {\n            await this.deleteOrder(order.id);\n          } else {\n            await this.updateOrderStatus(order, newStatus);\n          }\n        } catch (error) {\n          console.error('操作失败:', error);\n        }\n      };\n      delayAction(order, actionFn, 2 * 60 * 1000); // 2分钟延迟，即120000ms\n    },\n    async updateOrderStatus(order, status) {\n      try {\n        await axios.put(`http://localhost:3000/api/auth/canteen/orders/${order.id}`, {\n          status\n        }, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('authToken')}`\n          }\n        });\n        alert('订单状态已更新');\n        order.status = status; // 更新本地状态以避免重新获取\n      } catch (error) {\n        console.error('更新订单状态失败:', error);\n        alert('更新订单状态失败，请重试。');\n      }\n    },\n    async deleteOrder(orderId) {\n      try {\n        await axios.delete(`http://localhost:3000/api/auth/canteen/orders/${orderId}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('authToken')}`\n          }\n        });\n        alert('订单已删除');\n        this.orders = this.orders.filter(order => order.id !== orderId); // 更新本地订单列表\n      } catch (error) {\n        console.error('删除订单失败:', error);\n        alert('删除订单失败，请重试。');\n      }\n    },\n    formatDate(dateString) {\n      const options = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      };\n      return new Date(dateString).toLocaleDateString('zh-CN', options);\n    }\n  }\n};","map":{"version":3,"names":["axios","delayAction","order","actionFn","delay","isButtonDisabled","setTimeout","data","orders","mounted","fetchOrders","methods","response","get","headers","Authorization","localStorage","getItem","map","console","log","JSON","stringify","error","alert","handleButtonClick","newStatus","deleteOrder","id","updateOrderStatus","status","put","orderId","delete","filter","formatDate","dateString","options","year","month","day","hour","minute","Date","toLocaleDateString"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\OrderManagement.vue"],"sourcesContent":["<template>\r\n    <div class=\"order-management\">\r\n      <h2>订单管理</h2>\r\n  \r\n      <div v-if=\"orders.length > 0\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>订单 ID</th>\r\n              <th>用户</th>\r\n              <th>邮箱</th>\r\n              <th>总价格</th>\r\n              <th>创建时间</th>\r\n              <th>状态</th>\r\n              <th>详细内容</th>\r\n              <th>操作</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"order in orders\" :key=\"order.id\">\r\n              <td>{{ order.id }}</td>\r\n              <td>{{ order.username }}</td>\r\n              <td>{{ order.email }}</td>\r\n              <td>{{ order.total_price }} 元</td>\r\n              <td>{{ formatDate(order.created_at) }}</td>\r\n              <td>{{ order.status }}</td>\r\n              <td>\r\n                <ul>\r\n                  <li v-for=\"item in order.items\" :key=\"item.menu_item_id\">\r\n                    {{ item.name }} ({{ item.quantity }}): {{ item.total }} 元\r\n                  </li>\r\n                </ul>\r\n              </td>\r\n              <td>\r\n                <button \r\n                  v-if=\"order.status === 'pending'\" \r\n                  @click=\"handleButtonClick(order, 'confirmed')\"\r\n                  :disabled=\"order.isButtonDisabled\"\r\n                >确定订单</button>\r\n  \r\n                <button \r\n                  v-if=\"order.status === 'confirmed'\" \r\n                  @click=\"handleButtonClick(order, 'completed')\"\r\n                  :disabled=\"order.isButtonDisabled\"\r\n                >完成订单</button>\r\n  \r\n                <button \r\n                  v-if=\"order.status === 'completed'\" \r\n                  @click=\"handleButtonClick(order, 'deleted')\"\r\n                  :disabled=\"order.isButtonDisabled\"\r\n                >删除订单</button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n  \r\n      <div v-else>\r\n        <p>没有找到订单。</p>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  function delayAction(order, actionFn, delay) {\r\n    order.isButtonDisabled = true;\r\n    setTimeout(() => {\r\n      order.isButtonDisabled = false;\r\n      actionFn();\r\n    }, delay);\r\n  }\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        orders: [] // 存储所有订单信息\r\n      };\r\n    },\r\n    mounted() {\r\n      this.fetchOrders(); // 加载所有订单\r\n    },\r\n    methods: {\r\n      async fetchOrders() {\r\n        try {\r\n          const response = await axios.get('http://localhost:3000/api/auth/canteen/orders', {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem('authToken')}`\r\n            }\r\n          });\r\n          this.orders = response.data.map(order => ({ ...order, isButtonDisabled: false })); // 为每个订单添加一个isButtonDisabled属性\r\n          console.log('Fetched Orders:', JSON.stringify(this.orders, null, 2)); // 打印获取到的订单数据\r\n        } catch (error) {\r\n          console.error('获取订单列表失败:', error);\r\n          alert('获取订单列表失败，请重试。');\r\n        }\r\n      },\r\n      handleButtonClick(order, newStatus) {\r\n        const actionFn = async () => {\r\n          try {\r\n            if (newStatus === 'deleted') {\r\n              await this.deleteOrder(order.id);\r\n            } else {\r\n              await this.updateOrderStatus(order, newStatus);\r\n            }\r\n          } catch (error) {\r\n            console.error('操作失败:', error);\r\n          }\r\n        };\r\n        delayAction(order, actionFn, 2 * 60 * 1000); // 2分钟延迟，即120000ms\r\n      },\r\n      async updateOrderStatus(order, status) {\r\n        try {\r\n          await axios.put(\r\n            `http://localhost:3000/api/auth/canteen/orders/${order.id}`, \r\n            { status }, \r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${localStorage.getItem('authToken')}`\r\n              }\r\n            }\r\n          );\r\n          alert('订单状态已更新');\r\n          order.status = status; // 更新本地状态以避免重新获取\r\n        } catch (error) {\r\n          console.error('更新订单状态失败:', error);\r\n          alert('更新订单状态失败，请重试。');\r\n        }\r\n      },\r\n      async deleteOrder(orderId) {\r\n        try {\r\n          await axios.delete(`http://localhost:3000/api/auth/canteen/orders/${orderId}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem('authToken')}`\r\n            }\r\n          });\r\n          alert('订单已删除');\r\n          this.orders = this.orders.filter(order => order.id !== orderId); // 更新本地订单列表\r\n        } catch (error) {\r\n          console.error('删除订单失败:', error);\r\n          alert('删除订单失败，请重试。');\r\n        }\r\n      },\r\n      formatDate(dateString) {\r\n        const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\r\n        return new Date(dateString).toLocaleDateString('zh-CN', options);\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .order-management {\r\n    padding: 20px;\r\n  }\r\n  table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n  th, td {\r\n    border: 1px solid #ddd;\r\n    padding: 8px;\r\n  }\r\n  th {\r\n    background-color: #f2f2f2;\r\n  }\r\n  button {\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    border: none;\r\n    padding: 5px 10px;\r\n    cursor: pointer;\r\n    border-radius: 3px;\r\n    margin-right: 5px;\r\n  }\r\n  button[disabled] {\r\n    background-color: #ddd;\r\n    cursor: not-allowed;\r\n  }\r\n  button:hover:not([disabled]) {\r\n    background-color: #45a049;\r\n  }\r\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}