{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"manage-feedback\"\n};\nconst _hoisted_2 = [\"onUpdate:modelValue\"];\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"留言管理\", -1 /* HOISTED */)), _createElementVNode(\"table\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"用户\"), _createElementVNode(\"th\", null, \"留言内容\"), _createElementVNode(\"th\", null, \"管理员回复\"), _createElementVNode(\"th\", null, \"状态\"), _createElementVNode(\"th\", null, \"操作\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.feedbacks, feedback => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: feedback.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(feedback.username), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(feedback.message), 1 /* TEXT */), _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"textarea\", {\n      \"onUpdate:modelValue\": $event => feedback.admin_reply = $event,\n      placeholder: \"回复内容\",\n      rows: \"3\"\n    }, null, 8 /* PROPS */, _hoisted_2), [[_vModelText, feedback.admin_reply]])]), _createElementVNode(\"td\", null, _toDisplayString(feedback.status), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.replyFeedback(feedback.id)\n    }, \"回复\", 8 /* PROPS */, _hoisted_3)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_Fragment","_renderList","$data","feedbacks","feedback","key","id","_toDisplayString","username","message","$event","admin_reply","placeholder","rows","_hoisted_2","status","onClick","$options","replyFeedback","_hoisted_3"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\ManageFeedback.vue"],"sourcesContent":["<template>\n    <div class=\"manage-feedback\">\n      <h2>留言管理</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>用户</th>\n            <th>留言内容</th>\n            <th>管理员回复</th>\n            <th>状态</th>\n            <th>操作</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"feedback in feedbacks\" :key=\"feedback.id\">\n            <td>{{ feedback.username }}</td>\n            <td>{{ feedback.message }}</td>\n            <td>\n              <textarea v-model=\"feedback.admin_reply\" placeholder=\"回复内容\" rows=\"3\"></textarea>\n            </td>\n            <td>{{ feedback.status }}</td>\n            <td>\n              <button @click=\"replyFeedback(feedback.id)\">回复</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  const BASE_URL = process.env.VUE_APP_BASE_URL;\n  export default {\n    data() {\n      return {\n        feedbacks: [], // 留言数据\n      };\n    },\n    mounted() {\n      this.fetchFeedbacks(); // 获取留言数据\n    },\n    methods: {\n      async fetchFeedbacks() {\n        try {\n          const response = await axios.get(`${BASE_URL}/api/canteen/feedback`);\n          this.feedbacks = response.data;\n        } catch (error) {\n          console.error('获取留言失败:', error);\n        }\n      },\n  \n      async replyFeedback(feedbackId) {\n        const feedback = this.feedbacks.find(item => item.id === feedbackId);\n        if (!feedback.admin_reply.trim()) {\n          alert('回复内容不能为空');\n          return;\n        }\n  \n        try {\n          await axios.put(`${BASE_URL}/api/canteen/feedback/${feedbackId}/reply`, {\n            admin_reply: feedback.admin_reply,\n          });\n          alert('回复成功');\n          this.fetchFeedbacks(); // 刷新留言列表\n        } catch (error) {\n          console.error('回复留言失败:', error);\n          alert('回复失败，请稍后重试');\n        }\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .manage-feedback {\n    padding: 20px;\n  }\n  \n  table {\n    width: 100%;\n    border-collapse: collapse;\n  }\n  \n  th, td {\n    padding: 10px;\n    border: 1px solid #ccc;\n  }\n  \n  textarea {\n    width: 100%;\n  }\n  \n  button {\n    padding: 10px 20px;\n    background-color: #4CAF50;\n    color: white;\n    border: none;\n    cursor: pointer;\n  }\n  \n  button:hover {\n    background-color: #45a049;\n  }\n  </style>\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAiB;mBADhC;mBAAA;;uBACIC,mBAAA,CA0BM,OA1BNC,UA0BM,G,0BAzBJC,mBAAA,CAAa,YAAT,MAAI,sBACRA,mBAAA,CAuBQ,gB,0BAtBNA,mBAAA,CAQQ,gBAPNA,mBAAA,CAMK,aALHA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAa,YAAT,MAAI,GACRA,mBAAA,CAAc,YAAV,OAAK,GACTA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAW,YAAP,IAAE,E,wBAGVA,mBAAA,CAYQ,iB,kBAXNF,mBAAA,CAUKG,SAAA,QAxBfC,WAAA,CAciCC,KAAA,CAAAC,SAAS,EAArBC,QAAQ;yBAAnBP,mBAAA,CAUK;MAV8BQ,GAAG,EAAED,QAAQ,CAACE;QAC/CP,mBAAA,CAAgC,YAAAQ,gBAAA,CAAzBH,QAAQ,CAACI,QAAQ,kBACxBT,mBAAA,CAA+B,YAAAQ,gBAAA,CAAxBH,QAAQ,CAACK,OAAO,kBACvBV,mBAAA,CAEK,a,gBADHA,mBAAA,CAAgF;MAlB9F,uBAAAW,MAAA,IAkBiCN,QAAQ,CAACO,WAAW,GAAAD,MAAA;MAAEE,WAAW,EAAC,MAAM;MAACC,IAAI,EAAC;4BAlB/EC,UAAA,I,cAkBiCV,QAAQ,CAACO,WAAW,E,KAEzCZ,mBAAA,CAA8B,YAAAQ,gBAAA,CAAvBH,QAAQ,CAACW,MAAM,kBACtBhB,mBAAA,CAEK,aADHA,mBAAA,CAAuD;MAA9CiB,OAAK,EAAAN,MAAA,IAAEO,QAAA,CAAAC,aAAa,CAACd,QAAQ,CAACE,EAAE;OAAG,IAAE,iBAtB5Da,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}