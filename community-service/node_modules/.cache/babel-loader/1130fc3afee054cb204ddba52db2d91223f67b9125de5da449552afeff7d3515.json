{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport axios from 'axios';\nimport { useRoute, useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nexport default {\n  name: 'OrderDetail',\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const order = ref(null);\n    const orderId = route.params.orderId;\n    const fetchOrderDetails = async () => {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_URL}/orders/${orderId}`);\n        order.value = response.data;\n      } catch (error) {\n        ElMessage.error('获取订单详情失败');\n        console.error('Error fetching order details:', error);\n      }\n    };\n    const goBack = () => {\n      router.back();\n    };\n    const getOrderStatusText = status => {\n      const statusMap = {\n        0: '待处理',\n        1: '处理中',\n        2: '已完成',\n        3: '已取消'\n      };\n      return statusMap[status] || '未知状态';\n    };\n    const getStatusType = status => {\n      const typeMap = {\n        0: 'info',\n        // 待处理\n        1: 'warning',\n        // 处理中\n        2: 'success',\n        // 已完成\n        3: 'danger' // 已取消\n      };\n      return typeMap[status] || 'info';\n    };\n    const formatDate = dateString => {\n      if (!dateString) return '感谢使用';\n      try {\n        const date = new Date(dateString);\n        if (isNaN(date.getTime())) return '--';\n        const options = {\n          year: \"numeric\",\n          month: \"2-digit\",\n          day: \"2-digit\",\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n          hour12: false\n        };\n        return date.toLocaleString(\"zh-CN\", options).replace(/\\//g, '-');\n      } catch (error) {\n        console.error('日期格式化错误:', error);\n        return '--';\n      }\n    };\n    onMounted(() => {\n      fetchOrderDetails();\n    });\n    return {\n      order,\n      orderId,\n      goBack,\n      getOrderStatusText,\n      getStatusType,\n      formatDate\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","useRoute","useRouter","ElMessage","name","setup","route","router","order","orderId","params","fetchOrderDetails","response","get","process","env","VUE_APP_API_URL","value","data","error","console","goBack","back","getOrderStatusText","status","statusMap","getStatusType","typeMap","formatDate","dateString","date","Date","isNaN","getTime","options","year","month","day","hour","minute","hour12","toLocaleString","replace"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\OrderDetail.vue"],"sourcesContent":["<template>\n  <div class=\"order-detail\">\n    <el-card class=\"detail-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <el-page-header @back=\"goBack\" :title=\"'返回'\" :content=\"'订单详情 #' + orderId\" />\n        </div>\n      </template>\n\n      <el-descriptions v-if=\"order\" class=\"margin-bottom\" title=\"订单信息\" :column=\"1\" border>\n        <el-descriptions-item label=\"订单状态\">\n          <el-tag :type=\"getStatusType(order.status)\">\n            {{ getOrderStatusText(order.status) }}\n          </el-tag>\n        </el-descriptions-item>\n        <el-descriptions-item label=\"用户信息\">\n          {{ order.user.username }} ({{ order.user.email }})\n        </el-descriptions-item>\n        <el-descriptions-item label=\"订单创建时间\">\n          {{ formatDate(order.created_at) }}\n        </el-descriptions-item>\n        <el-descriptions-item label=\"总价\">\n          <span class=\"price\">¥{{ order.total_price }}</span>\n        </el-descriptions-item>\n      </el-descriptions>\n\n      <div v-if=\"order && order.items\" class=\"order-items\">\n        <h3>订单商品</h3>\n        <el-table :data=\"order.items\" style=\"width: 100%\" stripe>\n          <el-table-column prop=\"name\" label=\"商品名称\" />\n          <el-table-column prop=\"price\" label=\"单价\">\n            <template #default=\"scope\">\n              ¥{{ scope.row.price }}\n            </template>\n          </el-table-column>\n          <el-table-column prop=\"quantity\" label=\"数量\" width=\"100\" />\n          <el-table-column label=\"小计\" width=\"120\">\n            <template #default=\"scope\">\n              <span class=\"subtotal\">¥{{ (scope.row.price * scope.row.quantity).toFixed(2) }}</span>\n            </template>\n          </el-table-column>\n        </el-table>\n\n        <div class=\"total-section\">\n          <el-statistic title=\"订单总价\" :value=\"order.total_price\" prefix=\"¥\">\n            <template #suffix>\n              <span class=\"small-text\">元</span>\n            </template>\n          </el-statistic>\n        </div>\n      </div>\n\n      <div v-if=\"!order\" class=\"loading-state\">\n        <el-empty description=\"订单信息加载中...\" />\n      </div>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue'\nimport axios from 'axios'\nimport { useRoute, useRouter } from 'vue-router'\nimport { ElMessage } from 'element-plus'\n\nexport default {\n  name: 'OrderDetail',\n  setup() {\n    const route = useRoute()\n    const router = useRouter()\n    const order = ref(null)\n    const orderId = route.params.orderId\n\n    const fetchOrderDetails = async () => {\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_URL}/orders/${orderId}`)\n        order.value = response.data\n      } catch (error) {\n        ElMessage.error('获取订单详情失败')\n        console.error('Error fetching order details:', error)\n      }\n    }\n\n    const goBack = () => {\n      router.back()\n    }\n\n    const getOrderStatusText = (status) => {\n      const statusMap = {\n        0: '待处理',\n        1: '处理中',\n        2: '已完成',\n        3: '已取消'\n      }\n      return statusMap[status] || '未知状态'\n    }\n\n    const getStatusType = (status) => {\n      const typeMap = {\n        0: 'info',    // 待处理\n        1: 'warning', // 处理中\n        2: 'success', // 已完成\n        3: 'danger'   // 已取消\n      }\n      return typeMap[status] || 'info'\n    }\n\n    const formatDate = (dateString) => {\n      if (!dateString) return '感谢使用'\n      try {\n        const date = new Date(dateString)\n        if (isNaN(date.getTime())) return '--'\n        const options = { \n          year: \"numeric\", \n          month: \"2-digit\", \n          day: \"2-digit\", \n          hour: \"2-digit\", \n          minute: \"2-digit\",\n          hour12: false \n        }\n        return date.toLocaleString(\"zh-CN\", options).replace(/\\//g, '-')\n      } catch (error) {\n        console.error('日期格式化错误:', error)\n        return '--'\n      }\n    }\n\n    onMounted(() => {\n      fetchOrderDetails()\n    })\n\n    return {\n      order,\n      orderId,\n      goBack,\n      getOrderStatusText,\n      getStatusType,\n      formatDate\n    }\n  }\n}\n</script>\n\n<style scoped>\n.order-detail {\n  max-width: 1000px;\n  margin: 20px auto;\n  padding: 0 20px;\n}\n\n.detail-card {\n  margin-bottom: 20px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.margin-bottom {\n  margin-bottom: 20px;\n}\n\n.order-items {\n  margin-top: 30px;\n}\n\n.order-items h3 {\n  margin-bottom: 20px;\n  color: #303133;\n  font-weight: 500;\n}\n\n.price {\n  color: #f56c6c;\n  font-weight: 600;\n  font-size: 16px;\n}\n\n.subtotal {\n  color: #409EFF;\n  font-weight: 500;\n}\n\n.total-section {\n  margin-top: 30px;\n  display: flex;\n  justify-content: flex-end;\n  padding: 20px;\n  background-color: #f8f9fa;\n  border-radius: 8px;\n}\n\n.small-text {\n  font-size: 14px;\n  color: #909399;\n  margin-left: 4px;\n}\n\n:deep(.el-descriptions) {\n  margin-bottom: 20px;\n}\n\n:deep(.el-descriptions__title) {\n  font-size: 18px;\n  font-weight: 500;\n  margin-bottom: 16px;\n}\n\n:deep(.el-descriptions__label) {\n  font-weight: 500;\n}\n\n:deep(.el-table) {\n  margin-top: 16px;\n}\n\n.loading-state {\n  padding: 40px 0;\n  text-align: center;\n}\n</style>\n"],"mappings":"AA4DA,SAASA,GAAG,EAAEC,SAAQ,QAAS,KAAI;AACnC,OAAOC,KAAI,MAAO,OAAM;AACxB,SAASC,QAAQ,EAAEC,SAAQ,QAAS,YAAW;AAC/C,SAASC,SAAQ,QAAS,cAAa;AAEvC,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIL,QAAQ,CAAC;IACvB,MAAMM,MAAK,GAAIL,SAAS,CAAC;IACzB,MAAMM,KAAI,GAAIV,GAAG,CAAC,IAAI;IACtB,MAAMW,OAAM,GAAIH,KAAK,CAACI,MAAM,CAACD,OAAM;IAEnC,MAAME,iBAAgB,GAAI,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMZ,KAAK,CAACa,GAAG,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,eAAe,WAAWP,OAAO,EAAE;QACnFD,KAAK,CAACS,KAAI,GAAIL,QAAQ,CAACM,IAAG;MAC5B,EAAE,OAAOC,KAAK,EAAE;QACdhB,SAAS,CAACgB,KAAK,CAAC,UAAU;QAC1BC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK;MACtD;IACF;IAEA,MAAME,MAAK,GAAIA,CAAA,KAAM;MACnBd,MAAM,CAACe,IAAI,CAAC;IACd;IAEA,MAAMC,kBAAiB,GAAKC,MAAM,IAAK;MACrC,MAAMC,SAAQ,GAAI;QAChB,CAAC,EAAE,KAAK;QACR,CAAC,EAAE,KAAK;QACR,CAAC,EAAE,KAAK;QACR,CAAC,EAAE;MACL;MACA,OAAOA,SAAS,CAACD,MAAM,KAAK,MAAK;IACnC;IAEA,MAAME,aAAY,GAAKF,MAAM,IAAK;MAChC,MAAMG,OAAM,GAAI;QACd,CAAC,EAAE,MAAM;QAAK;QACd,CAAC,EAAE,SAAS;QAAE;QACd,CAAC,EAAE,SAAS;QAAE;QACd,CAAC,EAAE,QAAO,CAAI;MAChB;MACA,OAAOA,OAAO,CAACH,MAAM,KAAK,MAAK;IACjC;IAEA,MAAMI,UAAS,GAAKC,UAAU,IAAK;MACjC,IAAI,CAACA,UAAU,EAAE,OAAO,MAAK;MAC7B,IAAI;QACF,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,UAAU;QAChC,IAAIG,KAAK,CAACF,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,IAAG;QACrC,MAAMC,OAAM,GAAI;UACdC,IAAI,EAAE,SAAS;UACfC,KAAK,EAAE,SAAS;UAChBC,GAAG,EAAE,SAAS;UACdC,IAAI,EAAE,SAAS;UACfC,MAAM,EAAE,SAAS;UACjBC,MAAM,EAAE;QACV;QACA,OAAOV,IAAI,CAACW,cAAc,CAAC,OAAO,EAAEP,OAAO,CAAC,CAACQ,OAAO,CAAC,KAAK,EAAE,GAAG;MACjE,EAAE,OAAOvB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK;QAC/B,OAAO,IAAG;MACZ;IACF;IAEApB,SAAS,CAAC,MAAM;MACdY,iBAAiB,CAAC;IACpB,CAAC;IAED,OAAO;MACLH,KAAK;MACLC,OAAO;MACPY,MAAM;MACNE,kBAAkB;MAClBG,aAAa;MACbE;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}