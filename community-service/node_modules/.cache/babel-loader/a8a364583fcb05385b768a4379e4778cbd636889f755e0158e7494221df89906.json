{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      menuItems: [] // 菜单数据\n    };\n  },\n  mounted() {\n    this.fetchMenuItems(); // 加载可用的菜单项\n  },\n  methods: {\n    async fetchMenuItems() {\n      try {\n        const response = await axios.get('http://localhost:3000/api/auth/canteen/menu'); // 请求可用菜单项\n        this.menuItems = response.data.map(item => ({\n          ...item,\n          quantity: 1\n        })); // 添加 quantity 字段并设置默认值为1\n      } catch (error) {\n        console.error('获取菜单失败:', error);\n      }\n    },\n    async order(item) {\n      if (item.quantity <= 0) {\n        alert('订购数量必须大于0');\n        return;\n      }\n      try {\n        const response = await axios.post('http://localhost:3000/api/auth/canteen/order', {\n          menu_item_id: item.id,\n          quantity: item.quantity\n        }, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('authToken')}` // Bearer 格式\n          }\n        });\n        alert(response.data.message || '订餐成功！');\n      } catch (error) {\n        console.error('订餐失败:', error);\n        alert('订餐失败，请重试。');\n      }\n    },\n    async checkout() {\n      const orders = this.menuItems.filter(item => item.quantity > 0).map(item => ({\n        menu_item_id: item.id,\n        quantity: item.quantity\n      }));\n      if (orders.length === 0) {\n        alert('请至少选择一项菜品！');\n        return;\n      }\n      try {\n        const response = await axios.post('http://localhost:3000/api/auth/canteen/order', {\n          items: orders\n        }, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('authToken')}` // Bearer 格式\n          }\n        });\n        alert(response.data.message || '结账成功！');\n        this.$router.push(`/order-detail/${response.data.orderId}`); // 跳转到订单详情页面\n      } catch (error) {\n        console.error('结账失败:', error);\n        alert('结账失败，请重试。');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","menuItems","mounted","fetchMenuItems","methods","response","get","map","item","quantity","error","console","order","alert","post","menu_item_id","id","headers","Authorization","localStorage","getItem","message","checkout","orders","filter","length","items","$router","push","orderId"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\CanteenOrder.vue"],"sourcesContent":["<template>\r\n    <div class=\"canteen-order\">\r\n      <h2>社区食堂</h2>\r\n  \r\n      <!-- 菜品列表 -->\r\n      <div v-if=\"menuItems.length > 0\">\r\n        <div v-for=\"item in menuItems\" :key=\"item.id\" class=\"menu-item\">\r\n          <img :src=\"item.image_url\" alt=\"菜品图片\" />\r\n          <h3>{{ item.name }}</h3>\r\n          <p>{{ item.description }}</p>\r\n          <p>价格: {{ item.price }} 元</p>\r\n  \r\n          <!-- 订餐数量输入框 -->\r\n          <input type=\"number\" v-model.number=\"item.quantity\" min=\"1\" placeholder=\"订购数量\" />\r\n  \r\n          <!-- 订餐按钮 -->\r\n          <button @click=\"order(item)\">加入购物车</button>\r\n        </div>\r\n      </div>\r\n  \r\n      <div v-else>\r\n        <p>目前没有可用的菜品。</p>\r\n      </div>\r\n  \r\n      <button @click=\"checkout\">结账</button>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        menuItems: [], // 菜单数据\r\n      };\r\n    },\r\n    mounted() {\r\n      this.fetchMenuItems(); // 加载可用的菜单项\r\n    },\r\n    methods: {\r\n      async fetchMenuItems() {\r\n        try {\r\n          const response = await axios.get('http://localhost:3000/api/auth/canteen/menu'); // 请求可用菜单项\r\n          this.menuItems = response.data.map(item => ({ ...item, quantity: 1 })); // 添加 quantity 字段并设置默认值为1\r\n        } catch (error) {\r\n          console.error('获取菜单失败:', error);\r\n        }\r\n      },\r\n  \r\n      async order(item) {\r\n        if (item.quantity <= 0) {\r\n          alert('订购数量必须大于0');\r\n          return;\r\n        }\r\n  \r\n        try {\r\n          const response = await axios.post('http://localhost:3000/api/auth/canteen/order', {\r\n            menu_item_id: item.id,\r\n            quantity: item.quantity,\r\n          }, {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem('authToken')}`, // Bearer 格式\r\n            }\r\n          });\r\n          alert(response.data.message || '订餐成功！');\r\n        } catch (error) {\r\n          console.error('订餐失败:', error);\r\n          alert('订餐失败，请重试。');\r\n        }\r\n      },\r\n  \r\n      async checkout() {\r\n        const orders = this.menuItems\r\n          .filter(item => item.quantity > 0)\r\n          .map(item => ({\r\n            menu_item_id: item.id,\r\n            quantity: item.quantity,\r\n          }));\r\n  \r\n        if (orders.length === 0) {\r\n          alert('请至少选择一项菜品！');\r\n          return;\r\n        }\r\n  \r\n        try {\r\n          const response = await axios.post(\r\n            'http://localhost:3000/api/auth/canteen/order',\r\n            { items: orders },\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${localStorage.getItem('authToken')}`, // Bearer 格式\r\n              }\r\n            }\r\n          );\r\n          alert(response.data.message || '结账成功！');\r\n          this.$router.push(`/order-detail/${response.data.orderId}`); // 跳转到订单详情页面\r\n        } catch (error) {\r\n          console.error('结账失败:', error);\r\n          alert('结账失败，请重试。');\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .canteen-order {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .menu-item {\r\n    border: 1px solid #ccc;\r\n    padding: 10px;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  img {\r\n    max-width: 100px;\r\n    margin-right: 20px;\r\n  }\r\n  \r\n  button {\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    border: none;\r\n    padding: 10px;\r\n    cursor: pointer;\r\n    border-radius: 5px;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #45a049;\r\n  }\r\n  </style>\r\n  "],"mappings":";AA6BE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE,CAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,cAAc,CAAC,CAAC,EAAE;EACzB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMN,KAAK,CAACO,GAAG,CAAC,6CAA6C,CAAC,EAAE;QACjF,IAAI,CAACL,SAAQ,GAAII,QAAQ,CAACL,IAAI,CAACO,GAAG,CAACC,IAAG,KAAM;UAAE,GAAGA,IAAI;UAAEC,QAAQ,EAAE;QAAE,CAAC,CAAC,CAAC,EAAE;MAC1E,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;MACjC;IACF,CAAC;IAED,MAAME,KAAKA,CAACJ,IAAI,EAAE;MAChB,IAAIA,IAAI,CAACC,QAAO,IAAK,CAAC,EAAE;QACtBI,KAAK,CAAC,WAAW,CAAC;QAClB;MACF;MAEA,IAAI;QACF,MAAMR,QAAO,GAAI,MAAMN,KAAK,CAACe,IAAI,CAAC,8CAA8C,EAAE;UAChFC,YAAY,EAAEP,IAAI,CAACQ,EAAE;UACrBP,QAAQ,EAAED,IAAI,CAACC;QACjB,CAAC,EAAE;UACDQ,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAE;UAChE;QACF,CAAC,CAAC;QACFP,KAAK,CAACR,QAAQ,CAACL,IAAI,CAACqB,OAAM,IAAK,OAAO,CAAC;MACzC,EAAE,OAAOX,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;QAC7BG,KAAK,CAAC,WAAW,CAAC;MACpB;IACF,CAAC;IAED,MAAMS,QAAQA,CAAA,EAAG;MACf,MAAMC,MAAK,GAAI,IAAI,CAACtB,SAAQ,CACzBuB,MAAM,CAAChB,IAAG,IAAKA,IAAI,CAACC,QAAO,GAAI,CAAC,EAChCF,GAAG,CAACC,IAAG,KAAM;QACZO,YAAY,EAAEP,IAAI,CAACQ,EAAE;QACrBP,QAAQ,EAAED,IAAI,CAACC;MACjB,CAAC,CAAC,CAAC;MAEL,IAAIc,MAAM,CAACE,MAAK,KAAM,CAAC,EAAE;QACvBZ,KAAK,CAAC,YAAY,CAAC;QACnB;MACF;MAEA,IAAI;QACF,MAAMR,QAAO,GAAI,MAAMN,KAAK,CAACe,IAAI,CAC/B,8CAA8C,EAC9C;UAAEY,KAAK,EAAEH;QAAO,CAAC,EACjB;UACEN,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAE;UAChE;QACF,CACF,CAAC;QACDP,KAAK,CAACR,QAAQ,CAACL,IAAI,CAACqB,OAAM,IAAK,OAAO,CAAC;QACvC,IAAI,CAACM,OAAO,CAACC,IAAI,CAAC,iBAAiBvB,QAAQ,CAACL,IAAI,CAAC6B,OAAO,EAAE,CAAC,EAAE;MAC/D,EAAE,OAAOnB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;QAC7BG,KAAK,CAAC,WAAW,CAAC;MACpB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}