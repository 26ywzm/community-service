{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"profile-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"auth-section\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"profile-section\"\n};\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\nconst _hoisted_6 = {\n  class: \"form-group\"\n};\nconst _hoisted_7 = {\n  class: \"form-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[13] || (_cache[13] = _createElementVNode(\"h2\", null, \"我的账户\", -1 /* HOISTED */)), !$data.isLoggedIn ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_cache[9] || (_cache[9] = _createElementVNode(\"p\", null, \"请先登录或注册以查看您的个人信息。\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    class: \"auth-button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.goToLogin && $options.goToLogin(...args))\n  }, \"登录\"), _createElementVNode(\"button\", {\n    class: \"auth-button register-button\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.goToRegister && $options.goToRegister(...args))\n  }, \"注册\")])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"h3\", null, \"欢迎, \" + _toDisplayString($data.user.username), 1 /* TEXT */), _createElementVNode(\"p\", null, \"邮箱: \" + _toDisplayString($data.user.email), 1 /* TEXT */), _createCommentVNode(\" 编辑按钮 \"), !$data.editProfile ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    class: \"edit-button\",\n    onClick: _cache[2] || (_cache[2] = $event => $data.editProfile = true)\n  }, \"编辑信息\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 编辑表单 \"), $data.editProfile ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_cache[10] || (_cache[10] = _createElementVNode(\"label\", null, \"用户名：\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.user.username = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user.username]])]), _createElementVNode(\"div\", _hoisted_6, [_cache[11] || (_cache[11] = _createElementVNode(\"label\", null, \"邮箱：\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.user.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user.email]])]), _createElementVNode(\"div\", _hoisted_7, [_cache[12] || (_cache[12] = _createElementVNode(\"label\", null, \"新密码（可选）：\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.newPassword = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPassword]])]), _createElementVNode(\"button\", {\n    class: \"save-button\",\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.updateProfile && $options.updateProfile(...args))\n  }, \"保存\"), _createElementVNode(\"button\", {\n    class: \"cancel-button\",\n    onClick: _cache[7] || (_cache[7] = (...args) => $options.cancelEdit && $options.cancelEdit(...args))\n  }, \"取消\")])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    class: \"logout-button\",\n    onClick: _cache[8] || (_cache[8] = (...args) => $options.logout && $options.logout(...args))\n  }, \"退出登录\")]))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$data","isLoggedIn","_hoisted_2","onClick","_cache","args","$options","goToLogin","goToRegister","_hoisted_3","_toDisplayString","user","username","email","_createCommentVNode","editProfile","$event","_hoisted_4","_hoisted_5","type","_hoisted_6","_hoisted_7","newPassword","updateProfile","cancelEdit","logout"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\Profile.vue"],"sourcesContent":["<template>\r\n  <div class=\"profile-container\">\r\n    <h2>我的账户</h2>\r\n    \r\n    <div v-if=\"!isLoggedIn\" class=\"auth-section\">\r\n      <p>请先登录或注册以查看您的个人信息。</p>\r\n      <button class=\"auth-button\" @click=\"goToLogin\">登录</button>\r\n      <button class=\"auth-button register-button\" @click=\"goToRegister\">注册</button>\r\n    </div>\r\n    \r\n    <div v-else class=\"profile-section\">\r\n      <h3>欢迎, {{ user.username }}</h3>\r\n      <p>邮箱: {{ user.email }}</p>\r\n      \r\n      <!-- 编辑按钮 -->\r\n      <button class=\"edit-button\" @click=\"editProfile = true\" v-if=\"!editProfile\">编辑信息</button>\r\n      \r\n      <!-- 编辑表单 -->\r\n      <div v-if=\"editProfile\">\r\n        <div class=\"form-group\">\r\n          <label>用户名：</label>\r\n          <input type=\"text\" v-model=\"user.username\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label>邮箱：</label>\r\n          <input type=\"email\" v-model=\"user.email\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label>新密码（可选）：</label>\r\n          <input type=\"password\" v-model=\"newPassword\" />\r\n        </div>\r\n        <button class=\"save-button\" @click=\"updateProfile\">保存</button>\r\n        <button class=\"cancel-button\" @click=\"cancelEdit\">取消</button>\r\n      </div>\r\n\r\n      <button class=\"logout-button\" @click=\"logout\">退出登录</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'UserProfile',\r\n  data() {\r\n    return {\r\n      isLoggedIn: false,\r\n      user: {\r\n        username: '',\r\n        email: ''\r\n      }, // 存储从后端获取的用户信息\r\n      newPassword: '', // 新密码字段（可选）\r\n      editProfile: false, // 是否在编辑模式\r\n    };\r\n  },\r\n  methods: {\r\n    goToLogin() {\r\n      this.$router.push('/login');\r\n    },\r\n    goToRegister() {\r\n      this.$router.push('/register');\r\n    },\r\n    logout() {\r\n      localStorage.removeItem('authToken'); // 清除 token\r\n      this.isLoggedIn = false;\r\n      alert('已退出登录');\r\n      this.$router.push('/');\r\n    },\r\n    async fetchUserProfile() {\r\n      const token = localStorage.getItem('authToken');\r\n      if (!token) {\r\n        this.isLoggedIn = false;\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/api/auth/profile', {\r\n          headers: {\r\n            Authorization: token,\r\n          },\r\n        });\r\n\r\n        this.user = response.data.user;\r\n        this.isLoggedIn = true;\r\n      } catch (error) {\r\n        console.error('获取用户信息失败:', error);\r\n        this.isLoggedIn = false;\r\n      }\r\n    },\r\n    async updateProfile() {\r\n      const token = localStorage.getItem('authToken');\r\n      if (!token) {\r\n        return alert('请先登录');\r\n      }\r\n\r\n      try {\r\n        await axios.put(\r\n          'http://localhost:3000/api/auth/profile',\r\n          {\r\n            username: this.user.username,\r\n            email: this.user.email,\r\n            password: this.newPassword, // 新密码（如果用户填写了）\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: token,\r\n            },\r\n          }\r\n        );\r\n\r\n        alert('用户信息已更新');\r\n        this.editProfile = false;\r\n        this.newPassword = ''; // 清除新密码字段\r\n      } catch (error) {\r\n        console.error('更新用户信息失败:', error);\r\n        alert('更新失败，请重试');\r\n      }\r\n    },\r\n    cancelEdit() {\r\n      this.editProfile = false;\r\n      this.newPassword = ''; // 清除新密码字段\r\n      this.fetchUserProfile(); // 重新获取用户信息，恢复原始数据\r\n    }, \r\n  },\r\n  mounted() {\r\n    this.fetchUserProfile(); // 页面加载时调用 API 获取用户信息\r\n  },\r\n  logout() {\r\n      localStorage.removeItem('authToken'); // 清除 token\r\n      localStorage.removeItem('userRole'); // 清除角色信息\r\n      localStorage.removeItem('username'); // 清除用户名\r\n      alert('已退出登录');\r\n      this.$router.push('/'); // 跳转到首页\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 基本容器样式 */\r\n.profile-container {\r\n  padding: 40px;\r\n  max-width: 600px;\r\n  margin: 40px auto;\r\n  background-color: #f5f7fa;\r\n  border-radius: 12px;\r\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n/* 标题样式 */\r\nh2 {\r\n  color: #333;\r\n  margin-bottom: 20px;\r\n  font-size: 28px;\r\n  font-weight: 700;\r\n}\r\n\r\n/* 按钮样式 */\r\n.auth-button, .save-button, .cancel-button, .logout-button, .edit-button {\r\n  background-color: #007bff;\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  margin: 10px;\r\n  transition: background-color 0.3s ease, transform 0.2s ease;\r\n}\r\n\r\n.auth-button:hover, .save-button:hover, .cancel-button:hover, .logout-button:hover, .edit-button:hover {\r\n  background-color: #0056b3;\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.register-button {\r\n  background-color: #28a745;\r\n}\r\n\r\n.register-button:hover {\r\n  background-color: #218838;\r\n}\r\n\r\n/* 输入框样式 */\r\ninput {\r\n  width: 100%;\r\n  padding: 10px;\r\n  margin-bottom: 15px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 6px;\r\n  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.05);\r\n  font-size: 16px;\r\n  transition: border-color 0.3s ease;\r\n}\r\n\r\ninput:focus {\r\n  border-color: #007bff;\r\n}\r\n\r\n/* 登录成功后的个人信息区域 */\r\n.profile-section {\r\n  background-color: #ffffff;\r\n  padding: 20px;\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  margin-top: 20px;\r\n  text-align: left;\r\n}\r\n\r\n.profile-section h3 {\r\n  color: #333;\r\n  margin-bottom: 10px;\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n}\r\n\r\n.profile-section p {\r\n  color: #666;\r\n  font-size: 16px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.logout-button {\r\n  background-color: #dc3545;\r\n}\r\n\r\n.logout-button:hover {\r\n  background-color: #c82333;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}