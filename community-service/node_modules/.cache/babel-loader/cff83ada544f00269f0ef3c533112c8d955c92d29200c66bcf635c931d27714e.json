{"ast":null,"code":"import { defineComponent, createVNode as _createVNode, Fragment as _Fragment, createTextVNode as _createTextVNode } from \"vue\";\nimport { isDef, numericProp, makeStringProp, createNamespace } from \"../utils/index.mjs\";\nimport { Tag } from \"../tag/index.mjs\";\nimport { Image } from \"../image/index.mjs\";\nconst [name, bem] = createNamespace(\"card\");\nconst cardProps = {\n  tag: String,\n  num: numericProp,\n  desc: String,\n  thumb: String,\n  title: String,\n  price: numericProp,\n  centered: Boolean,\n  lazyLoad: Boolean,\n  currency: makeStringProp(\"\\xA5\"),\n  thumbLink: String,\n  originPrice: numericProp\n};\nvar stdin_default = defineComponent({\n  name,\n  props: cardProps,\n  emits: [\"clickThumb\"],\n  setup(props, {\n    slots,\n    emit\n  }) {\n    const renderTitle = () => {\n      if (slots.title) {\n        return slots.title();\n      }\n      if (props.title) {\n        return _createVNode(\"div\", {\n          \"class\": [bem(\"title\"), \"van-multi-ellipsis--l2\"]\n        }, [props.title]);\n      }\n    };\n    const renderThumbTag = () => {\n      if (slots.tag || props.tag) {\n        return _createVNode(\"div\", {\n          \"class\": bem(\"tag\")\n        }, [slots.tag ? slots.tag() : _createVNode(Tag, {\n          \"mark\": true,\n          \"type\": \"primary\"\n        }, {\n          default: () => [props.tag]\n        })]);\n      }\n    };\n    const renderThumbImage = () => {\n      if (slots.thumb) {\n        return slots.thumb();\n      }\n      return _createVNode(Image, {\n        \"src\": props.thumb,\n        \"fit\": \"cover\",\n        \"width\": \"100%\",\n        \"height\": \"100%\",\n        \"lazyLoad\": props.lazyLoad\n      }, null);\n    };\n    const renderThumb = () => {\n      if (slots.thumb || props.thumb) {\n        return _createVNode(\"a\", {\n          \"href\": props.thumbLink,\n          \"class\": bem(\"thumb\"),\n          \"onClick\": event => emit(\"clickThumb\", event)\n        }, [renderThumbImage(), renderThumbTag()]);\n      }\n    };\n    const renderDesc = () => {\n      if (slots.desc) {\n        return slots.desc();\n      }\n      if (props.desc) {\n        return _createVNode(\"div\", {\n          \"class\": [bem(\"desc\"), \"van-ellipsis\"]\n        }, [props.desc]);\n      }\n    };\n    const renderPriceText = () => {\n      const priceArr = props.price.toString().split(\".\");\n      return _createVNode(\"div\", null, [_createVNode(\"span\", {\n        \"class\": bem(\"price-currency\")\n      }, [props.currency]), _createVNode(\"span\", {\n        \"class\": bem(\"price-integer\")\n      }, [priceArr[0]]), priceArr.length > 1 && _createVNode(_Fragment, null, [_createTextVNode(\".\"), _createVNode(\"span\", {\n        \"class\": bem(\"price-decimal\")\n      }, [priceArr[1]])])]);\n    };\n    return () => {\n      var _a, _b, _c;\n      const showNum = slots.num || isDef(props.num);\n      const showPrice = slots.price || isDef(props.price);\n      const showOriginPrice = slots[\"origin-price\"] || isDef(props.originPrice);\n      const showBottom = showNum || showPrice || showOriginPrice || slots.bottom;\n      const Price = showPrice && _createVNode(\"div\", {\n        \"class\": bem(\"price\")\n      }, [slots.price ? slots.price() : renderPriceText()]);\n      const OriginPrice = showOriginPrice && _createVNode(\"div\", {\n        \"class\": bem(\"origin-price\")\n      }, [slots[\"origin-price\"] ? slots[\"origin-price\"]() : `${props.currency} ${props.originPrice}`]);\n      const Num = showNum && _createVNode(\"div\", {\n        \"class\": bem(\"num\")\n      }, [slots.num ? slots.num() : `x${props.num}`]);\n      const Footer = slots.footer && _createVNode(\"div\", {\n        \"class\": bem(\"footer\")\n      }, [slots.footer()]);\n      const Bottom = showBottom && _createVNode(\"div\", {\n        \"class\": bem(\"bottom\")\n      }, [(_a = slots[\"price-top\"]) == null ? void 0 : _a.call(slots), Price, OriginPrice, Num, (_b = slots.bottom) == null ? void 0 : _b.call(slots)]);\n      return _createVNode(\"div\", {\n        \"class\": bem()\n      }, [_createVNode(\"div\", {\n        \"class\": bem(\"header\")\n      }, [renderThumb(), _createVNode(\"div\", {\n        \"class\": bem(\"content\", {\n          centered: props.centered\n        })\n      }, [_createVNode(\"div\", null, [renderTitle(), renderDesc(), (_c = slots.tags) == null ? void 0 : _c.call(slots)]), Bottom])]), Footer]);\n    };\n  }\n});\nexport { cardProps, stdin_default as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}