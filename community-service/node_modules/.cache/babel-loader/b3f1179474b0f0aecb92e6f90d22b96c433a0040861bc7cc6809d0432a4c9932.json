{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport { verifyAuth } from '../utils/auth';\n\n// 路由配置\nconst routes = [{\n  path: '/',\n  name: 'CommunityHome',\n  component: () => import('@/components/CommunityHome.vue')\n}, {\n  path: '/login',\n  name: 'UserLogin',\n  component: () => import('@/components/UserLogin.vue')\n}, {\n  path: '/register',\n  name: 'UserRegister',\n  component: () => import('@/components/UserRegister.vue')\n}, {\n  path: '/profile',\n  name: 'Profile',\n  component: () => import('@/components/UserProfile.vue'),\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/discover',\n  name: 'Discover',\n  component: () => import('@/components/DiscoverPage.vue'),\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/news/:id',\n  name: 'NewsDetail',\n  component: () => import('@/components/NewsDetail.vue'),\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/articles/new',\n  name: 'ArticleEditor',\n  component: () => import('@/components/ArticleEditor.vue'),\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/canteenorder',\n  name: 'CanteenOrder',\n  component: () => import('@/components/CanteenOrder.vue'),\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/canteenadmin',\n  name: 'CanteenAdmin',\n  component: () => import('@/components/CanteenAdmin.vue'),\n  meta: {\n    requiresAuth: true,\n    roles: ['admin', 'super_admin']\n  }\n}, {\n  path: '/order/:orderId',\n  name: 'OrderDetail',\n  component: () => import('@/components/OrderDetail.vue'),\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/canteen/orders',\n  name: 'OrderManagement',\n  component: () => import('@/components/OrderManagement.vue'),\n  meta: {\n    requiresAuth: true,\n    roles: ['admin', 'super_admin']\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// 全局路由守卫\nrouter.beforeEach(async (to, from, next) => {\n  // 如果路由不需要认证，直接通过\n  if (!to.meta.requiresAuth) {\n    return next();\n  }\n  try {\n    // 验证用户认证状态\n    const result = await verifyAuth();\n    if (!result.valid) {\n      // 如果验证失败，重定向到登录页\n      return next('/login');\n    }\n\n    // 如果路由需要特定角色\n    if (to.meta.roles) {\n      const userRole = localStorage.getItem('userRole');\n\n      // 如果用户角色不在允许的角色列表中\n      if (!to.meta.roles.includes(userRole)) {\n        return next('/unauthorized');\n      }\n    }\n\n    // 验证通过\n    next();\n  } catch (error) {\n    console.error('路由验证失败:', error);\n    next('/login');\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","verifyAuth","routes","path","name","component","meta","requiresAuth","roles","router","history","beforeEach","to","from","next","result","valid","userRole","localStorage","getItem","includes","error","console"],"sources":["C:/Users/拯救者/Desktop/text/community-service/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\nimport { verifyAuth } from '../utils/auth';\n\n// 路由配置\nconst routes = [\n  { path: '/', name: 'CommunityHome', component: () => import('@/components/CommunityHome.vue') },\n  { path: '/login', name: 'UserLogin', component: () => import('@/components/UserLogin.vue') },\n  { path: '/register', name: 'UserRegister', component: () => import('@/components/UserRegister.vue') },\n  { \n    path: '/profile', \n    name: 'Profile', \n    component: () => import('@/components/UserProfile.vue'),\n    meta: { requiresAuth: true }\n  },\n  { \n    path: '/discover', \n    name: 'Discover', \n    component: () => import('@/components/DiscoverPage.vue'),\n    meta: { requiresAuth: true }\n  },\n  { \n    path: '/news/:id', \n    name: 'NewsDetail', \n    component: () => import('@/components/NewsDetail.vue'),\n    meta: { requiresAuth: true }\n  },\n  { \n    path: '/articles/new', \n    name: 'ArticleEditor', \n    component: () => import('@/components/ArticleEditor.vue'),\n    meta: { requiresAuth: true }\n  },\n  { \n    path: '/canteenorder', \n    name: 'CanteenOrder', \n    component: () => import('@/components/CanteenOrder.vue'),\n    meta: { requiresAuth: true }\n  },\n  { \n    path: '/canteenadmin', \n    name: 'CanteenAdmin', \n    component: () => import('@/components/CanteenAdmin.vue'),\n    meta: { requiresAuth: true, roles: ['admin', 'super_admin'] }\n  },\n  { \n    path: '/order/:orderId', \n    name: 'OrderDetail', \n    component: () => import('@/components/OrderDetail.vue'),\n    meta: { requiresAuth: true }\n  },\n  { \n    path: '/canteen/orders', \n    name: 'OrderManagement', \n    component: () => import('@/components/OrderManagement.vue'),\n    meta: { requiresAuth: true, roles: ['admin', 'super_admin'] }\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// 全局路由守卫\nrouter.beforeEach(async (to, from, next) => {\n  // 如果路由不需要认证，直接通过\n  if (!to.meta.requiresAuth) {\n    return next();\n  }\n\n  try {\n    // 验证用户认证状态\n    const result = await verifyAuth();\n    \n    if (!result.valid) {\n      // 如果验证失败，重定向到登录页\n      return next('/login');\n    }\n\n    // 如果路由需要特定角色\n    if (to.meta.roles) {\n      const userRole = localStorage.getItem('userRole');\n      \n      // 如果用户角色不在允许的角色列表中\n      if (!to.meta.roles.includes(userRole)) {\n        return next('/unauthorized');\n      }\n    }\n\n    // 验证通过\n    next();\n  } catch (error) {\n    console.error('路由验证失败:', error);\n    next('/login');\n  }\n});\n\nexport default router;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}