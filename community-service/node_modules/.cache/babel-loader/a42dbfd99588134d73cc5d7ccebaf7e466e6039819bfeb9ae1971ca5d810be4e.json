{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport router from '../router';\nconst API = process.env.VUE_APP_API_URL;\nexport const logout = () => {\n  localStorage.removeItem('authToken');\n  localStorage.removeItem('userRole');\n  localStorage.removeItem('username');\n  localStorage.removeItem('userId');\n  localStorage.removeItem('email');\n  router.push('/login');\n};\nexport const verifyAuth = async () => {\n  try {\n    const token = localStorage.getItem('authToken');\n    if (!token) {\n      logout();\n      return {\n        valid: false,\n        reason: 'no-token'\n      };\n    }\n    const response = await axios.get(`${API}/verify`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    if (!response.data.valid) {\n      // 如果角色不匹配，立即登出\n      logout();\n      return {\n        valid: false,\n        reason: 'role-mismatch'\n      };\n    }\n    return {\n      valid: true,\n      role: response.data.role\n    };\n  } catch (error) {\n    console.error('验证失败:', error);\n    if (error.response && error.response.status === 401) {\n      logout();\n      return {\n        valid: false,\n        reason: 'unauthorized'\n      };\n    }\n    // 其他错误（如网络错误）也登出\n    logout();\n    return {\n      valid: false,\n      reason: 'error'\n    };\n  }\n};","map":{"version":3,"names":["axios","router","API","process","env","VUE_APP_API_URL","logout","localStorage","removeItem","push","verifyAuth","token","getItem","valid","reason","response","get","headers","Authorization","data","role","error","console","status"],"sources":["C:/Users/拯救者/Desktop/text/community-service/src/utils/auth.js"],"sourcesContent":["import axios from 'axios';\nimport router from '../router';\n\nconst API = process.env.VUE_APP_API_URL;\n\nexport const logout = () => {\n  localStorage.removeItem('authToken');\n  localStorage.removeItem('userRole');\n  localStorage.removeItem('username');\n  localStorage.removeItem('userId');\n  localStorage.removeItem('email');\n  router.push('/login');\n};\n\nexport const verifyAuth = async () => {\n  try {\n    const token = localStorage.getItem('authToken');\n    if (!token) {\n      logout();\n      return { valid: false, reason: 'no-token' };\n    }\n\n    const response = await axios.get(`${API}/verify`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n\n    if (!response.data.valid) {\n      // 如果角色不匹配，立即登出\n      logout();\n      return { valid: false, reason: 'role-mismatch' };\n    }\n\n    return { valid: true, role: response.data.role };\n  } catch (error) {\n    console.error('验证失败:', error);\n    if (error.response && error.response.status === 401) {\n      logout();\n      return { valid: false, reason: 'unauthorized' };\n    }\n    // 其他错误（如网络错误）也登出\n    logout();\n    return { valid: false, reason: 'error' };\n  }\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,WAAW;AAE9B,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,eAAe;AAEvC,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAC1BC,YAAY,CAACC,UAAU,CAAC,WAAW,CAAC;EACpCD,YAAY,CAACC,UAAU,CAAC,UAAU,CAAC;EACnCD,YAAY,CAACC,UAAU,CAAC,UAAU,CAAC;EACnCD,YAAY,CAACC,UAAU,CAAC,QAAQ,CAAC;EACjCD,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;EAChCP,MAAM,CAACQ,IAAI,CAAC,QAAQ,CAAC;AACvB,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMC,KAAK,GAAGJ,YAAY,CAACK,OAAO,CAAC,WAAW,CAAC;IAC/C,IAAI,CAACD,KAAK,EAAE;MACVL,MAAM,CAAC,CAAC;MACR,OAAO;QAAEO,KAAK,EAAE,KAAK;QAAEC,MAAM,EAAE;MAAW,CAAC;IAC7C;IAEA,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,GAAGd,GAAG,SAAS,EAAE;MAChDe,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUP,KAAK;MAChC;IACF,CAAC,CAAC;IAEF,IAAI,CAACI,QAAQ,CAACI,IAAI,CAACN,KAAK,EAAE;MACxB;MACAP,MAAM,CAAC,CAAC;MACR,OAAO;QAAEO,KAAK,EAAE,KAAK;QAAEC,MAAM,EAAE;MAAgB,CAAC;IAClD;IAEA,OAAO;MAAED,KAAK,EAAE,IAAI;MAAEO,IAAI,EAAEL,QAAQ,CAACI,IAAI,CAACC;IAAK,CAAC;EAClD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;IAC7B,IAAIA,KAAK,CAACN,QAAQ,IAAIM,KAAK,CAACN,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;MACnDjB,MAAM,CAAC,CAAC;MACR,OAAO;QAAEO,KAAK,EAAE,KAAK;QAAEC,MAAM,EAAE;MAAe,CAAC;IACjD;IACA;IACAR,MAAM,CAAC,CAAC;IACR,OAAO;MAAEO,KAAK,EAAE,KAAK;MAAEC,MAAM,EAAE;IAAQ,CAAC;EAC1C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}