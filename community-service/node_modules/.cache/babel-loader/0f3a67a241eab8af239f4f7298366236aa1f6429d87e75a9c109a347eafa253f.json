{"ast":null,"code":"import { createNamespace } from \"../utils/index.mjs\";\nconst [name, bem, t] = createNamespace(\"calendar\");\nconst formatMonthTitle = date => t(\"monthTitle\", date.getFullYear(), date.getMonth() + 1);\nfunction compareMonth(date1, date2) {\n  const year1 = date1.getFullYear();\n  const year2 = date2.getFullYear();\n  if (year1 === year2) {\n    const month1 = date1.getMonth();\n    const month2 = date2.getMonth();\n    return month1 === month2 ? 0 : month1 > month2 ? 1 : -1;\n  }\n  return year1 > year2 ? 1 : -1;\n}\nfunction compareDay(day1, day2) {\n  const compareMonthResult = compareMonth(day1, day2);\n  if (compareMonthResult === 0) {\n    const date1 = day1.getDate();\n    const date2 = day2.getDate();\n    return date1 === date2 ? 0 : date1 > date2 ? 1 : -1;\n  }\n  return compareMonthResult;\n}\nconst cloneDate = date => new Date(date);\nconst cloneDates = dates => Array.isArray(dates) ? dates.map(cloneDate) : cloneDate(dates);\nfunction getDayByOffset(date, offset) {\n  const cloned = cloneDate(date);\n  cloned.setDate(cloned.getDate() + offset);\n  return cloned;\n}\nfunction getMonthByOffset(date, offset) {\n  const cloned = cloneDate(date);\n  cloned.setMonth(cloned.getMonth() + offset);\n  if (cloned.getDate() !== date.getDate()) {\n    cloned.setDate(0);\n  }\n  return cloned;\n}\nfunction getYearByOffset(date, offset) {\n  const cloned = cloneDate(date);\n  cloned.setFullYear(cloned.getFullYear() + offset);\n  if (cloned.getDate() !== date.getDate()) {\n    cloned.setDate(0);\n  }\n  return cloned;\n}\nconst getPrevDay = date => getDayByOffset(date, -1);\nconst getNextDay = date => getDayByOffset(date, 1);\nconst getPrevMonth = date => getMonthByOffset(date, -1);\nconst getNextMonth = date => getMonthByOffset(date, 1);\nconst getPrevYear = date => getYearByOffset(date, -1);\nconst getNextYear = date => getYearByOffset(date, 1);\nconst getToday = () => {\n  const today = /* @__PURE__ */new Date();\n  today.setHours(0, 0, 0, 0);\n  return today;\n};\nfunction calcDateNum(date) {\n  const day1 = date[0].getTime();\n  const day2 = date[1].getTime();\n  return (day2 - day1) / (1e3 * 60 * 60 * 24) + 1;\n}\nexport { bem, calcDateNum, cloneDate, cloneDates, compareDay, compareMonth, formatMonthTitle, getDayByOffset, getMonthByOffset, getNextDay, getNextMonth, getNextYear, getPrevDay, getPrevMonth, getPrevYear, getToday, getYearByOffset, name, t };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}