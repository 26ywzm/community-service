{"ast":null,"code":"import { ref, defineComponent, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\nimport { createNamespace, numericProp } from \"../utils/index.mjs\";\nimport { Cell } from \"../cell/index.mjs\";\nimport { Field } from \"../field/index.mjs\";\nconst [name, bem] = createNamespace(\"address-edit-detail\");\nconst t = createNamespace(\"address-edit\")[2];\nvar stdin_default = defineComponent({\n  name,\n  props: {\n    show: Boolean,\n    rows: numericProp,\n    value: String,\n    rules: Array,\n    focused: Boolean,\n    maxlength: numericProp,\n    searchResult: Array,\n    showSearchResult: Boolean\n  },\n  emits: [\"blur\", \"focus\", \"input\", \"selectSearch\"],\n  setup(props, {\n    emit\n  }) {\n    const field = ref();\n    const showSearchResult = () => props.focused && props.searchResult && props.showSearchResult;\n    const onSelect = express => {\n      emit(\"selectSearch\", express);\n      emit(\"input\", `${express.address || \"\"} ${express.name || \"\"}`.trim());\n    };\n    const renderSearchResult = () => {\n      if (!showSearchResult()) {\n        return;\n      }\n      const {\n        searchResult\n      } = props;\n      return searchResult.map(express => _createVNode(Cell, {\n        \"clickable\": true,\n        \"key\": (express.name || \"\") + (express.address || \"\"),\n        \"icon\": \"location-o\",\n        \"title\": express.name,\n        \"label\": express.address,\n        \"class\": bem(\"search-item\"),\n        \"border\": false,\n        \"onClick\": () => onSelect(express)\n      }, null));\n    };\n    const onBlur = event => emit(\"blur\", event);\n    const onFocus = event => emit(\"focus\", event);\n    const onInput = value => emit(\"input\", value);\n    return () => {\n      if (props.show) {\n        return _createVNode(_Fragment, null, [_createVNode(Field, {\n          \"autosize\": true,\n          \"clearable\": true,\n          \"ref\": field,\n          \"class\": bem(),\n          \"rows\": props.rows,\n          \"type\": \"textarea\",\n          \"rules\": props.rules,\n          \"label\": t(\"addressDetail\"),\n          \"border\": !showSearchResult(),\n          \"maxlength\": props.maxlength,\n          \"modelValue\": props.value,\n          \"placeholder\": t(\"addressDetail\"),\n          \"onBlur\": onBlur,\n          \"onFocus\": onFocus,\n          \"onUpdate:modelValue\": onInput\n        }, null), renderSearchResult()]);\n      }\n    };\n  }\n});\nexport { stdin_default as default };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}