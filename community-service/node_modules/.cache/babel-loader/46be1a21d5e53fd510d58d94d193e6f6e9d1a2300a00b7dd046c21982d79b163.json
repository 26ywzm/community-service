{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport { verifyAuth } from \"../utils/auth\";\nimport { handleApiError } from \"../utils/errorHandler\";\nimport { ElMessage } from 'element-plus';\nconst API = process.env.VUE_APP_API_URL;\nexport default {\n  data() {\n    return {\n      dialogVisible: false,\n      showAdminPanel: false,\n      users: [],\n      admins: [],\n      orders: [],\n      verificationInterval: null,\n      loading: false,\n      error: null\n    };\n  },\n  computed: {\n    isLoggedIn() {\n      return !!localStorage.getItem(\"authToken\");\n    },\n    isAdmin() {\n      const role = localStorage.getItem(\"userRole\");\n      return role === \"admin\";\n    },\n    isSuperAdmin() {\n      const role = localStorage.getItem(\"userRole\");\n      return role === \"super_admin\";\n    }\n  },\n  created() {\n    if (this.isLoggedIn) {\n      this.startVerification();\n    }\n  },\n  beforeUnmount() {\n    if (this.verificationInterval) {\n      clearInterval(this.verificationInterval);\n    }\n  },\n  methods: {\n    startVerification() {\n      if (this.verificationInterval) {\n        clearInterval(this.verificationInterval);\n      }\n      this.verifyAndUpdate();\n      this.verificationInterval = setInterval(this.verifyAndUpdate, 300000);\n    },\n    async verifyAndUpdate() {\n      if (!this.isLoggedIn) return;\n      const result = await verifyAuth();\n      if (!result.valid) {\n        this.handleAuthError(result.reason);\n      }\n    },\n    handleAuthError(reason) {\n      if ([\"no-token\", \"invalid-token\", \"unauthorized\"].includes(reason)) {\n        localStorage.clear();\n        if (this.verificationInterval) {\n          clearInterval(this.verificationInterval);\n        }\n        this.$router.push(\"/login\");\n      }\n    },\n    async fetchUserOrders() {\n      try {\n        const response = await axios.get(`${API}/orders/user`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n          }\n        });\n        this.orders = response.data.orders || response.data || [];\n        if (this.orders.length === 0) {\n          ElMessage.info('暂无订单记录');\n        }\n      } catch (error) {\n        console.error('获取订单失败:', error);\n        ElMessage.error('获取订单列表失败，请重试');\n      }\n    },\n    async fetchUsers() {\n      try {\n        const response = await axios.get(`${API}/users`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n          }\n        });\n        this.users = response.data.users || response.data;\n      } catch (error) {\n        console.error('获取用户列表失败:', error);\n        if (error.response?.status === 403) {\n          ElMessage.warning('您只有查看权限');\n        } else {\n          ElMessage.error('获取用户列表失败，请重试');\n        }\n      }\n    },\n    async fetchAdmins() {\n      try {\n        // 使用users接口，但是过滤出管理员\n        const response = await axios.get(`${API}/users`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n          },\n          params: {\n            role: 'admin'\n          } // 添加查询参数来获取管理员\n        });\n        const allUsers = response.data.users || response.data;\n        // 过滤出管理员和超级管理员\n        this.admins = allUsers.filter(user => user.role === 'admin' || user.role === 'super_admin');\n      } catch (error) {\n        console.error('获取管理员列表失败:', error);\n        if (error.response?.status === 403) {\n          ElMessage.warning('您只有查看权限');\n        } else {\n          ElMessage.error('获取管理员列表失败，请重试');\n        }\n      }\n    },\n    async openAdminPanel() {\n      this.dialogVisible = true;\n      await this.loadAdminData();\n    },\n    async loadAdminData() {\n      this.loading = true;\n      this.error = null;\n      try {\n        const results = await Promise.allSettled([this.fetchUsers(), this.fetchAdmins()]);\n\n        // 检查是否所有请求都失败了\n        const allFailed = results.every(result => result.status === 'rejected');\n        if (allFailed) {\n          this.error = '加载数据失败，请重试';\n        }\n      } catch (error) {\n        console.error('加载数据失败:', error);\n        this.error = '加载数据失败，请重试';\n      } finally {\n        this.loading = false;\n      }\n    },\n    closeDialog() {\n      this.dialogVisible = false;\n      this.error = null;\n    },\n    handleClose(done) {\n      this.error = null;\n      done();\n    },\n    async promoteUser(userId) {\n      if (this.isSuperAdmin) {\n        try {\n          await axios.post(`${API}/promote/${userId}`, {}, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n            }\n          });\n          ElMessage.success('用户已成功升级为管理员');\n          await this.loadAdminData();\n        } catch (error) {\n          handleApiError(error);\n          ElMessage.error('升级管理员失败，请稍后重试');\n        }\n      }\n    },\n    async demoteUser(adminId) {\n      if (this.isSuperAdmin) {\n        try {\n          await axios.post(`${API}/demote/${adminId}`, {}, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n            }\n          });\n          ElMessage.success('管理员已成功降级为普通用户');\n          await this.loadAdminData();\n        } catch (error) {\n          handleApiError(error);\n          ElMessage.error('降级管理员失败，请稍后重试');\n        }\n      }\n    },\n    async deleteUser(userId) {\n      if (this.isSuperAdmin) {\n        try {\n          await axios.delete(`${API}/users/${userId}`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`\n            }\n          });\n          await this.loadAdminData();\n        } catch (error) {\n          handleApiError(error);\n        }\n      }\n    },\n    viewOrderDetails(orderId) {\n      this.$router.push({\n        name: \"OrderDetail\",\n        params: {\n          orderId\n        }\n      });\n    },\n    formatDate(dateString) {\n      if (!dateString) return '元';\n      try {\n        const date = new Date(dateString);\n        if (isNaN(date.getTime())) return '--';\n        const options = {\n          year: \"numeric\",\n          month: \"2-digit\",\n          day: \"2-digit\",\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n          hour12: false\n        };\n        return date.toLocaleString(\"zh-CN\", options).replace(/\\//g, '-');\n      } catch (error) {\n        console.error('日期格式化错误:', error);\n        return '元';\n      }\n    },\n    getOrderStatusText(status) {\n      const statusMap = {\n        0: '待处理',\n        1: '处理中',\n        2: '已完成',\n        3: '已取消'\n      };\n      return statusMap[status] || '未知状态';\n    }\n  },\n  mounted() {\n    if (this.isSuperAdmin) {\n      this.fetchUsers();\n      this.fetchAdmins();\n    }\n  }\n};","map":{"version":3,"names":["axios","verifyAuth","handleApiError","ElMessage","API","process","env","VUE_APP_API_URL","data","dialogVisible","showAdminPanel","users","admins","orders","verificationInterval","loading","error","computed","isLoggedIn","localStorage","getItem","isAdmin","role","isSuperAdmin","created","startVerification","beforeUnmount","clearInterval","methods","verifyAndUpdate","setInterval","result","valid","handleAuthError","reason","includes","clear","$router","push","fetchUserOrders","response","get","headers","Authorization","length","info","console","fetchUsers","status","warning","fetchAdmins","params","allUsers","filter","user","openAdminPanel","loadAdminData","results","Promise","allSettled","allFailed","every","closeDialog","handleClose","done","promoteUser","userId","post","success","demoteUser","adminId","deleteUser","delete","viewOrderDetails","orderId","name","formatDate","dateString","date","Date","isNaN","getTime","options","year","month","day","hour","minute","hour12","toLocaleString","replace","getOrderStatusText","statusMap","mounted"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\DiscoverPage.vue"],"sourcesContent":["<template>\n  <div class=\"discover\">\n    <h2 class=\"title\">发现</h2>\n\n    <!-- 检查用户是否已登录 -->\n    <div v-if=\"isLoggedIn\">\n      <!-- 普通用户的功能 -->\n      <div v-if=\"!isAdmin && !isSuperAdmin\" class=\"button-group\">\n        <router-link to=\"/CanteenOrder\">\n          <button class=\"action-button\">社区食堂</button>\n        </router-link>\n        <button @click=\"fetchUserOrders\" class=\"action-button\">查看我的订单</button>\n      </div>\n\n      <!-- 用户订单列表 -->\n      <div v-if=\"orders.length > 0\" class=\"orders-section\">\n        <h3>我的订单</h3>\n        <ul class=\"order-list\">\n          <li v-for=\"order in orders\" :key=\"order.id\" class=\"order-item\">\n            <div class=\"order-info\">\n              <div class=\"order-header\">\n                <span class=\"order-id\">订单号: {{ order.id }}</span>\n                <span class=\"order-status\" :class=\"order.status\">\n                  {{ getOrderStatusText(order.status) }}\n                </span>\n              </div>\n              <div class=\"order-details\">\n                <span class=\"order-price\">总价: ¥{{ order.total_price }}</span>\n                <span class=\"order-date\">{{ formatDate(order.created_at) }}</span>\n              </div>\n            </div>\n            <div class=\"order-actions\">\n              <button @click=\"viewOrderDetails(order.id)\" class=\"view-button\">查看详情</button>\n            </div>\n          </li>\n        </ul>\n      </div>\n\n      <!-- 管理员和超级管理员的功能 -->\n      <div v-if=\"isAdmin || isSuperAdmin\">\n        <div class=\"button-group\">\n          <router-link to=\"/articles/new\">\n            <button class=\"admin-button\">文章编写</button>\n          </router-link>\n          <button @click=\"openAdminPanel\" class=\"admin-button\" v-if=\"isAdmin || isSuperAdmin\">管理模块</button>\n        </div>\n        \n        <el-dialog\n          v-model=\"dialogVisible\"\n          title=\"管理模块\"\n          width=\"70%\"\n          :before-close=\"handleClose\"\n          :close-on-click-modal=\"false\"\n        >\n          <div class=\"admin-panel\">\n            <h3>管理员和用户列表</h3>\n            <div v-loading=\"loading\">\n              <div v-if=\"error\" class=\"error-message\">{{ error }}</div>\n              \n              <div v-else>\n                <h4>管理员列表</h4>\n                <div class=\"role-info\" v-if=\"isAdmin && !isSuperAdmin\">\n                  <el-alert\n                    title=\"提示：您可以查看用户列表，但只有超级管理员可以修改权限\"\n                    type=\"info\"\n                    :closable=\"false\"\n                    show-icon\n                  />\n                </div>\n                <ul class=\"list\">\n                  <li v-for=\"admin in admins\" :key=\"admin.id\" class=\"user-item\">\n                    <div class=\"user-info\">\n                      <span class=\"username\">{{ admin.username }}</span>\n                      <span class=\"role-tag\" :class=\"{ 'super': admin.role === 'super_admin' }\">\n                        {{ admin.role === 'super_admin' ? '超级管理员' : '管理员' }}\n                      </span>\n                    </div>\n                    <div class=\"action-buttons\" v-if=\"isSuperAdmin\">\n                      <button @click=\"demoteUser(admin.id)\" class=\"action-button\" \n                              v-if=\"admin.role !== 'super_admin'\">降为用户</button>\n                      <button @click=\"deleteUser(admin.id)\" class=\"close-button\"\n                              v-if=\"admin.role !== 'super_admin'\">删除</button>\n                    </div>\n                  </li>\n                </ul>\n\n                <h4>用户列表</h4>\n                <ul class=\"list\">\n                  <li v-for=\"user in users\" :key=\"user.id\" class=\"user-item\">\n                    <div class=\"user-info\">\n                      <span class=\"username\">{{ user.username }}</span>\n                      <span class=\"role-tag\">用户</span>\n                    </div>\n                    <div class=\"action-buttons\" v-if=\"isSuperAdmin\">\n                      <button @click=\"promoteUser(user.id)\" class=\"action-button\">升为管理员</button>\n                      <button @click=\"deleteUser(user.id)\" class=\"close-button\">删除</button>\n                    </div>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          <template #footer>\n            <span class=\"dialog-footer\">\n              <el-button @click=\"closeDialog\">关闭</el-button>\n            </span>\n          </template>\n        </el-dialog>\n\n        <!-- 其他管理员功能 -->\n        <div class=\"button-group\">\n          <router-link to=\"/canteenadmin\">\n            <button class=\"admin-button\">食堂管理</button>\n          </router-link>\n          <router-link to=\"/canteen/orders\">\n            <button class=\"admin-button\">订单管理</button>\n          </router-link>\n        </div>\n      </div>\n    </div>\n\n    <!-- 未登录用户 -->\n    <div v-else>\n      <p>请登录以查看内容。</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { verifyAuth } from \"../utils/auth\";\nimport { handleApiError } from \"../utils/errorHandler\";\nimport { ElMessage } from 'element-plus';\nconst API = process.env.VUE_APP_API_URL;\n\nexport default {\n  data() {\n    return {\n      dialogVisible: false,\n      showAdminPanel: false,\n      users: [],\n      admins: [],\n      orders: [],\n      verificationInterval: null,\n      loading: false,\n      error: null\n    };\n  },\n  computed: {\n    isLoggedIn() {\n      return !!localStorage.getItem(\"authToken\");\n    },\n    isAdmin() {\n      const role = localStorage.getItem(\"userRole\");\n      return role === \"admin\";\n    },\n    isSuperAdmin() {\n      const role = localStorage.getItem(\"userRole\");\n      return role === \"super_admin\";\n    },\n  },\n  created() {\n    if (this.isLoggedIn) {\n      this.startVerification();\n    }\n  },\n  beforeUnmount() {\n    if (this.verificationInterval) {\n      clearInterval(this.verificationInterval);\n    }\n  },\n  methods: {\n    startVerification() {\n      if (this.verificationInterval) {\n        clearInterval(this.verificationInterval);\n      }\n      this.verifyAndUpdate();\n      this.verificationInterval = setInterval(this.verifyAndUpdate, 300000);\n    },\n    async verifyAndUpdate() {\n      if (!this.isLoggedIn) return;\n\n      const result = await verifyAuth();\n      if (!result.valid) {\n        this.handleAuthError(result.reason);\n      }\n    },\n    handleAuthError(reason) {\n      if ([\"no-token\", \"invalid-token\", \"unauthorized\"].includes(reason)) {\n        localStorage.clear();\n        if (this.verificationInterval) {\n          clearInterval(this.verificationInterval);\n        }\n        this.$router.push(\"/login\");\n      }\n    },\n    async fetchUserOrders() {\n      try {\n        const response = await axios.get(`${API}/orders/user`, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"authToken\")}` },\n        });\n        this.orders = response.data.orders || response.data || [];\n        if (this.orders.length === 0) {\n          ElMessage.info('暂无订单记录');\n        }\n      } catch (error) {\n        console.error('获取订单失败:', error);\n        ElMessage.error('获取订单列表失败，请重试');\n      }\n    },\n    async fetchUsers() {\n      try {\n        const response = await axios.get(`${API}/users`, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"authToken\")}` },\n        });\n        this.users = response.data.users || response.data;\n      } catch (error) {\n        console.error('获取用户列表失败:', error);\n        if (error.response?.status === 403) {\n          ElMessage.warning('您只有查看权限');\n        } else {\n          ElMessage.error('获取用户列表失败，请重试');\n        }\n      }\n    },\n    async fetchAdmins() {\n      try {\n        // 使用users接口，但是过滤出管理员\n        const response = await axios.get(`${API}/users`, {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"authToken\")}` },\n          params: { role: 'admin' }  // 添加查询参数来获取管理员\n        });\n        const allUsers = response.data.users || response.data;\n        // 过滤出管理员和超级管理员\n        this.admins = allUsers.filter(user => \n          user.role === 'admin' || user.role === 'super_admin'\n        );\n      } catch (error) {\n        console.error('获取管理员列表失败:', error);\n        if (error.response?.status === 403) {\n          ElMessage.warning('您只有查看权限');\n        } else {\n          ElMessage.error('获取管理员列表失败，请重试');\n        }\n      }\n    },\n    async openAdminPanel() {\n      this.dialogVisible = true;\n      await this.loadAdminData();\n    },\n    \n    async loadAdminData() {\n      this.loading = true;\n      this.error = null;\n      try {\n        const results = await Promise.allSettled([\n          this.fetchUsers(),\n          this.fetchAdmins()\n        ]);\n        \n        // 检查是否所有请求都失败了\n        const allFailed = results.every(result => result.status === 'rejected');\n        if (allFailed) {\n          this.error = '加载数据失败，请重试';\n        }\n      } catch (error) {\n        console.error('加载数据失败:', error);\n        this.error = '加载数据失败，请重试';\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    closeDialog() {\n      this.dialogVisible = false;\n      this.error = null;\n    },\n\n    handleClose(done) {\n      this.error = null;\n      done();\n    },\n    async promoteUser(userId) {\n      if (this.isSuperAdmin) {\n        try {\n          await axios.post(`${API}/promote/${userId}`, {}, { headers: { Authorization: `Bearer ${localStorage.getItem(\"authToken\")}` } });\n          ElMessage.success('用户已成功升级为管理员');\n          await this.loadAdminData();\n        } catch (error) {\n          handleApiError(error);\n          ElMessage.error('升级管理员失败，请稍后重试');\n        }\n      }\n    },\n    async demoteUser(adminId) {\n      if (this.isSuperAdmin) {\n        try {\n          await axios.post(`${API}/demote/${adminId}`, {}, { headers: { Authorization: `Bearer ${localStorage.getItem(\"authToken\")}` } });\n          ElMessage.success('管理员已成功降级为普通用户');\n          await this.loadAdminData();\n        } catch (error) {\n          handleApiError(error);\n          ElMessage.error('降级管理员失败，请稍后重试');\n        }\n      }\n    },\n    async deleteUser(userId) {\n      if (this.isSuperAdmin) {\n        try {\n          await axios.delete(`${API}/users/${userId}`, { headers: { Authorization: `Bearer ${localStorage.getItem(\"authToken\")}` } });\n          await this.loadAdminData();\n        } catch (error) {\n          handleApiError(error);\n        }\n      }\n    },\n    viewOrderDetails(orderId) {\n      this.$router.push({ name: \"OrderDetail\", params: { orderId } });\n    },\n    formatDate(dateString) {\n      if (!dateString) return '元';\n      try {\n        const date = new Date(dateString);\n        if (isNaN(date.getTime())) return '--';\n        const options = { \n          year: \"numeric\", \n          month: \"2-digit\", \n          day: \"2-digit\", \n          hour: \"2-digit\", \n          minute: \"2-digit\",\n          hour12: false \n        };\n        return date.toLocaleString(\"zh-CN\", options).replace(/\\//g, '-');\n      } catch (error) {\n        console.error('日期格式化错误:', error);\n        return '元';\n      }\n    },\n    getOrderStatusText(status) {\n      const statusMap = {\n        0: '待处理',\n        1: '处理中',\n        2: '已完成',\n        3: '已取消'\n      };\n      return statusMap[status] || '未知状态';\n    },\n  },\n  mounted() {\n    if (this.isSuperAdmin) {\n      this.fetchUsers();\n      this.fetchAdmins();\n    }\n  },\n};\n</script>\n\n<style scoped>\n.discover {\n  padding: 20px;\n  background-color: #f9f9f9;\n  border-radius: 8px;\n}\n\n.role-info {\n  margin: 10px 0;\n  padding: 10px;\n}\n\n.error-message {\n  color: #f56c6c;\n  margin: 10px 0;\n  padding: 10px;\n  background-color: #fef0f0;\n  border-radius: 4px;\n}\n\n.user-item {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px;\n  margin: 8px 0;\n  background-color: white;\n  border-radius: 6px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n}\n\n.user-info {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.username {\n  font-weight: 500;\n  color: #303133;\n}\n\n.role-tag {\n  padding: 2px 8px;\n  border-radius: 12px;\n  font-size: 12px;\n  background-color: #e1f3d8;\n  color: #67c23a;\n}\n\n.role-tag.super {\n  background-color: #ffd04b;\n  color: #b88230;\n}\n\n.action-buttons {\n  display: flex;\n  gap: 8px;\n}\n\n.title {\n  color: #303133;\n  margin-bottom: 20px;\n}\n\n.button-group {\n  margin: 15px 0;\n  display: flex;\n  gap: 10px;\n}\n\n.admin-button {\n  padding: 10px 20px;\n  background-color: #409eff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.admin-button:hover {\n  background-color: #66b1ff;\n}\n\n.action-button {\n  padding: 5px 10px;\n  background-color: #67c23a;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: all 0.3s;\n}\n\n.action-button:hover {\n  background-color: #85ce61;\n}\n\n.close-button {\n  padding: 5px 10px;\n  background-color: #f56c6c;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: all 0.3s;\n}\n\n.close-button:hover {\n  background-color: #f78989;\n}\n\n.list {\n  list-style: none;\n  padding: 0;\n}\n\n.admin-panel {\n  padding: 20px;\n}\n\n.orders-section {\n  margin-top: 20px;\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.05);\n}\n\n.order-list {\n  list-style: none;\n  padding: 0;\n}\n\n.order-item {\n  border: 1px solid #ebeef5;\n  border-radius: 4px;\n  padding: 15px;\n  margin-bottom: 10px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  transition: all 0.3s;\n}\n\n.order-item:hover {\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\n}\n\n.order-info {\n  flex: 1;\n}\n\n.order-header {\n  display: flex;\n  align-items: center;\n  margin-bottom: 8px;\n}\n\n.order-id {\n  font-weight: 500;\n  color: #303133;\n  margin-right: 15px;\n}\n\n.order-status {\n  padding: 2px 8px;\n  border-radius: 12px;\n  font-size: 12px;\n}\n\n.order-status.pending {\n  background-color: #e6a23c1a;\n  color: #e6a23c;\n}\n\n.order-status.completed {\n  background-color: #67c23a1a;\n  color: #67c23a;\n}\n\n.order-status.cancelled {\n  background-color: #f56c6c1a;\n  color: #f56c6c;\n}\n\n.order-details {\n  display: flex;\n  gap: 15px;\n  color: #606266;\n  font-size: 14px;\n}\n\n.order-price {\n  color: #f56c6c;\n  font-weight: 500;\n}\n\n.order-date {\n  color: #909399;\n}\n\n.order-actions {\n  margin-left: 15px;\n}\n\n.view-button {\n  padding: 5px 15px;\n  background-color: #409eff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: all 0.3s;\n}\n\n.view-button:hover {\n  background-color: #66b1ff;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}