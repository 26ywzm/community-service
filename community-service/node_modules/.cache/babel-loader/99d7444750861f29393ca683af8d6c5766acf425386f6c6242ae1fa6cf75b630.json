{"ast":null,"code":"import { defineComponent, mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\nimport { pick, extend, numericProp, unknownProp, makeStringProp, createNamespace } from \"../utils/index.mjs\";\nimport { Popup } from \"../popup/index.mjs\";\nimport { popupSharedProps } from \"../popup/shared.mjs\";\nconst [name, bem] = createNamespace(\"notify\");\nconst popupInheritProps = [\"lockScroll\", \"position\", \"show\", \"teleport\", \"zIndex\"];\nconst notifyProps = extend({}, popupSharedProps, {\n  type: makeStringProp(\"danger\"),\n  color: String,\n  message: numericProp,\n  position: makeStringProp(\"top\"),\n  className: unknownProp,\n  background: String,\n  lockScroll: Boolean\n});\nvar stdin_default = defineComponent({\n  name,\n  props: notifyProps,\n  emits: [\"update:show\"],\n  setup(props, {\n    emit,\n    slots\n  }) {\n    const updateShow = show => emit(\"update:show\", show);\n    return () => _createVNode(Popup, _mergeProps({\n      \"class\": [bem([props.type]), props.className],\n      \"style\": {\n        color: props.color,\n        background: props.background\n      },\n      \"overlay\": false,\n      \"duration\": 0.2,\n      \"onUpdate:show\": updateShow\n    }, pick(props, popupInheritProps)), {\n      default: () => [slots.default ? slots.default() : props.message]\n    });\n  }\n});\nexport { stdin_default as default, notifyProps };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}