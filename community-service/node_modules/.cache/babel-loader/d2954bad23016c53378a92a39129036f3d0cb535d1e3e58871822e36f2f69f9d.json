{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from 'axios';\nconst BASE_URL = process.env.VUE_APP_BASE_URL;\nconst API = `${BASE_URL}/api/auth`;\nexport default {\n  data() {\n    return {\n      news: {},\n      imageCache: new Map()\n    };\n  },\n  mounted() {\n    this.fetchNews();\n  },\n  methods: {\n    async loadImage(item) {\n      if (!item.image_url) return;\n      item.blobUrl = await this.getImageUrl(item.image_url);\n    },\n    async getImageUrl(path) {\n      if (!path) return '';\n      if (path.startsWith('http')) {\n        return path;\n      }\n      if (this.imageCache.has(path)) {\n        return this.imageCache.get(path);\n      }\n      try {\n        const uploadPath = path.startsWith('/uploads/') ? path : `/uploads/${path}`;\n        const baseUrl = API.replace('/api/auth', '');\n        const response = await fetch(`${baseUrl}${uploadPath}`);\n        const blob = await response.blob();\n        const blobUrl = URL.createObjectURL(blob);\n        this.imageCache.set(path, blobUrl);\n        return blobUrl;\n      } catch (error) {\n        console.error('加载图片失败:', error);\n        return '';\n      }\n    },\n    async fetchNews() {\n      try {\n        const response = await axios.get(`${API}/articles/${this.$route.params.id}`);\n        this.news = response.data;\n        await this.loadImage(this.news);\n      } catch (error) {\n        console.error('获取新闻详情失败:', error);\n      }\n    },\n    goBack() {\n      this.$router.push('/');\n    },\n    formatDate(dateString) {\n      if (!dateString) return '';\n      const date = new Date(dateString);\n      return date.toLocaleDateString('zh-CN', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}