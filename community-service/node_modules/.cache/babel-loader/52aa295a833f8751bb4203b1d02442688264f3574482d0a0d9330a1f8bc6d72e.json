{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"order-detail\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"order-items\"\n};\nconst _hoisted_4 = {\n  class: \"item-info\"\n};\nconst _hoisted_5 = {\n  class: \"item-name\"\n};\nconst _hoisted_6 = {\n  class: \"item-details\"\n};\nconst _hoisted_7 = {\n  class: \"item-quantity\"\n};\nconst _hoisted_8 = {\n  class: \"item-price\"\n};\nconst _hoisted_9 = {\n  class: \"item-total\"\n};\nconst _hoisted_10 = {\n  key: 1\n};\nconst _hoisted_11 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"订单详细信息\", -1 /* HOISTED */)), $data.order ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"h3\", null, \"订单 ID: \" + _toDisplayString($data.order.id), 1 /* TEXT */), _createElementVNode(\"p\", null, \"用户邮箱: \" + _toDisplayString($data.order.email), 1 /* TEXT */), _createElementVNode(\"p\", null, \"用户名: \" + _toDisplayString($data.order.username), 1 /* TEXT */), _createElementVNode(\"p\", null, \"订单状态: \" + _toDisplayString($data.statusText[$data.order.status] || '未知状态'), 1 /* TEXT */), _createElementVNode(\"p\", null, \"总价格: \" + _toDisplayString($data.order.total_price) + \" 元\", 1 /* TEXT */), _cache[1] || (_cache[1] = _createElementVNode(\"h4\", null, \"订单内容:\", -1 /* HOISTED */)), $data.order.items && $data.order.items.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.order.items, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item.menu_item_id,\n      class: \"order-item\"\n    }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"span\", _hoisted_5, _toDisplayString(item.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"span\", _hoisted_7, \"数量: \" + _toDisplayString(item.quantity), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_8, \"单价: ¥\" + _toDisplayString(item.price), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_9, \"小计: ¥\" + _toDisplayString(item.quantity * item.price), 1 /* TEXT */)])])]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_10, \"暂无订单详情\"))])) : $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, _cache[2] || (_cache[2] = [_createElementVNode(\"p\", null, \"正在加载订单信息...\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.goBack && $options.goBack(...args))\n  }, \"返回\")]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$data","order","_hoisted_2","_toDisplayString","id","email","username","statusText","status","total_price","items","length","_hoisted_3","_Fragment","_renderList","item","menu_item_id","_hoisted_4","_hoisted_5","name","_hoisted_6","_hoisted_7","quantity","_hoisted_8","price","_hoisted_9","_hoisted_10","loading","_hoisted_11","_cache","_createCommentVNode","onClick","args","$options","goBack"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\OrderDetail.vue"],"sourcesContent":["<template>\n    <div class=\"order-detail\">\n        <h2>订单详细信息</h2>\n\n        <div v-if=\"order\">\n            <h3>订单 ID: {{ order.id }}</h3>\n            <p>用户邮箱: {{ order.email }}</p>\n            <p>用户名: {{ order.username }}</p>\n            <p>订单状态: {{ statusText[order.status] || '未知状态' }}</p>\n            <p>总价格: {{ order.total_price }} 元</p>\n            <h4>订单内容:</h4>\n            <div v-if=\"order.items && order.items.length\" class=\"order-items\">\n                <div v-for=\"item in order.items\" :key=\"item.menu_item_id\" class=\"order-item\">\n                    <div class=\"item-info\">\n                        <span class=\"item-name\">{{ item.name }}</span>\n                        <div class=\"item-details\">\n                            <span class=\"item-quantity\">数量: {{ item.quantity }}</span>\n                            <span class=\"item-price\">单价: ¥{{ item.price }}</span>\n                            <span class=\"item-total\">小计: ¥{{ item.quantity * item.price }}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <p v-else>暂无订单详情</p>\n        </div>\n\n        <div v-else-if=\"loading\">\n            <p>正在加载订单信息...</p>\n        </div>\n\n        <button @click=\"goBack\">返回</button>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { handleApiError } from '../utils/errorHandler';\nconst API = process.env.VUE_APP_API_URL;\n\nexport default {\n    name: 'OrderDetail',\n    data() {\n        return {\n            order: null,\n            loading: true,\n            statusText: {\n                0: '待处理',\n                1: '处理中',\n                2: '已完成',\n                3: '已取消'\n            }\n        };\n    },\n    async created() {\n        await this.fetchOrderDetails();\n    },\n    methods: {\n        async fetchOrderDetails() {\n            const orderId = this.$route.params.orderId;\n            try {\n                const response = await axios.get(`${API}/canteen/order/${orderId}`, {\n                    headers: {\n                        Authorization: `Bearer ${localStorage.getItem('authToken')}`\n                    }\n                });\n                const orderData = response.data;\n                \n                // 打印完整的订单数据\n                // console.log('完整的订单数据:', JSON.stringify(orderData, null, 2));\n                // console.log('订单对象的所有键:', Object.keys(orderData));\n                \n                if (orderData && orderData.user) {\n                    this.order = {\n                        ...orderData,\n                        email: orderData.user.email,\n                        username: orderData.user.username\n                    };\n                } else {\n                    this.order = orderData;\n                }\n                this.loading = false;\n            } catch (error) {\n                console.error('获取订单详情失败:', error);\n                handleApiError(error);\n            }\n        },\n        formatDate(dateString) {\n            if (!dateString) return '暂无日期';\n            try {\n                const date = new Date(dateString);\n                if (isNaN(date.getTime())) return '无效日期';\n                \n                const options = { \n                    year: 'numeric', \n                    month: '2-digit', \n                    day: '2-digit', \n                    hour: '2-digit', \n                    minute: '2-digit',\n                    hour12: false \n                };\n                return date.toLocaleString('zh-CN', options).replace(/\\//g, '-');\n            } catch (error) {\n                console.error('日期格式化错误:', error);\n                return '日期格式错误';\n            }\n        },\n        goBack() {\n            this.$router.push('/discover'); // 返回到点餐页面\n        }\n    }\n};\n</script>\n\n<style scoped>\n.order-detail {\n    padding: 20px;\n}\n\nbutton {\n    background-color: #4CAF50;\n    color: white;\n    border: none;\n    padding: 10px;\n    cursor: pointer;\n    border-radius: 5px;\n}\n\nbutton:hover {\n    background-color: #45a049;\n}\n</style>\n"],"mappings":";;EACSA,KAAK,EAAC;AAAc;;EAD7BC,GAAA;AAAA;;EAAAA,GAAA;EAW0DD,KAAK,EAAC;;;EAEvCA,KAAK,EAAC;AAAW;;EACZA,KAAK,EAAC;AAAW;;EAClBA,KAAK,EAAC;AAAc;;EACfA,KAAK,EAAC;AAAe;;EACrBA,KAAK,EAAC;AAAY;;EAClBA,KAAK,EAAC;AAAY;;EAlBpDC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;uBACIC,mBAAA,CA8BM,OA9BNC,UA8BM,G,0BA7BFC,mBAAA,CAAe,YAAX,QAAM,sBAECC,KAAA,CAAAC,KAAK,I,cAAhBJ,mBAAA,CAoBM,OAxBdK,UAAA,GAKYH,mBAAA,CAA8B,YAA1B,SAAO,GAAAI,gBAAA,CAAGH,KAAA,CAAAC,KAAK,CAACG,EAAE,kBACtBL,mBAAA,CAA8B,WAA3B,QAAM,GAAAI,gBAAA,CAAGH,KAAA,CAAAC,KAAK,CAACI,KAAK,kBACvBN,mBAAA,CAAgC,WAA7B,OAAK,GAAAI,gBAAA,CAAGH,KAAA,CAAAC,KAAK,CAACK,QAAQ,kBACzBP,mBAAA,CAAqD,WAAlD,QAAM,GAAAI,gBAAA,CAAGH,KAAA,CAAAO,UAAU,CAACP,KAAA,CAAAC,KAAK,CAACO,MAAM,6BACnCT,mBAAA,CAAqC,WAAlC,OAAK,GAAAI,gBAAA,CAAGH,KAAA,CAAAC,KAAK,CAACQ,WAAW,IAAG,IAAE,iB,0BACjCV,mBAAA,CAAc,YAAV,OAAK,sBACEC,KAAA,CAAAC,KAAK,CAACS,KAAK,IAAIV,KAAA,CAAAC,KAAK,CAACS,KAAK,CAACC,MAAM,I,cAA5Cd,mBAAA,CAWM,OAXNe,UAWM,I,kBAVFf,mBAAA,CASMgB,SAAA,QArBtBC,WAAA,CAYoCd,KAAA,CAAAC,KAAK,CAACS,KAAK,EAAnBK,IAAI;yBAAhBlB,mBAAA,CASM;MAT4BD,GAAG,EAAEmB,IAAI,CAACC,YAAY;MAAErB,KAAK,EAAC;QAC5DI,mBAAA,CAOM,OAPNkB,UAOM,GANFlB,mBAAA,CAA8C,QAA9CmB,UAA8C,EAAAf,gBAAA,CAAnBY,IAAI,CAACI,IAAI,kBACpCpB,mBAAA,CAIM,OAJNqB,UAIM,GAHFrB,mBAAA,CAA0D,QAA1DsB,UAA0D,EAA9B,MAAI,GAAAlB,gBAAA,CAAGY,IAAI,CAACO,QAAQ,kBAChDvB,mBAAA,CAAqD,QAArDwB,UAAqD,EAA5B,OAAK,GAAApB,gBAAA,CAAGY,IAAI,CAACS,KAAK,kBAC3CzB,mBAAA,CAAqE,QAArE0B,UAAqE,EAA5C,OAAK,GAAAtB,gBAAA,CAAGY,IAAI,CAACO,QAAQ,GAAGP,IAAI,CAACS,KAAK,iB;qDAK3E3B,mBAAA,CAAoB,KAvBhC6B,WAAA,EAuBsB,QAAM,G,KAGJ1B,KAAA,CAAA2B,OAAO,I,cAAvB9B,mBAAA,CAEM,OA5Bd+B,WAAA,EAAAC,MAAA,QAAAA,MAAA,OA2BY9B,mBAAA,CAAkB,WAAf,aAAW,oB,MA3B1B+B,mBAAA,gBA8BQ/B,mBAAA,CAAmC;IAA1BgC,OAAK,EAAAF,MAAA,QAAAA,MAAA,UAAAG,IAAA,KAAEC,QAAA,CAAAC,MAAA,IAAAD,QAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;KAAE,IAAE,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}