{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { handleApiError } from '../utils/errorHandler';\nconst API = process.env.VUE_APP_API_URL;\nexport default {\n  name: 'UserProfile',\n  data() {\n    return {\n      isLoggedIn: !!localStorage.getItem('authToken'),\n      userInfo: {\n        username: '',\n        email: '',\n        role: '',\n        balance: 0\n      },\n      editMode: false,\n      currentPassword: '',\n      newPassword: '',\n      file: null,\n      loading: false,\n      loadError: '',\n      updateSuccess: ''\n    };\n  },\n  async created() {\n    // 从 localStorage 获取基本信息\n    const token = localStorage.getItem('authToken');\n    const role = localStorage.getItem('userRole');\n    const username = localStorage.getItem('username');\n    const email = localStorage.getItem('email');\n    if (!token) {\n      this.isLoggedIn = false;\n    } else {\n      // 立即设置基本信息\n      this.userInfo = {\n        username: username || '',\n        email: email || '',\n        role: role || ''\n      };\n\n      // 异步加载完整用户信息\n      try {\n        await this.fetchUserProfile();\n      } catch (error) {\n        console.error('Failed to fetch user profile:', error);\n        if (error.response && error.response.status === 401) {\n          this.handleUnauthorized();\n        }\n      }\n    }\n  },\n  methods: {\n    formatRole(role) {\n      const roleMap = {\n        'super_admin': '超级管理员',\n        'admin': '管理员',\n        'user': '普通用户'\n      };\n      return roleMap[role] || role;\n    },\n    async retryLoad() {\n      this.loadError = '';\n      await this.fetchUserProfile();\n    },\n    async fetchUserProfile() {\n      this.loading = true;\n      this.loadError = '';\n      try {\n        const token = localStorage.getItem('authToken');\n        if (!token) {\n          console.warn('No auth token found, using local storage data');\n          this.useLocalStorageData();\n          return;\n        }\n        const requestConfig = {\n          method: 'get',\n          url: `${API}/me`,\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        };\n        const response = await axios(requestConfig);\n        // console.log('Profile response:', {\n        //   status: response.status,\n        //   data: response.data\n        // });\n\n        if (response.data && response.data.user) {\n          this.userInfo = response.data.user;\n        } else if (response.data) {\n          this.userInfo = response.data;\n        } else {\n          throw new Error('Invalid response format');\n        }\n      } catch (error) {\n        console.error('Error fetching user profile:', error);\n        if (error.response) {\n          if (error.response.status === 401) {\n            this.handleUnauthorized();\n            return;\n          }\n          this.loadError = `加载失败: ${error.response.data.message || '服务器错误'}`;\n        } else {\n          this.loadError = '网络错误，请检查网络连接';\n        }\n        this.useLocalStorageData();\n      } finally {\n        this.loading = false;\n      }\n    },\n    useLocalStorageData() {\n      this.userInfo = {\n        username: localStorage.getItem('username') || '',\n        email: localStorage.getItem('email') || '',\n        role: localStorage.getItem('userRole') || ''\n      };\n    },\n    handleUnauthorized() {\n      // 清除所有认证信息\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('userRole');\n      localStorage.removeItem('username');\n      localStorage.removeItem('userId');\n      localStorage.removeItem('email');\n      this.isLoggedIn = false;\n    },\n    async updateProfile() {\n      this.loading = true;\n      this.updateSuccess = '';\n      try {\n        const formData = new FormData();\n        formData.append('username', this.userInfo.username);\n        formData.append('email', this.userInfo.email);\n        if (this.currentPassword) {\n          formData.append('currentPassword', this.currentPassword);\n          if (this.newPassword) {\n            formData.append('newPassword', this.newPassword);\n          }\n        }\n        if (this.file) {\n          formData.append('avatar', this.file);\n        }\n        await axios.put(`${API}/me`, formData, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        this.updateSuccess = '个人信息更新成功！';\n        this.editMode = false;\n        this.currentPassword = '';\n        this.newPassword = '';\n        this.file = null;\n        await this.fetchUserProfile();\n      } catch (error) {\n        handleApiError(error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    handleFileUpload(event) {\n      this.file = event.target.files[0];\n    },\n    goToLogin() {\n      this.$router.push('/login');\n    },\n    goToRegister() {\n      this.$router.push('/register');\n    },\n    async logout() {\n      // 清除所有本地存储\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('userRole');\n      localStorage.removeItem('username');\n      localStorage.removeItem('userId');\n      localStorage.removeItem('email');\n\n      // 可选：完全清除所有本地存储\n      // localStorage.clear();\n\n      // 重定向到登录页\n      await this.$router.push('/login');\n\n      // 提示用户\n      alert('已成功退出登录');\n    },\n    cancelEdit() {\n      this.editMode = false;\n      this.currentPassword = '';\n      this.newPassword = '';\n      this.file = null;\n      this.fetchUserProfile();\n    }\n  }\n};","map":{"version":3,"names":["axios","handleApiError","API","process","env","VUE_APP_API_URL","name","data","isLoggedIn","localStorage","getItem","userInfo","username","email","role","balance","editMode","currentPassword","newPassword","file","loading","loadError","updateSuccess","created","token","fetchUserProfile","error","console","response","status","handleUnauthorized","methods","formatRole","roleMap","retryLoad","warn","useLocalStorageData","requestConfig","method","url","headers","user","Error","message","removeItem","updateProfile","formData","FormData","append","put","handleFileUpload","event","target","files","goToLogin","$router","push","goToRegister","logout","alert","cancelEdit"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\Profile.vue"],"sourcesContent":["<template>\n  <div class=\"profile-container\">\n    <h2>我的账户</h2>\n\n    <div v-if=\"!isLoggedIn\" class=\"auth-section\">\n      <p>请先登录或注册以查看您的个人信息。</p>\n      <button class=\"auth-button\" @click=\"goToLogin\">登录</button>\n      <button class=\"auth-button register-button\" @click=\"goToRegister\">注册</button>\n    </div>\n\n    <div v-else-if=\"loading\" class=\"loading-section\">\n      <p>加载中...</p>\n    </div>\n\n    <div v-else class=\"profile-section\">\n      <div v-if=\"loadError\" class=\"error-message\">\n        {{ loadError }}\n        <button @click=\"retryLoad\" class=\"retry-button\">重试</button>\n      </div>\n\n      <div v-if=\"updateSuccess\" class=\"success-message\">\n        {{ updateSuccess }}\n      </div>\n\n      <h3>欢迎, {{ userInfo.username }}</h3>\n      <p>邮箱: {{ userInfo.email }}</p>\n      <p>角色: {{ formatRole(userInfo.role) }}</p>\n\n      <!-- 编辑按钮 -->\n      <button class=\"edit-button\" @click=\"editMode = true\" v-if=\"!editMode\">编辑信息</button>\n\n      <!-- 编辑表单 -->\n      <div v-if=\"editMode\" class=\"edit-form\">\n        <div class=\"form-group\">\n          <label>用户名：</label>\n          <input type=\"text\" v-model=\"userInfo.username\" />\n        </div>\n        <div class=\"form-group\">\n          <label>邮箱：</label>\n          <input type=\"email\" v-model=\"userInfo.email\" />\n        </div>\n        <div class=\"form-group\">\n          <label>当前密码（必填）：</label>\n          <input type=\"password\" v-model=\"currentPassword\" />\n        </div>\n        <div class=\"form-group\">\n          <label>新密码（可选）：</label>\n          <input type=\"password\" v-model=\"newPassword\" />\n        </div>\n        <div class=\"form-group\">\n          <label>头像：</label>\n          <input type=\"file\" @change=\"handleFileUpload\" accept=\"image/*\" />\n        </div>\n        <div class=\"button-group\">\n          <button class=\"save-button\" @click=\"updateProfile\" :disabled=\"loading\">\n            {{ loading ? '保存中...' : '保存' }}\n          </button>\n          <button class=\"cancel-button\" @click=\"cancelEdit\">取消</button>\n        </div>\n      </div>\n\n      <button class=\"logout-button\" @click=\"logout\">退出登录</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { handleApiError } from '../utils/errorHandler';\nconst API = process.env.VUE_APP_API_URL;\n\nexport default {\n  name: 'UserProfile',\n  data() {\n    return {\n      isLoggedIn: !!localStorage.getItem('authToken'),\n      userInfo: {\n        username: '',\n        email: '',\n        role: '',\n        balance: 0\n      },\n      editMode: false,\n      currentPassword: '',\n      newPassword: '',\n      file: null,\n      loading: false,\n      loadError: '',\n      updateSuccess: ''\n    };\n  },\n  async created() {\n    // 从 localStorage 获取基本信息\n    const token = localStorage.getItem('authToken');\n    const role = localStorage.getItem('userRole');\n    const username = localStorage.getItem('username');\n    const email = localStorage.getItem('email');\n\n    if (!token) {\n      this.isLoggedIn = false;\n    } else {\n      // 立即设置基本信息\n      this.userInfo = {\n        username: username || '',\n        email: email || '',\n        role: role || ''\n      };\n\n      // 异步加载完整用户信息\n      try {\n        await this.fetchUserProfile();\n      } catch (error) {\n        console.error('Failed to fetch user profile:', error);\n        if (error.response && error.response.status === 401) {\n          this.handleUnauthorized();\n        }\n      }\n    }\n  },\n  methods: {\n    formatRole(role) {\n      const roleMap = {\n        'super_admin': '超级管理员',\n        'admin': '管理员',\n        'user': '普通用户'\n      };\n      return roleMap[role] || role;\n    },\n\n    async retryLoad() {\n      this.loadError = '';\n      await this.fetchUserProfile();\n    },\n\n    async fetchUserProfile() {\n      this.loading = true;\n      this.loadError = '';\n      try {\n        const token = localStorage.getItem('authToken');\n        \n        if (!token) {\n          console.warn('No auth token found, using local storage data');\n          this.useLocalStorageData();\n          return;\n        }\n\n        const requestConfig = {\n          method: 'get',\n          url: `${API}/me`,\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        };\n\n        const response = await axios(requestConfig);\n        // console.log('Profile response:', {\n        //   status: response.status,\n        //   data: response.data\n        // });\n\n        if (response.data && response.data.user) {\n          this.userInfo = response.data.user;\n        } else if (response.data) {\n          this.userInfo = response.data;\n        } else {\n          throw new Error('Invalid response format');\n        }\n\n      } catch (error) {\n        console.error('Error fetching user profile:', error);\n        if (error.response) {\n          if (error.response.status === 401) {\n            this.handleUnauthorized();\n            return;\n          }\n          this.loadError = `加载失败: ${error.response.data.message || '服务器错误'}`;\n        } else {\n          this.loadError = '网络错误，请检查网络连接';\n        }\n        this.useLocalStorageData();\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    useLocalStorageData() {\n      this.userInfo = {\n        username: localStorage.getItem('username') || '',\n        email: localStorage.getItem('email') || '',\n        role: localStorage.getItem('userRole') || ''\n      };\n    },\n\n    handleUnauthorized() {\n      // 清除所有认证信息\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('userRole');\n      localStorage.removeItem('username');\n      localStorage.removeItem('userId');\n      localStorage.removeItem('email');\n      \n      this.isLoggedIn = false;\n    },\n\n    async updateProfile() {\n      this.loading = true;\n      this.updateSuccess = '';\n      try {\n        const formData = new FormData();\n        formData.append('username', this.userInfo.username);\n        formData.append('email', this.userInfo.email);\n        if (this.currentPassword) {\n          formData.append('currentPassword', this.currentPassword);\n          if (this.newPassword) {\n            formData.append('newPassword', this.newPassword);\n          }\n        }\n        if (this.file) {\n          formData.append('avatar', this.file);\n        }\n\n        await axios.put(`${API}/me`, formData, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n\n        this.updateSuccess = '个人信息更新成功！';\n        this.editMode = false;\n        this.currentPassword = '';\n        this.newPassword = '';\n        this.file = null;\n        await this.fetchUserProfile();\n      } catch (error) {\n        handleApiError(error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    handleFileUpload(event) {\n      this.file = event.target.files[0];\n    },\n    goToLogin() {\n      this.$router.push('/login');\n    },\n    goToRegister() {\n      this.$router.push('/register');\n    },\n    async logout() {\n      // 清除所有本地存储\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('userRole');\n      localStorage.removeItem('username');\n      localStorage.removeItem('userId');\n      localStorage.removeItem('email');\n      \n      // 可选：完全清除所有本地存储\n      // localStorage.clear();\n      \n      // 重定向到登录页\n      await this.$router.push('/login');\n      \n      // 提示用户\n      alert('已成功退出登录');\n    },\n    cancelEdit() {\n      this.editMode = false;\n      this.currentPassword = '';\n      this.newPassword = '';\n      this.file = null;\n      this.fetchUserProfile();\n    }\n  }\n};\n</script>\n\n<style scoped>\n.profile-container {\n  max-width: 600px;\n  margin: 20px auto;\n  padding: 20px;\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.loading-section {\n  text-align: center;\n  padding: 20px;\n  color: #666;\n}\n\n.loading-section p {\n  margin: 0;\n  font-size: 16px;\n}\n\n.profile-section {\n  padding: 20px;\n}\n\n.auth-section {\n  text-align: center;\n  padding: 20px;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 5px;\n  color: #333;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  box-sizing: border-box;\n}\n\n.button-group {\n  display: flex;\n  gap: 10px;\n  margin-top: 20px;\n}\n\n.edit-button,\n.save-button,\n.cancel-button,\n.auth-button,\n.logout-button {\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.3s;\n}\n\n.edit-button {\n  background-color: #4CAF50;\n  color: white;\n}\n\n.save-button {\n  background-color: #2196F3;\n  color: white;\n}\n\n.cancel-button {\n  background-color: #f44336;\n  color: white;\n}\n\n.auth-button {\n  background-color: #2196F3;\n  color: white;\n  margin: 0 5px;\n}\n\n.register-button {\n  background-color: #4CAF50;\n}\n\n.logout-button {\n  background-color: #f44336;\n  color: white;\n  margin-top: 20px;\n}\n\n.edit-button:hover,\n.save-button:hover,\n.cancel-button:hover,\n.auth-button:hover,\n.logout-button:hover {\n  opacity: 0.9;\n}\n\n.error-message {\n  color: #f44336;\n  margin-bottom: 10px;\n}\n\n.success-message {\n  color: #4CAF50;\n  margin-bottom: 10px;\n}\n\n.retry-button {\n  background-color: #2196F3;\n  color: white;\n  padding: 5px 10px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 12px;\n  transition: background-color 0.3s;\n}\n\n.retry-button:hover {\n  opacity: 0.9;\n}\n</style>\n"],"mappings":";AAmEA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,cAAa,QAAS,uBAAuB;AACtD,MAAMC,GAAE,GAAIC,OAAO,CAACC,GAAG,CAACC,eAAe;AAEvC,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/CC,QAAQ,EAAE;QACRC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,IAAI,EAAE,EAAE;QACRC,OAAO,EAAE;MACX,CAAC;MACDC,QAAQ,EAAE,KAAK;MACfC,eAAe,EAAE,EAAE;MACnBC,WAAW,EAAE,EAAE;MACfC,IAAI,EAAE,IAAI;MACVC,OAAO,EAAE,KAAK;MACdC,SAAS,EAAE,EAAE;MACbC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd;IACA,MAAMC,KAAI,GAAIf,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,MAAMI,IAAG,GAAIL,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAC7C,MAAME,QAAO,GAAIH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACjD,MAAMG,KAAI,GAAIJ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAI,CAACc,KAAK,EAAE;MACV,IAAI,CAAChB,UAAS,GAAI,KAAK;IACzB,OAAO;MACL;MACA,IAAI,CAACG,QAAO,GAAI;QACdC,QAAQ,EAAEA,QAAO,IAAK,EAAE;QACxBC,KAAK,EAAEA,KAAI,IAAK,EAAE;QAClBC,IAAI,EAAEA,IAAG,IAAK;MAChB,CAAC;;MAED;MACA,IAAI;QACF,MAAM,IAAI,CAACW,gBAAgB,CAAC,CAAC;MAC/B,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrD,IAAIA,KAAK,CAACE,QAAO,IAAKF,KAAK,CAACE,QAAQ,CAACC,MAAK,KAAM,GAAG,EAAE;UACnD,IAAI,CAACC,kBAAkB,CAAC,CAAC;QAC3B;MACF;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAClB,IAAI,EAAE;MACf,MAAMmB,OAAM,GAAI;QACd,aAAa,EAAE,OAAO;QACtB,OAAO,EAAE,KAAK;QACd,MAAM,EAAE;MACV,CAAC;MACD,OAAOA,OAAO,CAACnB,IAAI,KAAKA,IAAI;IAC9B,CAAC;IAED,MAAMoB,SAASA,CAAA,EAAG;MAChB,IAAI,CAACb,SAAQ,GAAI,EAAE;MACnB,MAAM,IAAI,CAACI,gBAAgB,CAAC,CAAC;IAC/B,CAAC;IAED,MAAMA,gBAAgBA,CAAA,EAAG;MACvB,IAAI,CAACL,OAAM,GAAI,IAAI;MACnB,IAAI,CAACC,SAAQ,GAAI,EAAE;MACnB,IAAI;QACF,MAAMG,KAAI,GAAIf,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QAE/C,IAAI,CAACc,KAAK,EAAE;UACVG,OAAO,CAACQ,IAAI,CAAC,+CAA+C,CAAC;UAC7D,IAAI,CAACC,mBAAmB,CAAC,CAAC;UAC1B;QACF;QAEA,MAAMC,aAAY,GAAI;UACpBC,MAAM,EAAE,KAAK;UACbC,GAAG,EAAE,GAAGrC,GAAG,KAAK;UAChBsC,OAAO,EAAE;YACP,eAAe,EAAE,UAAUhB,KAAK,EAAE;YAClC,cAAc,EAAE;UAClB;QACF,CAAC;QAED,MAAMI,QAAO,GAAI,MAAM5B,KAAK,CAACqC,aAAa,CAAC;QAC3C;QACA;QACA;QACA;;QAEA,IAAIT,QAAQ,CAACrB,IAAG,IAAKqB,QAAQ,CAACrB,IAAI,CAACkC,IAAI,EAAE;UACvC,IAAI,CAAC9B,QAAO,GAAIiB,QAAQ,CAACrB,IAAI,CAACkC,IAAI;QACpC,OAAO,IAAIb,QAAQ,CAACrB,IAAI,EAAE;UACxB,IAAI,CAACI,QAAO,GAAIiB,QAAQ,CAACrB,IAAI;QAC/B,OAAO;UACL,MAAM,IAAImC,KAAK,CAAC,yBAAyB,CAAC;QAC5C;MAEF,EAAE,OAAOhB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpD,IAAIA,KAAK,CAACE,QAAQ,EAAE;UAClB,IAAIF,KAAK,CAACE,QAAQ,CAACC,MAAK,KAAM,GAAG,EAAE;YACjC,IAAI,CAACC,kBAAkB,CAAC,CAAC;YACzB;UACF;UACA,IAAI,CAACT,SAAQ,GAAI,SAASK,KAAK,CAACE,QAAQ,CAACrB,IAAI,CAACoC,OAAM,IAAK,OAAO,EAAE;QACpE,OAAO;UACL,IAAI,CAACtB,SAAQ,GAAI,cAAc;QACjC;QACA,IAAI,CAACe,mBAAmB,CAAC,CAAC;MAC5B,UAAU;QACR,IAAI,CAAChB,OAAM,GAAI,KAAK;MACtB;IACF,CAAC;IAEDgB,mBAAmBA,CAAA,EAAG;MACpB,IAAI,CAACzB,QAAO,GAAI;QACdC,QAAQ,EAAEH,YAAY,CAACC,OAAO,CAAC,UAAU,KAAK,EAAE;QAChDG,KAAK,EAAEJ,YAAY,CAACC,OAAO,CAAC,OAAO,KAAK,EAAE;QAC1CI,IAAI,EAAEL,YAAY,CAACC,OAAO,CAAC,UAAU,KAAK;MAC5C,CAAC;IACH,CAAC;IAEDoB,kBAAkBA,CAAA,EAAG;MACnB;MACArB,YAAY,CAACmC,UAAU,CAAC,WAAW,CAAC;MACpCnC,YAAY,CAACmC,UAAU,CAAC,UAAU,CAAC;MACnCnC,YAAY,CAACmC,UAAU,CAAC,UAAU,CAAC;MACnCnC,YAAY,CAACmC,UAAU,CAAC,QAAQ,CAAC;MACjCnC,YAAY,CAACmC,UAAU,CAAC,OAAO,CAAC;MAEhC,IAAI,CAACpC,UAAS,GAAI,KAAK;IACzB,CAAC;IAED,MAAMqC,aAAaA,CAAA,EAAG;MACpB,IAAI,CAACzB,OAAM,GAAI,IAAI;MACnB,IAAI,CAACE,aAAY,GAAI,EAAE;MACvB,IAAI;QACF,MAAMwB,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE,IAAI,CAACrC,QAAQ,CAACC,QAAQ,CAAC;QACnDkC,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACrC,QAAQ,CAACE,KAAK,CAAC;QAC7C,IAAI,IAAI,CAACI,eAAe,EAAE;UACxB6B,QAAQ,CAACE,MAAM,CAAC,iBAAiB,EAAE,IAAI,CAAC/B,eAAe,CAAC;UACxD,IAAI,IAAI,CAACC,WAAW,EAAE;YACpB4B,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC9B,WAAW,CAAC;UAClD;QACF;QACA,IAAI,IAAI,CAACC,IAAI,EAAE;UACb2B,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC7B,IAAI,CAAC;QACtC;QAEA,MAAMnB,KAAK,CAACiD,GAAG,CAAC,GAAG/C,GAAG,KAAK,EAAE4C,QAAQ,EAAE;UACrCN,OAAO,EAAE;YACP,eAAe,EAAE,UAAU/B,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,EAAE;YAC9D,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QAEF,IAAI,CAACY,aAAY,GAAI,WAAW;QAChC,IAAI,CAACN,QAAO,GAAI,KAAK;QACrB,IAAI,CAACC,eAAc,GAAI,EAAE;QACzB,IAAI,CAACC,WAAU,GAAI,EAAE;QACrB,IAAI,CAACC,IAAG,GAAI,IAAI;QAChB,MAAM,IAAI,CAACM,gBAAgB,CAAC,CAAC;MAC/B,EAAE,OAAOC,KAAK,EAAE;QACdzB,cAAc,CAACyB,KAAK,CAAC;MACvB,UAAU;QACR,IAAI,CAACN,OAAM,GAAI,KAAK;MACtB;IACF,CAAC;IACD8B,gBAAgBA,CAACC,KAAK,EAAE;MACtB,IAAI,CAAChC,IAAG,GAAIgC,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACnC,CAAC;IACDC,SAASA,CAAA,EAAG;MACV,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;IAC7B,CAAC;IACDC,YAAYA,CAAA,EAAG;MACb,IAAI,CAACF,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC;IAChC,CAAC;IACD,MAAME,MAAMA,CAAA,EAAG;MACb;MACAjD,YAAY,CAACmC,UAAU,CAAC,WAAW,CAAC;MACpCnC,YAAY,CAACmC,UAAU,CAAC,UAAU,CAAC;MACnCnC,YAAY,CAACmC,UAAU,CAAC,UAAU,CAAC;MACnCnC,YAAY,CAACmC,UAAU,CAAC,QAAQ,CAAC;MACjCnC,YAAY,CAACmC,UAAU,CAAC,OAAO,CAAC;;MAEhC;MACA;;MAEA;MACA,MAAM,IAAI,CAACW,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;;MAEjC;MACAG,KAAK,CAAC,SAAS,CAAC;IAClB,CAAC;IACDC,UAAUA,CAAA,EAAG;MACX,IAAI,CAAC5C,QAAO,GAAI,KAAK;MACrB,IAAI,CAACC,eAAc,GAAI,EAAE;MACzB,IAAI,CAACC,WAAU,GAAI,EAAE;MACrB,IAAI,CAACC,IAAG,GAAI,IAAI;MAChB,IAAI,CAACM,gBAAgB,CAAC,CAAC;IACzB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}