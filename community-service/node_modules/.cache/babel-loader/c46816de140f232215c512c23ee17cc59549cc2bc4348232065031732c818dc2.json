{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"article-editor\"\n};\nconst _hoisted_2 = {\n  type: \"submit\"\n};\nconst _hoisted_3 = {\n  class: \"articles-area\"\n};\nconst _hoisted_4 = {\n  class: \"category-buttons\"\n};\nconst _hoisted_5 = [\"src\", \"onError\", \"alt\"];\nconst _hoisted_6 = {\n  class: \"action-buttons\"\n};\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", null, _toDisplayString($data.editingArticleId ? \"编辑文章\" : \"编写文章\"), 1 /* TEXT */), _createElementVNode(\"form\", {\n    onSubmit: _cache[6] || (_cache[6] = _withModifiers((...args) => $options.submitArticle && $options.submitArticle(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_cache[10] || (_cache[10] = _createElementVNode(\"label\", null, \"标题：\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.title = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.title]])]), _createElementVNode(\"div\", null, [_cache[11] || (_cache[11] = _createElementVNode(\"label\", null, \"内容：\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.content = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.content]])]), _createElementVNode(\"div\", null, [_cache[12] || (_cache[12] = _createElementVNode(\"label\", null, \"图片链接：\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.imageUrl = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.imageUrl]])]), _createElementVNode(\"div\", null, [_cache[13] || (_cache[13] = _createElementVNode(\"label\", null, \"或上传图片：\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    ref: \"fileInput\",\n    onChange: _cache[3] || (_cache[3] = (...args) => $options.handleFileUpload && $options.handleFileUpload(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */)]), _createElementVNode(\"div\", null, [_cache[15] || (_cache[15] = _createElementVNode(\"label\", null, \"选择发布位置：\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.category = $event),\n    required: \"\"\n  }, _cache[14] || (_cache[14] = [_createElementVNode(\"option\", {\n    value: \"carousel\"\n  }, \"轮播图\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"hotNews\"\n  }, \"热门新闻\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"newsList\"\n  }, \"新闻列表\", -1 /* HOISTED */)]), 512 /* NEED_PATCH */), [[_vModelSelect, $data.category]])]), _createElementVNode(\"button\", _hoisted_2, _toDisplayString($data.editingArticleId ? \"保存修改\" : \"发布文章\"), 1 /* TEXT */), $data.editingArticleId ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    type: \"button\",\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.cancelEdit && $options.cancelEdit(...args))\n  }, \"取消编辑\")) : _createCommentVNode(\"v-if\", true)], 32 /* NEED_HYDRATION */), _createCommentVNode(\" 选择文章区域 \"), _createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" 切换按钮 \"), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"button\", {\n    onClick: _cache[7] || (_cache[7] = $event => $options.loadArticles('carousel'))\n  }, \"轮播图\"), _createElementVNode(\"button\", {\n    onClick: _cache[8] || (_cache[8] = $event => $options.loadArticles('hotNews'))\n  }, \"热门新闻\"), _createElementVNode(\"button\", {\n    onClick: _cache[9] || (_cache[9] = $event => $options.loadArticles('newsList'))\n  }, \"新闻列表\")]), _createCommentVNode(\" 列表展示 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.articles, article => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: article.id,\n      class: \"article\"\n    }, [_createElementVNode(\"h3\", null, _toDisplayString(article.title), 1 /* TEXT */), article.image_url ? (_openBlock(), _createElementBlock(\"img\", {\n      key: 0,\n      src: article.blobUrl || '',\n      onError: $event => $options.loadImage(article),\n      alt: article.title,\n      class: \"article-image\"\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_5)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"p\", null, _toDisplayString(article.content), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"button\", {\n      class: \"edit\",\n      onClick: $event => $options.editArticle(article)\n    }, \"修改\", 8 /* PROPS */, _hoisted_7), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteArticle(article.id)\n    }, \"删除\", 8 /* PROPS */, _hoisted_8)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","type","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$data","editingArticleId","onSubmit","_cache","_withModifiers","args","$options","submitArticle","$event","title","required","content","imageUrl","ref","onChange","handleFileUpload","category","value","_hoisted_2","key","onClick","cancelEdit","_createCommentVNode","_hoisted_3","_hoisted_4","loadArticles","_Fragment","_renderList","articles","article","id","image_url","src","blobUrl","onError","loadImage","alt","_hoisted_5","_hoisted_6","editArticle","_hoisted_7","deleteArticle","_hoisted_8"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\ArticleEditor.vue"],"sourcesContent":["<template>\n  <div class=\"article-editor\">\n    <h2>{{ editingArticleId ? \"编辑文章\" : \"编写文章\" }}</h2>\n    <form @submit.prevent=\"submitArticle\">\n      <div>\n        <label>标题：</label>\n        <input type=\"text\" v-model=\"title\" required />\n      </div>\n      <div>\n        <label>内容：</label>\n        <textarea v-model=\"content\" required></textarea>\n      </div>\n      <div>\n        <label>图片链接：</label>\n        <input type=\"text\" v-model=\"imageUrl\" />\n      </div>\n      <div>\n        <label>或上传图片：</label>\n        <input type=\"file\" ref=\"fileInput\" @change=\"handleFileUpload\" />\n      </div>\n      <div>\n        <label>选择发布位置：</label>\n        <select v-model=\"category\" required>\n          <option value=\"carousel\">轮播图</option>\n          <option value=\"hotNews\">热门新闻</option>\n          <option value=\"newsList\">新闻列表</option>\n        </select>\n      </div>\n      <button type=\"submit\">{{ editingArticleId ? \"保存修改\" : \"发布文章\" }}</button>\n      <button v-if=\"editingArticleId\" type=\"button\" @click=\"cancelEdit\">取消编辑</button>\n    </form>\n\n    <!-- 选择文章区域 -->\n    <div class=\"articles-area\">\n      <!-- 切换按钮 -->\n      <div class=\"category-buttons\">\n        <button @click=\"loadArticles('carousel')\">轮播图</button>\n        <button @click=\"loadArticles('hotNews')\">热门新闻</button>\n        <button @click=\"loadArticles('newsList')\">新闻列表</button>\n      </div>\n\n      <!-- 列表展示 -->\n      <div v-for=\"article in articles\" :key=\"article.id\" class=\"article\">\n        <h3>{{ article.title }}</h3>\n        <img v-if=\"article.image_url\" :src=\"article.blobUrl || ''\" @error=\"loadImage(article)\" :alt=\"article.title\" class=\"article-image\">\n        <p>{{ article.content }}</p>\n        <div class=\"action-buttons\">\n          <button class=\"edit\" @click=\"editArticle(article)\">修改</button>\n          <button @click=\"deleteArticle(article.id)\">删除</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nconst API = process.env.VUE_APP_API_URL;\nconst BASE_URL = process.env.VUE_APP_BASE_URL;\n\nexport default {\n  data() {\n    return {\n      title: '',\n      content: '',\n      imageUrl: '',\n      category: 'newsList',\n      imageFile: null,\n      editingArticleId: null,\n      articles: [],\n      imageCache: new Map(), // 添加图片缓存\n    };\n  },\n  methods: {\n    async fetchArticles(category) {\n      try {\n        const token = localStorage.getItem('token');\n        const headers = { 'Authorization': `Bearer ${token}` };\n        const response = await axios.get(`${API}/articles${category ? `?category=${category}` : ''}`, { headers });\n        this.articles = response.data;\n        // 预加载所有图片\n        for (const article of this.articles) {\n          await this.loadImage(article);\n        }\n      } catch (error) {\n        console.error('获取文章失败:', error);\n      }\n    },\n    async loadArticles(category) {\n      this.category = category; // 更新当前类别\n      await this.fetchArticles(category); // 获取对应类别的文章\n    },\n    handleFileUpload(event) {\n      this.imageFile = event.target.files[0];\n    },\n    async submitArticle() {\n      const formData = new FormData();\n      formData.append('title', this.title);\n      formData.append('content', this.content);\n      formData.append('category', this.category);\n      formData.append('image_url', this.imageUrl);\n      if (this.imageFile) {\n        formData.append('image', this.imageFile);\n      }\n\n      try {\n        const token = localStorage.getItem('token');\n        const headers = {\n          'Content-Type': 'multipart/form-data',\n          'Authorization': `Bearer ${token}`\n        };\n\n        if (this.editingArticleId) {\n          // 编辑模式\n          await axios.put(`${API}/articles/${this.editingArticleId}`, formData, { headers });\n          alert('文章修改成功');\n        } else {\n          // 新建模式\n          await axios.post(`${API}/articles`, formData, { headers });\n          alert('文章发布成功');\n        }\n        this.resetForm();\n        this.fetchArticles();\n      } catch (error) {\n        console.error('提交文章失败:', error);\n        alert('提交失败，请重试。');\n      }\n    },\n    editArticle(article) {\n      this.title = article.title;\n      this.content = article.content;\n      this.imageUrl = article.image_url;\n      this.category = article.category;\n      this.editingArticleId = article.id;\n    },\n    async deleteArticle(articleId) {\n      if (confirm('确定要删除这篇文章吗？')) {\n        try {\n          const token = localStorage.getItem('token');\n          const headers = { 'Authorization': `Bearer ${token}` };\n          await axios.delete(`${API}/articles/${articleId}`, { headers });\n          this.fetchArticles(); // 重新加载文章列表\n        } catch (error) {\n          console.error('删除文章失败:', error);\n          alert('删除失败，请重试。');\n        }\n      }\n    },\n    resetForm() {\n      this.title = '';\n      this.content = '';\n      this.imageUrl = '';\n      this.imageFile = null;\n      this.category = 'newsList';\n      this.editingArticleId = null;\n      this.$refs.fileInput.value = '';\n    },\n    cancelEdit() {\n      this.resetForm();\n    },\n    async getImageUrl(path) {\n      if (!path) return ''; \n      if (path.startsWith('http')) {\n        return path;\n      }\n      \n      // 检查缓存\n      if (this.imageCache.has(path)) {\n        return this.imageCache.get(path);\n      }\n\n      try {\n        const token = localStorage.getItem('token');\n        const headers = { 'Authorization': `Bearer ${token}` };\n        const uploadPath = path.startsWith('/uploads/') ? path : `/uploads/${path}`;\n        const baseUrl = API.replace('/api/auth', '');\n        const response = await fetch(`${baseUrl}${uploadPath}`, { headers });\n        const blob = await response.blob();\n        const blobUrl = URL.createObjectURL(blob);\n        \n        // 存入缓存\n        this.imageCache.set(path, blobUrl);\n        \n        return blobUrl;\n      } catch (error) {\n        console.error('加载图片失败:', error);\n        return '';\n      }\n    },\n    async loadImage(article) {\n      if (!article.image_url) return;\n      article.blobUrl = await this.getImageUrl(article.image_url);\n    },\n  },\n  mounted() {\n    this.fetchArticles();\n  }\n};\n</script>\n\n<style scoped>\n.article-image {\n  max-width: 100%;\n  height: auto;\n  margin: 10px 0;\n}\n.article-editor {\n  padding: 20px;\n  max-width: 600px;\n  margin: 0 auto;\n  background-color: #ffffff;\n  border-radius: 10px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n}\n\nh2 {\n  text-align: center;\n  color: #333;\n  margin-bottom: 20px;\n}\n\n/* 新增区域样式 */\n.article-area {\n  margin-bottom: 30px;\n}\n\n.category-buttons {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n}\n\n.category-buttons button {\n  flex: 1;\n  padding: 10px;\n  margin-right: 10px;\n  background-color: #42b983;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.category-buttons button:hover {\n  background-color: #369d73;\n}\n\n.category-buttons button:last-child {\n  margin-right: 0; /* 去掉最后一个按钮的右边距 */\n}\n\n/* 修改按钮和删除按钮的样式 */\n.article .action-buttons {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 10px; /* 上方的间距 */\n}\n\n.action-buttons button {\n  flex: 1; /* 使按钮宽度均匀 */\n  padding: 5px; /* 按钮变小 */\n  margin-right: 5px; /* 按钮之间的间距 */\n  background-color: #e74c3c; /* 删除按钮颜色 */\n  border: none;\n  border-radius: 5px;\n  color: white;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.action-buttons button:hover {\n  background-color: #c0392b; /* 删除按钮悬停颜色 */\n}\n\n.action-buttons button.edit {\n  background-color: #42b983; /* 修改按钮颜色 */\n}\n\n.action-buttons button.edit:hover {\n  background-color: #369d73; /* 修改按钮悬停颜色 */\n}\n\n.form-group {\n  margin-bottom: 60px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 8px;\n  font-weight: bold;\n  color: #555;\n}\n\n.form-group label.required::after {\n  content: '*';\n  color: #e74c3c;\n  margin-left: 5px;\n}\n\ninput[type=\"text\"],\ntextarea,\nselect {\n  width: 100%;\n  padding: 10px;\n  font-size: 16px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  box-sizing: border-box;\n  transition: border-color 0.3s ease;\n}\n\ninput[type=\"text\"]:focus,\ntextarea:focus,\nselect:focus {\n  border-color: #42b983;\n  outline: none;\n}\n\ntextarea {\n  resize: vertical;\n  height: 120px;\n}\n\nbutton {\n  width: 100%;\n  background-color: #42b983;\n  color: white;\n  border: none;\n  padding: 12px 0;\n  border-radius: 5px;\n  font-size: 16px;\n  font-weight: bold;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  margin-top: 15px;\n}\n\nbutton:disabled {\n  background-color: #bdc3c7;\n  cursor: not-allowed;\n}\n\nbutton:not(:disabled):hover {\n  background-color: #369d73;\n}\n\n@media (max-width: 768px) {\n  .article-editor {\n    padding: 15px;\n  }\n\n  button {\n    font-size: 14px;\n    padding: 10px 0;\n    margin-top: 15px;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}