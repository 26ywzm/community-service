{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'UserProfile',\n  data() {\n    return {\n      isLoggedIn: false,\n      // 判断是否已登录\n      user: {} // 保存从后端获取的用户信息\n    };\n  },\n  methods: {\n    // 导航到登录页面\n    goToLogin() {\n      this.$router.push('/login');\n    },\n    // 导航到注册页面\n    goToRegister() {\n      this.$router.push('/register');\n    },\n    // 退出登录\n    logout() {\n      localStorage.removeItem('authToken'); // 清除 token\n      this.isLoggedIn = false;\n      alert('已退出登录');\n      this.$router.push('/'); // 跳转到首页\n    },\n    // 获取用户信息\n    async fetchUserProfile() {\n      const token = localStorage.getItem('authToken');\n      if (!token) {\n        this.isLoggedIn = false;\n        return;\n      }\n      try {\n        const response = await axios.get('http://localhost:3000/api/auth/profile', {\n          headers: {\n            Authorization: token // 将 token 作为请求头发送\n          }\n        });\n        this.user = response.data.user; // 将用户信息存储到 user 对象\n        this.isLoggedIn = true;\n      } catch (error) {\n        console.error('获取用户信息失败:', error);\n        this.isLoggedIn = false;\n      }\n    }\n  },\n  mounted() {\n    this.fetchUserProfile(); // 页面加载时调用 API 获取用户信息\n  }\n};","map":{"version":3,"names":["axios","name","data","isLoggedIn","user","methods","goToLogin","$router","push","goToRegister","logout","localStorage","removeItem","alert","fetchUserProfile","token","getItem","response","get","headers","Authorization","error","console","mounted"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\Profile.vue"],"sourcesContent":["<!-- Profile.vue -->\r\n<template>\r\n  <div class=\"profile-container\">\r\n    <h2>我的</h2>\r\n    <div v-if=\"!isLoggedIn\" class=\"auth-section\">\r\n      <p>请先登录或注册以查看您的个人信息。</p>\r\n      <button @click=\"goToLogin\">登录</button>\r\n      <button @click=\"goToRegister\">注册</button>\r\n    </div>\r\n    <div v-else class=\"profile-section\">\r\n      <h3>欢迎, {{ user.username }}</h3>\r\n      <p>邮箱: {{ user.email }}</p>\r\n      <button @click=\"logout\">退出登录</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'UserProfile',\r\n  data() {\r\n    return {\r\n      isLoggedIn: false, // 判断是否已登录\r\n      user: {}, // 保存从后端获取的用户信息\r\n    };\r\n  },\r\n  methods: {\r\n    // 导航到登录页面\r\n    goToLogin() {\r\n      this.$router.push('/login');\r\n    },\r\n    // 导航到注册页面\r\n    goToRegister() {\r\n      this.$router.push('/register');\r\n    },\r\n    // 退出登录\r\n    logout() {\r\n      localStorage.removeItem('authToken'); // 清除 token\r\n      this.isLoggedIn = false;\r\n      alert('已退出登录');\r\n      this.$router.push('/'); // 跳转到首页\r\n    },\r\n    // 获取用户信息\r\n    async fetchUserProfile() {\r\n      const token = localStorage.getItem('authToken');\r\n      if (!token) {\r\n        this.isLoggedIn = false;\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/api/auth/profile', {\r\n          headers: {\r\n            Authorization: token, // 将 token 作为请求头发送\r\n          },\r\n        });\r\n\r\n        this.user = response.data.user; // 将用户信息存储到 user 对象\r\n        this.isLoggedIn = true;\r\n      } catch (error) {\r\n        console.error('获取用户信息失败:', error);\r\n        this.isLoggedIn = false;\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchUserProfile(); // 页面加载时调用 API 获取用户信息\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 基本容器样式 */\r\n.profile-container {\r\n  padding: 40px;\r\n  max-width: 600px;\r\n  margin: 40px auto;\r\n  background-color: #f9f9f9;\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n}\r\n\r\n/* 标题样式 */\r\nh2 {\r\n  color: #333;\r\n  margin-bottom: 20px;\r\n  font-size: 28px;\r\n  font-weight: 700;\r\n}\r\n\r\n/* 按钮样式 */\r\n.auth-button {\r\n  background-color: #007bff;\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  margin: 10px;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.auth-button:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.register-button {\r\n  background-color: #28a745;\r\n}\r\n\r\n.register-button:hover {\r\n  background-color: #218838;\r\n}\r\n\r\n/* 登录成功后的个人信息区域 */\r\n.profile-section {\r\n  background-color: #ffffff;\r\n  padding: 20px;\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  margin-top: 20px;\r\n  text-align: left;\r\n}\r\n\r\n.profile-section h3 {\r\n  color: #333;\r\n  margin-bottom: 10px;\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n}\r\n\r\n.profile-section p {\r\n  color: #666;\r\n  font-size: 16px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n/* 退出按钮 */\r\n.logout-button {\r\n  background-color: #dc3545;\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  margin-top: 20px;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.logout-button:hover {\r\n  background-color: #c82333;\r\n}\r\n</style>\r\n"],"mappings":";AAkBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,KAAK;MAAE;MACnBC,IAAI,EAAE,CAAC,CAAC,CAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACAC,SAASA,CAAA,EAAG;MACV,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;IAC7B,CAAC;IACD;IACAC,YAAYA,CAAA,EAAG;MACb,IAAI,CAACF,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC;IAChC,CAAC;IACD;IACAE,MAAMA,CAAA,EAAG;MACPC,YAAY,CAACC,UAAU,CAAC,WAAW,CAAC,EAAE;MACtC,IAAI,CAACT,UAAS,GAAI,KAAK;MACvBU,KAAK,CAAC,OAAO,CAAC;MACd,IAAI,CAACN,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC,EAAE;IAC1B,CAAC;IACD;IACA,MAAMM,gBAAgBA,CAAA,EAAG;MACvB,MAAMC,KAAI,GAAIJ,YAAY,CAACK,OAAO,CAAC,WAAW,CAAC;MAC/C,IAAI,CAACD,KAAK,EAAE;QACV,IAAI,CAACZ,UAAS,GAAI,KAAK;QACvB;MACF;MAEA,IAAI;QACF,MAAMc,QAAO,GAAI,MAAMjB,KAAK,CAACkB,GAAG,CAAC,wCAAwC,EAAE;UACzEC,OAAO,EAAE;YACPC,aAAa,EAAEL,KAAK,CAAE;UACxB;QACF,CAAC,CAAC;QAEF,IAAI,CAACX,IAAG,GAAIa,QAAQ,CAACf,IAAI,CAACE,IAAI,EAAE;QAChC,IAAI,CAACD,UAAS,GAAI,IAAI;MACxB,EAAE,OAAOkB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjC,IAAI,CAAClB,UAAS,GAAI,KAAK;MACzB;IACF;EACF,CAAC;EACDoB,OAAOA,CAAA,EAAG;IACR,IAAI,CAACT,gBAAgB,CAAC,CAAC,EAAE;EAC3B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}