{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nconst API = process.env.VUE_APP_API_URL;\nimport axios from 'axios';\nexport default {\n  name: 'UserLogin',\n  data() {\n    return {\n      email: '',\n      // 使用 email 而不是 username\n      password: ''\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await axios.post(`${API}/auth/login`, {\n          email: this.email,\n          // 发送 email 和 password\n          password: this.password\n        });\n\n        // 登录成功后的操作\n        alert(response.data.message);\n        localStorage.setItem('authToken', response.data.token); // 保存 token\n        localStorage.setItem('userRole', response.data.role); // 保存角色信息\n        localStorage.setItem('username', this.email); // 也可以保存用户名\n\n        this.$router.push('/profile'); // 跳转到用户个人中心页面\n      } catch (error) {\n        console.error('Login error:', error);\n        // 提供更详细的错误信息\n        if (error.response && error.response.data && error.response.data.message) {\n          alert(error.response.data.message);\n        } else {\n          alert('登录失败，请检查您的邮箱和密码。');\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["API","process","env","VUE_APP_API_URL","axios","name","data","email","password","methods","login","response","post","alert","message","localStorage","setItem","token","role","$router","push","error","console"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\UserLogin.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <h2>用户登录</h2>\r\n    <form @submit.prevent=\"login\">\r\n      <div class=\"form-group\">\r\n        <label>邮箱：</label>\r\n        <input type=\"email\" v-model=\"email\" required />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>密码：</label>\r\n        <input type=\"password\" v-model=\"password\" required />\r\n      </div>\r\n      <button type=\"submit\" class=\"login-button\">登录</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nconst API = process.env.VUE_APP_API_URL;\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'UserLogin',\r\n  data() {\r\n    return {\r\n      email: '',   // 使用 email 而不是 username\r\n      password: '',\r\n    };\r\n  },\r\n  methods: {\r\n    async login() {\r\n      try {\r\n        const response = await axios.post(`${API}/auth/login`, {\r\n          email: this.email,      // 发送 email 和 password\r\n          password: this.password,\r\n        });\r\n\r\n        // 登录成功后的操作\r\n        alert(response.data.message);\r\n        localStorage.setItem('authToken', response.data.token); // 保存 token\r\n        localStorage.setItem('userRole', response.data.role); // 保存角色信息\r\n        localStorage.setItem('username', this.email); // 也可以保存用户名\r\n\r\n        this.$router.push('/profile'); // 跳转到用户个人中心页面\r\n      } catch (error) {\r\n        console.error('Login error:', error);\r\n        // 提供更详细的错误信息\r\n        if (error.response && error.response.data && error.response.data.message) {\r\n          alert(error.response.data.message);\r\n        } else {\r\n          alert('登录失败，请检查您的邮箱和密码。');\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 基本样式，您可以根据需要进行修改 */\r\n.login-container {\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  background-color: #f5f5f5;\r\n  border-radius: 10px;\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  padding: 8px;\r\n  box-sizing: border-box;\r\n  border-radius: 4px;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\n.login-button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.login-button:hover {\r\n  background-color: #45a049;\r\n}\r\n</style>\r\n"],"mappings":";AAkBA,MAAMA,GAAE,GAAIC,OAAO,CAACC,GAAG,CAACC,eAAe;AACvC,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MAAI;MACbC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MACZ,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMP,KAAK,CAACQ,IAAI,CAAC,GAAGZ,GAAG,aAAa,EAAE;UACrDO,KAAK,EAAE,IAAI,CAACA,KAAK;UAAO;UACxBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;;QAEF;QACAK,KAAK,CAACF,QAAQ,CAACL,IAAI,CAACQ,OAAO,CAAC;QAC5BC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEL,QAAQ,CAACL,IAAI,CAACW,KAAK,CAAC,EAAE;QACxDF,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEL,QAAQ,CAACL,IAAI,CAACY,IAAI,CAAC,EAAE;QACtDH,YAAY,CAACC,OAAO,CAAC,UAAU,EAAE,IAAI,CAACT,KAAK,CAAC,EAAE;;QAE9C,IAAI,CAACY,OAAO,CAACC,IAAI,CAAC,UAAU,CAAC,EAAE;MACjC,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;QACpC;QACA,IAAIA,KAAK,CAACV,QAAO,IAAKU,KAAK,CAACV,QAAQ,CAACL,IAAG,IAAKe,KAAK,CAACV,QAAQ,CAACL,IAAI,CAACQ,OAAO,EAAE;UACxED,KAAK,CAACQ,KAAK,CAACV,QAAQ,CAACL,IAAI,CAACQ,OAAO,CAAC;QACpC,OAAO;UACLD,KAAK,CAAC,kBAAkB,CAAC;QAC3B;MACF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}