{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from '../router';\nexport const handleAuthError = (shouldRedirect = true) => {\n  // 清除所有认证信息\n  localStorage.removeItem('authToken');\n  localStorage.removeItem('userRole');\n  localStorage.removeItem('username');\n  localStorage.removeItem('userId');\n  localStorage.removeItem('email');\n  if (shouldRedirect) {\n    // 跳转到登录页面\n    router.push('/login');\n  }\n};\nexport const handleApiError = (error, options = {}) => {\n  const {\n    customErrorHandler = null,\n    suppressAuthError = false,\n    showAlert = true\n  } = options;\n  console.error('API请求失败:', error);\n  if (error.response) {\n    const status = error.response.status;\n    const message = error.response.data?.message || '操作失败，请重试。';\n    switch (status) {\n      case 403:\n      case 401:\n        if (!suppressAuthError) {\n          handleAuthError();\n        } else if (showAlert) {\n          alert('您的登录已过期，请重新登录');\n          router.push('/login');\n        }\n        break;\n      default:\n        if (customErrorHandler) {\n          customErrorHandler(error);\n        } else if (showAlert) {\n          alert(message);\n        }\n    }\n  } else if (error.request) {\n    if (showAlert) {\n      alert('网络错误，请检查您的网络连接。');\n    }\n  } else {\n    if (showAlert) {\n      alert('请求错误，请重试。');\n    }\n  }\n  return Promise.reject(error);\n};","map":{"version":3,"names":["router","handleAuthError","shouldRedirect","localStorage","removeItem","push","handleApiError","error","options","customErrorHandler","suppressAuthError","showAlert","console","response","status","message","data","alert","request","Promise","reject"],"sources":["C:/Users/拯救者/Desktop/text/community-service/src/utils/errorHandler.js"],"sourcesContent":["import router from '../router';\n\nexport const handleAuthError = (shouldRedirect = true) => {\n  // 清除所有认证信息\n  localStorage.removeItem('authToken');\n  localStorage.removeItem('userRole');\n  localStorage.removeItem('username');\n  localStorage.removeItem('userId');\n  localStorage.removeItem('email');\n  \n  if (shouldRedirect) {\n    // 跳转到登录页面\n    router.push('/login');\n  }\n};\n\nexport const handleApiError = (error, options = {}) => {\n  const {\n    customErrorHandler = null,\n    suppressAuthError = false,\n    showAlert = true\n  } = options;\n\n  console.error('API请求失败:', error);\n  \n  if (error.response) {\n    const status = error.response.status;\n    const message = error.response.data?.message || '操作失败，请重试。';\n\n    switch (status) {\n      case 403:\n      case 401:\n        if (!suppressAuthError) {\n          handleAuthError();\n        } else if (showAlert) {\n          alert('您的登录已过期，请重新登录');\n          router.push('/login');\n        }\n        break;\n      default:\n        if (customErrorHandler) {\n          customErrorHandler(error);\n        } else if (showAlert) {\n          alert(message);\n        }\n    }\n  } else if (error.request) {\n    if (showAlert) {\n      alert('网络错误，请检查您的网络连接。');\n    }\n  } else {\n    if (showAlert) {\n      alert('请求错误，请重试。');\n    }\n  }\n  \n  return Promise.reject(error);\n};\n"],"mappings":";AAAA,OAAOA,MAAM,MAAM,WAAW;AAE9B,OAAO,MAAMC,eAAe,GAAGA,CAACC,cAAc,GAAG,IAAI,KAAK;EACxD;EACAC,YAAY,CAACC,UAAU,CAAC,WAAW,CAAC;EACpCD,YAAY,CAACC,UAAU,CAAC,UAAU,CAAC;EACnCD,YAAY,CAACC,UAAU,CAAC,UAAU,CAAC;EACnCD,YAAY,CAACC,UAAU,CAAC,QAAQ,CAAC;EACjCD,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;EAEhC,IAAIF,cAAc,EAAE;IAClB;IACAF,MAAM,CAACK,IAAI,CAAC,QAAQ,CAAC;EACvB;AACF,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGA,CAACC,KAAK,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EACrD,MAAM;IACJC,kBAAkB,GAAG,IAAI;IACzBC,iBAAiB,GAAG,KAAK;IACzBC,SAAS,GAAG;EACd,CAAC,GAAGH,OAAO;EAEXI,OAAO,CAACL,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;EAEhC,IAAIA,KAAK,CAACM,QAAQ,EAAE;IAClB,MAAMC,MAAM,GAAGP,KAAK,CAACM,QAAQ,CAACC,MAAM;IACpC,MAAMC,OAAO,GAAGR,KAAK,CAACM,QAAQ,CAACG,IAAI,EAAED,OAAO,IAAI,WAAW;IAE3D,QAAQD,MAAM;MACZ,KAAK,GAAG;MACR,KAAK,GAAG;QACN,IAAI,CAACJ,iBAAiB,EAAE;UACtBT,eAAe,CAAC,CAAC;QACnB,CAAC,MAAM,IAAIU,SAAS,EAAE;UACpBM,KAAK,CAAC,eAAe,CAAC;UACtBjB,MAAM,CAACK,IAAI,CAAC,QAAQ,CAAC;QACvB;QACA;MACF;QACE,IAAII,kBAAkB,EAAE;UACtBA,kBAAkB,CAACF,KAAK,CAAC;QAC3B,CAAC,MAAM,IAAII,SAAS,EAAE;UACpBM,KAAK,CAACF,OAAO,CAAC;QAChB;IACJ;EACF,CAAC,MAAM,IAAIR,KAAK,CAACW,OAAO,EAAE;IACxB,IAAIP,SAAS,EAAE;MACbM,KAAK,CAAC,iBAAiB,CAAC;IAC1B;EACF,CAAC,MAAM;IACL,IAAIN,SAAS,EAAE;MACbM,KAAK,CAAC,WAAW,CAAC;IACpB;EACF;EAEA,OAAOE,OAAO,CAACC,MAAM,CAACb,KAAK,CAAC;AAC9B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}