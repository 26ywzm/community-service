{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\nconst BASE_URL = process.env.VUE_APP_BASE_URL;\nconst API = `${BASE_URL}/api`;\nexport default {\n  data() {\n    return {\n      title: '',\n      content: '',\n      imageUrl: '',\n      category: 'newsList',\n      imageFile: null,\n      editingArticleId: null,\n      articles: []\n    };\n  },\n  methods: {\n    async fetchArticles(category) {\n      try {\n        const response = await axios.get(`${API}/articles?category=${category}`);\n        this.articles = response.data; // 更新文章列表\n        console.log(`获取 ${category} 文章成功`, this.articles);\n      } catch (error) {\n        console.error(`获取 ${category} 文章失败:`, error);\n      }\n    },\n    async loadArticles(category) {\n      this.category = category; // 更新当前类别\n      await this.fetchArticles(category); // 获取对应类别的文章\n    },\n    handleFileUpload(event) {\n      this.imageFile = event.target.files[0];\n    },\n    async submitArticle() {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        ElMessage.error('请先登录');\n        this.$router.push('/login');\n        return;\n      }\n      const formData = new FormData();\n      formData.append('title', this.title);\n      formData.append('content', this.content);\n      formData.append('category', this.category);\n      if (this.imageFile) {\n        formData.append('image', this.imageFile);\n      } else if (this.imageUrl) {\n        formData.append('image_url', this.imageUrl);\n      }\n      try {\n        const config = {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'multipart/form-data'\n          }\n        };\n        if (this.editingArticleId) {\n          // 编辑模式\n          await axios.put(`${API}/auth/articles/${this.editingArticleId}`, formData, config);\n          ElMessage.success('文章修改成功');\n        } else {\n          // 新建模式\n          await axios.post(`${API}/auth/articles`, formData, config);\n          ElMessage.success('文章发布成功');\n        }\n        this.resetForm();\n        this.loadArticles(this.category);\n      } catch (error) {\n        console.error('提交文章失败:', error);\n        if (error.response) {\n          if (error.response.status === 401) {\n            ElMessage.error('登录已过期，请重新登录');\n            localStorage.removeItem('token');\n            this.$router.push('/login');\n          } else {\n            ElMessage.error(error.response.data?.message || '提交失败，请重试');\n          }\n        } else {\n          ElMessage.error('网络错误，请检查网络连接');\n        }\n      }\n    },\n    editArticle(article) {\n      this.title = article.title;\n      this.content = article.content;\n      this.imageUrl = article.image_url;\n      this.category = article.category;\n      this.editingArticleId = article.id;\n    },\n    async deleteArticle(articleId) {\n      try {\n        await axios.delete(`${API}/articles/${articleId}`);\n        ElMessage.success('文章删除成功');\n        this.fetchArticles();\n      } catch (error) {\n        console.error('删除文章失败:', error);\n        ElMessage.error('删除失败，请重试');\n      }\n    },\n    resetForm() {\n      this.title = '';\n      this.content = '';\n      this.imageUrl = '';\n      this.imageFile = null;\n      this.category = 'newsList';\n      this.editingArticleId = null;\n      this.$refs.fileInput.value = '';\n    },\n    cancelEdit() {\n      this.resetForm();\n    }\n  },\n  mounted() {\n    this.fetchArticles();\n  }\n};","map":{"version":3,"names":["axios","ElMessage","BASE_URL","process","env","VUE_APP_BASE_URL","API","data","title","content","imageUrl","category","imageFile","editingArticleId","articles","methods","fetchArticles","response","get","console","log","error","loadArticles","handleFileUpload","event","target","files","submitArticle","token","localStorage","getItem","$router","push","formData","FormData","append","config","headers","put","success","post","resetForm","status","removeItem","message","editArticle","article","image_url","id","deleteArticle","articleId","delete","$refs","fileInput","value","cancelEdit","mounted"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\ArticleEditor.vue"],"sourcesContent":["<template>\n  <div class=\"article-editor\">\n    <h2>{{ editingArticleId ? \"编辑文章\" : \"编写文章\" }}</h2>\n    <form @submit.prevent=\"submitArticle\">\n      <div>\n        <label>标题：</label>\n        <input type=\"text\" v-model=\"title\" required />\n      </div>\n      <div>\n        <label>内容：</label>\n        <textarea v-model=\"content\" required></textarea>\n      </div>\n      <div>\n        <label>图片链接：</label>\n        <input type=\"text\" v-model=\"imageUrl\" />\n      </div>\n      <div>\n        <label>或上传图片：</label>\n        <input type=\"file\" ref=\"fileInput\" @change=\"handleFileUpload\" />\n      </div>\n      <div>\n        <label>选择发布位置：</label>\n        <select v-model=\"category\" required>\n          <option value=\"carousel\">轮播图</option>\n          <option value=\"hotNews\">热门新闻</option>\n          <option value=\"newsList\">新闻列表</option>\n        </select>\n      </div>\n      <button type=\"submit\">{{ editingArticleId ? \"保存修改\" : \"发布文章\" }}</button>\n      <button v-if=\"editingArticleId\" type=\"button\" @click=\"cancelEdit\">取消编辑</button>\n    </form>\n\n    <!-- 选择文章区域 -->\n    <div class=\"articles-area\">\n      <!-- 切换按钮 -->\n      <div class=\"category-buttons\">\n        <button @click=\"loadArticles('carousel')\">轮播图</button>\n        <button @click=\"loadArticles('hotNews')\">热门新闻</button>\n        <button @click=\"loadArticles('newsList')\">新闻列表</button>\n      </div>\n\n      <!-- 列表展示 -->\n      <div v-for=\"article in articles\" :key=\"article.id\" class=\"article\">\n        <h3>{{ article.title }}</h3>\n        <p>{{ article.content }}</p>\n        <div class=\"action-buttons\">\n          <button class=\"edit\" @click=\"editArticle(article)\">修改</button>\n          <button @click=\"deleteArticle(article.id)\">删除</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { ElMessage } from 'element-plus';\n\nconst BASE_URL = process.env.VUE_APP_BASE_URL;\nconst API = `${BASE_URL}/api`;\n\nexport default {\n  data() {\n    return {\n      title: '',\n      content: '',\n      imageUrl: '',\n      category: 'newsList',\n      imageFile: null,\n      editingArticleId: null,\n      articles: []\n    };\n  },\n  methods: {\n    async fetchArticles(category) {\n      try {\n        const response = await axios.get(`${API}/articles?category=${category}`);\n        this.articles = response.data; // 更新文章列表\n        console.log(`获取 ${category} 文章成功`, this.articles);\n      } catch (error) {\n        console.error(`获取 ${category} 文章失败:`, error);\n      }\n    },\n    async loadArticles(category) {\n      this.category = category; // 更新当前类别\n      await this.fetchArticles(category); // 获取对应类别的文章\n    },\n    handleFileUpload(event) {\n      this.imageFile = event.target.files[0];\n    },\n    async submitArticle() {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        ElMessage.error('请先登录');\n        this.$router.push('/login');\n        return;\n      }\n\n      const formData = new FormData();\n      formData.append('title', this.title);\n      formData.append('content', this.content);\n      formData.append('category', this.category);\n      \n      if (this.imageFile) {\n        formData.append('image', this.imageFile);\n      } else if (this.imageUrl) {\n        formData.append('image_url', this.imageUrl);\n      }\n\n      try {\n        const config = {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'multipart/form-data'\n          }\n        };\n\n        if (this.editingArticleId) {\n          // 编辑模式\n          await axios.put(`${API}/auth/articles/${this.editingArticleId}`, formData, config);\n          ElMessage.success('文章修改成功');\n        } else {\n          // 新建模式\n          await axios.post(`${API}/auth/articles`, formData, config);\n          ElMessage.success('文章发布成功');\n        }\n        \n        this.resetForm();\n        this.loadArticles(this.category);\n      } catch (error) {\n        console.error('提交文章失败:', error);\n        if (error.response) {\n          if (error.response.status === 401) {\n            ElMessage.error('登录已过期，请重新登录');\n            localStorage.removeItem('token');\n            this.$router.push('/login');\n          } else {\n            ElMessage.error(error.response.data?.message || '提交失败，请重试');\n          }\n        } else {\n          ElMessage.error('网络错误，请检查网络连接');\n        }\n      }\n    },\n    editArticle(article) {\n      this.title = article.title;\n      this.content = article.content;\n      this.imageUrl = article.image_url;\n      this.category = article.category;\n      this.editingArticleId = article.id;\n    },\n    async deleteArticle(articleId) {\n      try {\n        await axios.delete(`${API}/articles/${articleId}`);\n        ElMessage.success('文章删除成功');\n        this.fetchArticles();\n      } catch (error) {\n        console.error('删除文章失败:', error);\n        ElMessage.error('删除失败，请重试');\n      }\n    },\n    resetForm() {\n      this.title = '';\n      this.content = '';\n      this.imageUrl = '';\n      this.imageFile = null;\n      this.category = 'newsList';\n      this.editingArticleId = null;\n      this.$refs.fileInput.value = '';\n    },\n    cancelEdit() {\n      this.resetForm();\n    }\n  },\n  mounted() {\n    this.fetchArticles();\n  }\n};\n</script>\n\n<style scoped>\n/* ... */\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}