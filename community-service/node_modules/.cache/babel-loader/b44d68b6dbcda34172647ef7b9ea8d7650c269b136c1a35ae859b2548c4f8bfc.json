{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport CommunityHome from '@/components/CommunityHome.vue';\nimport UserLogin from '@/components/UserLogin.vue';\nimport UserRegister from '@/components/UserRegister.vue';\nimport UserDiscover from '@/components/DiscoverPage.vue';\nimport UserProfile from '@/components/Profile.vue';\nimport NewsDetail from '@/components/NewsDetail.vue';\nimport ArticleEditor from '@/components/ArticleEditor.vue';\nimport CanteenOrder from '@/components/CanteenOrder.vue';\nimport CanteenAdmin from '@/components/CanteenAdmin.vue';\nimport OrderDetail from '@/components/OrderDetail.vue';\nimport OrderManagement from '@/components/OrderManagement.vue';\nimport { verifyAuth } from '../utils/auth';\n\n// 创建路由\nconst routes = [{\n  path: '/',\n  name: 'CommunityHome',\n  component: CommunityHome,\n  meta: {\n    requiresAuth: false\n  }\n}, {\n  path: '/login',\n  name: 'UserLogin',\n  component: UserLogin,\n  meta: {\n    requiresAuth: false\n  }\n}, {\n  path: '/register',\n  name: 'UserRegister',\n  component: UserRegister,\n  meta: {\n    requiresAuth: false\n  }\n}, {\n  path: '/profile',\n  name: 'Profile',\n  component: UserProfile,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/discover',\n  name: 'Discover',\n  component: UserDiscover,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/news/:id',\n  name: 'NewsDetail',\n  component: NewsDetail,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/articles/new',\n  name: 'ArticleEditor',\n  component: ArticleEditor,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/canteenorder',\n  name: 'CanteenOrder',\n  component: CanteenOrder,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/canteenadmin',\n  name: 'CanteenAdmin',\n  component: CanteenAdmin,\n  meta: {\n    requiresAuth: true,\n    roles: ['admin', 'super_admin']\n  }\n}, {\n  path: '/order/:orderId',\n  name: 'OrderDetail',\n  component: OrderDetail,\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/canteen/orders',\n  name: 'OrderManagement',\n  component: OrderManagement,\n  meta: {\n    requiresAuth: true,\n    roles: ['admin', 'super_admin']\n  }\n}];\n\n// 创建 router 实例\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// 全局路由守卫\nrouter.beforeEach(async (to, from, next) => {\n  // 如果路由不需要认证，直接通过\n  if (!to.meta.requiresAuth) {\n    return next();\n  }\n  try {\n    // 验证用户认证状态\n    const result = await verifyAuth();\n    if (!result.valid) {\n      // 如果验证失败，重定向到登录页\n      return next('/login');\n    }\n\n    // 如果路由需要特定角色\n    if (to.meta.roles) {\n      const userRole = localStorage.getItem('userRole');\n\n      // 如果用户角色不在允许的角色列表中\n      if (!to.meta.roles.includes(userRole)) {\n        // 可以重定向到一个\"无权限\"页面\n        return next('/unauthorized');\n      }\n    }\n\n    // 验证通过\n    next();\n  } catch (error) {\n    console.error('路由验证失败:', error);\n    next('/login');\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","CommunityHome","UserLogin","UserRegister","UserDiscover","UserProfile","NewsDetail","ArticleEditor","CanteenOrder","CanteenAdmin","OrderDetail","OrderManagement","verifyAuth","routes","path","name","component","meta","requiresAuth","roles","router","history","beforeEach","to","from","next","result","valid","userRole","localStorage","getItem","includes","error","console"],"sources":["C:/Users/拯救者/Desktop/text/community-service/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'; \nimport CommunityHome from '@/components/CommunityHome.vue';\nimport UserLogin from '@/components/UserLogin.vue';\nimport UserRegister from '@/components/UserRegister.vue';\nimport UserDiscover from '@/components/DiscoverPage.vue';\nimport UserProfile from '@/components/Profile.vue';\nimport NewsDetail from '@/components/NewsDetail.vue'; \nimport ArticleEditor from '@/components/ArticleEditor.vue'; \nimport CanteenOrder from '@/components/CanteenOrder.vue'; \nimport CanteenAdmin from '@/components/CanteenAdmin.vue';\nimport OrderDetail from '@/components/OrderDetail.vue';\nimport OrderManagement from '@/components/OrderManagement.vue';\nimport { verifyAuth } from '../utils/auth'; \n\n// 创建路由\nconst routes = [\n  { path: '/', name: 'CommunityHome', component: CommunityHome, meta: { requiresAuth: false } },\n  { path: '/login', name: 'UserLogin', component: UserLogin, meta: { requiresAuth: false } },\n  { path: '/register', name: 'UserRegister', component: UserRegister, meta: { requiresAuth: false } },\n  { path: '/profile', name: 'Profile', component: UserProfile, meta: { requiresAuth: true } },\n  { path: '/discover', name: 'Discover', component: UserDiscover, meta: { requiresAuth: true } },\n  { path: '/news/:id', name: 'NewsDetail', component: NewsDetail, meta: { requiresAuth: true } }, \n  { path: '/articles/new', name: 'ArticleEditor', component: ArticleEditor, meta: { requiresAuth: true } }, \n  { path: '/canteenorder', name: 'CanteenOrder', component: CanteenOrder, meta: { requiresAuth: true } },\n  { path: '/canteenadmin', name: 'CanteenAdmin', component: CanteenAdmin, meta: { requiresAuth: true, roles: ['admin', 'super_admin'] } },\n  { path: '/order/:orderId',name: 'OrderDetail',component: OrderDetail, meta: { requiresAuth: true } },\n  { path: '/canteen/orders', name: 'OrderManagement', component: OrderManagement, meta: { requiresAuth: true, roles: ['admin', 'super_admin'] } }\n];\n\n// 创建 router 实例\nconst router = createRouter({\n  history: createWebHistory(),\n  routes,\n});\n\n// 全局路由守卫\nrouter.beforeEach(async (to, from, next) => {\n  // 如果路由不需要认证，直接通过\n  if (!to.meta.requiresAuth) {\n    return next();\n  }\n\n  try {\n    // 验证用户认证状态\n    const result = await verifyAuth();\n    \n    if (!result.valid) {\n      // 如果验证失败，重定向到登录页\n      return next('/login');\n    }\n\n    // 如果路由需要特定角色\n    if (to.meta.roles) {\n      const userRole = localStorage.getItem('userRole');\n      \n      // 如果用户角色不在允许的角色列表中\n      if (!to.meta.roles.includes(userRole)) {\n        // 可以重定向到一个\"无权限\"页面\n        return next('/unauthorized');\n      }\n    }\n\n    // 验证通过\n    next();\n  } catch (error) {\n    console.error('路由验证失败:', error);\n    next('/login');\n  }\n})\n\nexport default router;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}