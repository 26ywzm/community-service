{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from 'axios';\nconst API = process.env.VUE_APP_API_URL;\nexport default {\n  data() {\n    return {\n      title: '',\n      content: '',\n      imageUrl: '',\n      category: 'newsList',\n      imageFile: null,\n      editingArticleId: null,\n      articles: [],\n      imageCache: new Map() // 添加图片缓存\n    };\n  },\n  methods: {\n    async fetchArticles(category) {\n      try {\n        // 检查用户角色\n        const userRole = localStorage.getItem('userRole');\n        if (userRole !== 'admin' && userRole !== 'super_admin') {\n          this.$router.push('/');\n          return;\n        }\n        const token = localStorage.getItem('authToken');\n        const headers = {\n          'Authorization': `Bearer ${token}`\n        };\n        const response = await axios.get(`${API}/articles${category ? `?category=${category}` : ''}`, {\n          headers\n        });\n        this.articles = response.data;\n        // 预加载所有图片\n        for (const article of this.articles) {\n          await this.loadImage(article);\n        }\n      } catch (error) {\n        console.error('获取文章失败:', error);\n      }\n    },\n    async loadArticles(category) {\n      this.category = category; // 更新当前类别\n      await this.fetchArticles(category); // 获取对应类别的文章\n    },\n    handleFileUpload(event) {\n      this.imageFile = event.target.files[0];\n    },\n    async submitArticle() {\n      try {\n        // 检查用户角色\n        const userRole = localStorage.getItem('userRole');\n        if (userRole !== 'admin' && userRole !== 'super_admin') {\n          this.$router.push('/');\n          return;\n        }\n        const formData = new FormData();\n        formData.append('title', this.title);\n        formData.append('content', this.content);\n        formData.append('category', this.category);\n        formData.append('image_url', this.imageUrl);\n        if (this.imageFile) {\n          formData.append('image', this.imageFile);\n        }\n        const token = localStorage.getItem('authToken');\n        const headers = {\n          'Content-Type': 'multipart/form-data',\n          'Authorization': `Bearer ${token}`\n        };\n        if (this.editingArticleId) {\n          // 编辑模式\n          await axios.put(`${API}/articles/${this.editingArticleId}`, formData, {\n            headers\n          });\n          alert('文章修改成功');\n        } else {\n          // 新建模式\n          await axios.post(`${API}/articles`, formData, {\n            headers\n          });\n          alert('文章发布成功');\n        }\n        this.resetForm();\n        this.fetchArticles();\n      } catch (error) {\n        console.error('提交文章失败:', error);\n        alert('提交失败，请重试。');\n      }\n    },\n    editArticle(article) {\n      this.title = article.title;\n      this.content = article.content;\n      this.imageUrl = article.image_url;\n      this.category = article.category;\n      this.editingArticleId = article.id;\n    },\n    async deleteArticle(articleId) {\n      try {\n        // 检查用户角色\n        const userRole = localStorage.getItem('userRole');\n        if (userRole !== 'admin' && userRole !== 'super_admin') {\n          this.$router.push('/');\n          return;\n        }\n        if (confirm('确定要删除这篇文章吗？')) {\n          const token = localStorage.getItem('authToken');\n          const headers = {\n            'Authorization': `Bearer ${token}`\n          };\n          await axios.delete(`${API}/articles/${articleId}`, {\n            headers\n          });\n          this.fetchArticles(); // 重新加载文章列表\n        }\n      } catch (error) {\n        console.error('删除文章失败:', error);\n        alert('删除失败，请重试。');\n      }\n    },\n    resetForm() {\n      this.title = '';\n      this.content = '';\n      this.imageUrl = '';\n      this.imageFile = null;\n      this.category = 'newsList';\n      this.editingArticleId = null;\n      this.$refs.fileInput.value = '';\n    },\n    cancelEdit() {\n      this.resetForm();\n    },\n    async getImageUrl(path) {\n      if (!path) return '';\n      if (path.startsWith('http')) {\n        return path;\n      }\n\n      // 检查缓存\n      if (this.imageCache.has(path)) {\n        return this.imageCache.get(path);\n      }\n      try {\n        const token = localStorage.getItem('authToken');\n        const headers = {\n          'Authorization': `Bearer ${token}`\n        };\n        const uploadPath = path.startsWith('/uploads/') ? path : `/uploads/${path}`;\n        const baseUrl = process.env.VUE_APP_BASE_URL || 'http://localhost:3000';\n        const response = await fetch(`${baseUrl}${uploadPath}`, {\n          headers\n        });\n        const blob = await response.blob();\n        const blobUrl = URL.createObjectURL(blob);\n\n        // 存入缓存\n        this.imageCache.set(path, blobUrl);\n        return blobUrl;\n      } catch (error) {\n        console.error('加载图片失败:', error);\n        return '';\n      }\n    },\n    async loadImage(article) {\n      if (!article.image_url) return;\n      article.blobUrl = await this.getImageUrl(article.image_url);\n    }\n  },\n  mounted() {\n    // 检查用户角色\n    const userRole = localStorage.getItem('userRole');\n    if (userRole !== 'admin' && userRole !== 'super_admin') {\n      this.$router.push('/');\n      return;\n    }\n    this.fetchArticles();\n  }\n};","map":{"version":3,"names":["axios","API","process","env","VUE_APP_API_URL","data","title","content","imageUrl","category","imageFile","editingArticleId","articles","imageCache","Map","methods","fetchArticles","userRole","localStorage","getItem","$router","push","token","headers","response","get","article","loadImage","error","console","loadArticles","handleFileUpload","event","target","files","submitArticle","formData","FormData","append","put","alert","post","resetForm","editArticle","image_url","id","deleteArticle","articleId","confirm","delete","$refs","fileInput","value","cancelEdit","getImageUrl","path","startsWith","has","uploadPath","baseUrl","VUE_APP_BASE_URL","fetch","blob","blobUrl","URL","createObjectURL","set","mounted"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\ArticleEditor.vue"],"sourcesContent":["<template>\n  <div class=\"article-editor\">\n    <h2>{{ editingArticleId ? \"编辑文章\" : \"编写文章\" }}</h2>\n    <form @submit.prevent=\"submitArticle\">\n      <div>\n        <label>标题：</label>\n        <input type=\"text\" v-model=\"title\" required />\n      </div>\n      <div>\n        <label>内容：</label>\n        <textarea v-model=\"content\" required></textarea>\n      </div>\n      <div>\n        <label>图片链接：</label>\n        <input type=\"text\" v-model=\"imageUrl\" />\n      </div>\n      <div>\n        <label>或上传图片：</label>\n        <input type=\"file\" ref=\"fileInput\" @change=\"handleFileUpload\" />\n      </div>\n      <div>\n        <label>选择发布位置：</label>\n        <select v-model=\"category\" required>\n          <option value=\"carousel\">轮播图</option>\n          <option value=\"hotNews\">热门新闻</option>\n          <option value=\"newsList\">新闻列表</option>\n        </select>\n      </div>\n      <button type=\"submit\">{{ editingArticleId ? \"保存修改\" : \"发布文章\" }}</button>\n      <button v-if=\"editingArticleId\" type=\"button\" @click=\"cancelEdit\">取消编辑</button>\n    </form>\n\n    <!-- 选择文章区域 -->\n    <div class=\"articles-area\">\n      <!-- 切换按钮 -->\n      <div class=\"category-buttons\">\n        <button @click=\"loadArticles('carousel')\">轮播图</button>\n        <button @click=\"loadArticles('hotNews')\">热门新闻</button>\n        <button @click=\"loadArticles('newsList')\">新闻列表</button>\n      </div>\n\n      <!-- 列表展示 -->\n      <div v-for=\"article in articles\" :key=\"article.id\" class=\"article\">\n        <h3>{{ article.title }}</h3>\n        <img v-if=\"article.image_url\" :src=\"article.blobUrl || ''\" @error=\"loadImage(article)\" :alt=\"article.title\" class=\"article-image\">\n        <p>{{ article.content }}</p>\n        <div class=\"action-buttons\">\n          <button class=\"edit\" @click=\"editArticle(article)\">修改</button>\n          <button @click=\"deleteArticle(article.id)\">删除</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nconst API = process.env.VUE_APP_API_URL;\n\nexport default {\n  data() {\n    return {\n      title: '',\n      content: '',\n      imageUrl: '',\n      category: 'newsList',\n      imageFile: null,\n      editingArticleId: null,\n      articles: [],\n      imageCache: new Map(), // 添加图片缓存\n    };\n  },\n  methods: {\n    async fetchArticles(category) {\n      try {\n        // 检查用户角色\n        const userRole = localStorage.getItem('userRole');\n        if (userRole !== 'admin' && userRole !== 'super_admin') {\n          this.$router.push('/');\n          return;\n        }\n        const token = localStorage.getItem('authToken');\n        const headers = { 'Authorization': `Bearer ${token}` };\n        const response = await axios.get(`${API}/articles${category ? `?category=${category}` : ''}`, { headers });\n        this.articles = response.data;\n        // 预加载所有图片\n        for (const article of this.articles) {\n          await this.loadImage(article);\n        }\n      } catch (error) {\n        console.error('获取文章失败:', error);\n      }\n    },\n    async loadArticles(category) {\n      this.category = category; // 更新当前类别\n      await this.fetchArticles(category); // 获取对应类别的文章\n    },\n    handleFileUpload(event) {\n      this.imageFile = event.target.files[0];\n    },\n    async submitArticle() {\n      try {\n        // 检查用户角色\n        const userRole = localStorage.getItem('userRole');\n        if (userRole !== 'admin' && userRole !== 'super_admin') {\n          this.$router.push('/');\n          return;\n        }\n        const formData = new FormData();\n        formData.append('title', this.title);\n        formData.append('content', this.content);\n        formData.append('category', this.category);\n        formData.append('image_url', this.imageUrl);\n        if (this.imageFile) {\n          formData.append('image', this.imageFile);\n        }\n\n        const token = localStorage.getItem('authToken');\n        const headers = {\n          'Content-Type': 'multipart/form-data',\n          'Authorization': `Bearer ${token}`\n        };\n\n        if (this.editingArticleId) {\n          // 编辑模式\n          await axios.put(`${API}/articles/${this.editingArticleId}`, formData, { headers });\n          alert('文章修改成功');\n        } else {\n          // 新建模式\n          await axios.post(`${API}/articles`, formData, { headers });\n          alert('文章发布成功');\n        }\n        this.resetForm();\n        this.fetchArticles();\n      } catch (error) {\n        console.error('提交文章失败:', error);\n        alert('提交失败，请重试。');\n      }\n    },\n    editArticle(article) {\n      this.title = article.title;\n      this.content = article.content;\n      this.imageUrl = article.image_url;\n      this.category = article.category;\n      this.editingArticleId = article.id;\n    },\n    async deleteArticle(articleId) {\n      try {\n        // 检查用户角色\n        const userRole = localStorage.getItem('userRole');\n        if (userRole !== 'admin' && userRole !== 'super_admin') {\n          this.$router.push('/');\n          return;\n        }\n        if (confirm('确定要删除这篇文章吗？')) {\n          const token = localStorage.getItem('authToken');\n          const headers = { 'Authorization': `Bearer ${token}` };\n          await axios.delete(`${API}/articles/${articleId}`, { headers });\n          this.fetchArticles(); // 重新加载文章列表\n        }\n      } catch (error) {\n        console.error('删除文章失败:', error);\n        alert('删除失败，请重试。');\n      }\n    },\n    resetForm() {\n      this.title = '';\n      this.content = '';\n      this.imageUrl = '';\n      this.imageFile = null;\n      this.category = 'newsList';\n      this.editingArticleId = null;\n      this.$refs.fileInput.value = '';\n    },\n    cancelEdit() {\n      this.resetForm();\n    },\n    async getImageUrl(path) {\n      if (!path) return ''; \n      if (path.startsWith('http')) {\n        return path;\n      }\n      \n      // 检查缓存\n      if (this.imageCache.has(path)) {\n        return this.imageCache.get(path);\n      }\n\n      try {\n        const token = localStorage.getItem('authToken');\n        const headers = { 'Authorization': `Bearer ${token}` };\n        const uploadPath = path.startsWith('/uploads/') ? path : `/uploads/${path}`;\n        const baseUrl = process.env.VUE_APP_BASE_URL || 'http://localhost:3000';\n        const response = await fetch(`${baseUrl}${uploadPath}`, { headers });\n        const blob = await response.blob();\n        const blobUrl = URL.createObjectURL(blob);\n        \n        // 存入缓存\n        this.imageCache.set(path, blobUrl);\n        \n        return blobUrl;\n      } catch (error) {\n        console.error('加载图片失败:', error);\n        return '';\n      }\n    },\n    async loadImage(article) {\n      if (!article.image_url) return;\n      article.blobUrl = await this.getImageUrl(article.image_url);\n    },\n  },\n  mounted() {\n    // 检查用户角色\n    const userRole = localStorage.getItem('userRole');\n    if (userRole !== 'admin' && userRole !== 'super_admin') {\n      this.$router.push('/');\n      return;\n    }\n    this.fetchArticles();\n  }\n};\n</script>\n\n<style scoped>\n.article-image {\n  max-width: 100%;\n  height: auto;\n  margin: 10px 0;\n}\n.article-editor {\n  padding: 20px;\n  max-width: 600px;\n  margin: 0 auto;\n  background-color: #ffffff;\n  border-radius: 10px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n}\n\nh2 {\n  text-align: center;\n  color: #333;\n  margin-bottom: 20px;\n}\n\n/* 新增区域样式 */\n.article-area {\n  margin-bottom: 30px;\n}\n\n.category-buttons {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n}\n\n.category-buttons button {\n  flex: 1;\n  padding: 10px;\n  margin-right: 10px;\n  background-color: #42b983;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.category-buttons button:hover {\n  background-color: #369d73;\n}\n\n.category-buttons button:last-child {\n  margin-right: 0; /* 去掉最后一个按钮的右边距 */\n}\n\n/* 修改按钮和删除按钮的样式 */\n.article .action-buttons {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 10px; /* 上方的间距 */\n}\n\n.action-buttons button {\n  flex: 1; /* 使按钮宽度均匀 */\n  padding: 5px; /* 按钮变小 */\n  margin-right: 5px; /* 按钮之间的间距 */\n  background-color: #e74c3c; /* 删除按钮颜色 */\n  border: none;\n  border-radius: 5px;\n  color: white;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.action-buttons button:hover {\n  background-color: #c0392b; /* 删除按钮悬停颜色 */\n}\n\n.action-buttons button.edit {\n  background-color: #42b983; /* 修改按钮颜色 */\n}\n\n.action-buttons button.edit:hover {\n  background-color: #369d73; /* 修改按钮悬停颜色 */\n}\n\n.form-group {\n  margin-bottom: 60px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 8px;\n  font-weight: bold;\n  color: #555;\n}\n\n.form-group label.required::after {\n  content: '*';\n  color: #e74c3c;\n  margin-left: 5px;\n}\n\ninput[type=\"text\"],\ntextarea,\nselect {\n  width: 100%;\n  padding: 10px;\n  font-size: 16px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  box-sizing: border-box;\n  transition: border-color 0.3s ease;\n}\n\ninput[type=\"text\"]:focus,\ntextarea:focus,\nselect:focus {\n  border-color: #42b983;\n  outline: none;\n}\n\ntextarea {\n  resize: vertical;\n  height: 120px;\n}\n\nbutton {\n  width: 100%;\n  background-color: #42b983;\n  color: white;\n  border: none;\n  padding: 12px 0;\n  border-radius: 5px;\n  font-size: 16px;\n  font-weight: bold;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  margin-top: 15px;\n}\n\nbutton:disabled {\n  background-color: #bdc3c7;\n  cursor: not-allowed;\n}\n\nbutton:not(:disabled):hover {\n  background-color: #369d73;\n}\n\n@media (max-width: 768px) {\n  .article-editor {\n    padding: 15px;\n  }\n\n  button {\n    font-size: 14px;\n    padding: 10px 0;\n    margin-top: 15px;\n  }\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}