{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { handleApiError } from '../utils/errorHandler';\nconst API = process.env.VUE_APP_API_URL;\nexport default {\n  name: 'UserProfile',\n  data() {\n    return {\n      isLoggedIn: !!localStorage.getItem('authToken'),\n      userInfo: {\n        username: '',\n        email: '',\n        role: '',\n        balance: 0\n      },\n      editMode: false,\n      currentPassword: '',\n      newPassword: '',\n      file: null,\n      loading: true\n    };\n  },\n  async created() {\n    // 从 localStorage 获取基本信息\n    const token = localStorage.getItem('authToken');\n    const role = localStorage.getItem('userRole');\n    const username = localStorage.getItem('username');\n    const email = localStorage.getItem('email');\n    if (!token) {\n      this.isLoggedIn = false;\n    } else {\n      // 立即设置基本信息\n      this.userInfo = {\n        username: username || '',\n        email: email || '',\n        role: role || ''\n      };\n\n      // 异步加载完整用户信息\n      try {\n        await this.fetchUserProfile();\n      } catch (error) {\n        console.error('Failed to fetch user profile:', error);\n        if (error.response && error.response.status === 401) {\n          this.handleUnauthorized();\n        }\n      }\n    }\n  },\n  methods: {\n    async fetchUserProfile() {\n      this.loading = true;\n      try {\n        const userId = localStorage.getItem('userId');\n        const token = localStorage.getItem('authToken');\n        if (!userId || !token) {\n          throw new Error('Missing user credentials');\n        }\n\n        // 打印请求信息以便调试\n        console.log('Request details:', {\n          url: `${API}/profile`,\n          userId,\n          token: token ? `${token.substring(0, 10)}...` : 'null',\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const response = await axios.get(`${API}/profile`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log('Profile response:', response.data);\n\n        // 更新用户信息\n        this.userInfo = {\n          ...this.userInfo,\n          ...response.data\n        };\n      } catch (error) {\n        console.error('Error fetching user profile:', error);\n        if (error.response) {\n          console.error('Error response:', {\n            status: error.response.status,\n            data: error.response.data,\n            headers: error.response.headers\n          });\n        }\n        if (error.response && error.response.status === 404) {\n          console.log('User profile not found, using local storage data');\n          // 如果获取失败，使用本地存储的基本信息\n          this.userInfo = {\n            username: localStorage.getItem('username') || '',\n            email: localStorage.getItem('email') || '',\n            role: localStorage.getItem('userRole') || ''\n          };\n        } else if (error.response && error.response.status === 500) {\n          console.error('Server error details:', error.response.data);\n          // 服务器错误时也使用本地存储的数据\n          this.userInfo = {\n            username: localStorage.getItem('username') || '',\n            email: localStorage.getItem('email') || '',\n            role: localStorage.getItem('userRole') || ''\n          };\n        } else {\n          // 如果是认证错误，清除登录状态\n          if (error.response && error.response.status === 401) {\n            this.handleUnauthorized();\n          }\n          console.error('Failed to fetch profile:', error.message);\n        }\n      } finally {\n        this.loading = false;\n      }\n    },\n    handleUnauthorized() {\n      // 清除所有认证信息\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('userRole');\n      localStorage.removeItem('username');\n      localStorage.removeItem('userId');\n      localStorage.removeItem('email');\n      this.isLoggedIn = false;\n    },\n    async updateProfile() {\n      try {\n        const formData = new FormData();\n        formData.append('username', this.userInfo.username);\n        formData.append('email', this.userInfo.email);\n        if (this.currentPassword) {\n          formData.append('currentPassword', this.currentPassword);\n          formData.append('newPassword', this.newPassword);\n        }\n        if (this.file) {\n          formData.append('avatar', this.file);\n        }\n        await axios.put(`${API}/me`, formData, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        alert('个人信息更新成功！');\n        this.editMode = false;\n        this.currentPassword = '';\n        this.newPassword = '';\n        this.file = null;\n        await this.fetchUserProfile();\n      } catch (error) {\n        handleApiError(error);\n      }\n    },\n    handleFileUpload(event) {\n      this.file = event.target.files[0];\n    },\n    goToLogin() {\n      this.$router.push('/login');\n    },\n    goToRegister() {\n      this.$router.push('/register');\n    },\n    async logout() {\n      localStorage.removeItem('authToken');\n      this.isLoggedIn = false;\n      this.userInfo = {\n        username: '',\n        email: '',\n        role: '',\n        balance: 0\n      };\n    },\n    cancelEdit() {\n      this.editMode = false;\n      this.currentPassword = '';\n      this.newPassword = '';\n      this.file = null;\n      this.fetchUserProfile();\n    }\n  }\n};","map":{"version":3,"names":["axios","handleApiError","API","process","env","VUE_APP_API_URL","name","data","isLoggedIn","localStorage","getItem","userInfo","username","email","role","balance","editMode","currentPassword","newPassword","file","loading","created","token","fetchUserProfile","error","console","response","status","handleUnauthorized","methods","userId","Error","log","url","substring","headers","Authorization","get","message","removeItem","updateProfile","formData","FormData","append","put","alert","handleFileUpload","event","target","files","goToLogin","$router","push","goToRegister","logout","cancelEdit"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\Profile.vue"],"sourcesContent":["<template>\n  <div class=\"profile-container\">\n    <h2>我的账户</h2>\n\n    <div v-if=\"!isLoggedIn\" class=\"auth-section\">\n      <p>请先登录或注册以查看您的个人信息。</p>\n      <button class=\"auth-button\" @click=\"goToLogin\">登录</button>\n      <button class=\"auth-button register-button\" @click=\"goToRegister\">注册</button>\n    </div>\n\n    <div v-else-if=\"loading\" class=\"loading-section\">\n      <p>加载中...</p>\n    </div>\n\n    <div v-else class=\"profile-section\">\n      <h3>欢迎, {{ userInfo.username }}</h3>\n      <p>邮箱: {{ userInfo.email }}</p>\n\n      <!-- 编辑按钮 -->\n      <button class=\"edit-button\" @click=\"editMode = true\" v-if=\"!editMode\">编辑信息</button>\n\n      <!-- 编辑表单 -->\n      <div v-if=\"editMode\">\n        <div class=\"form-group\">\n          <label>用户名：</label>\n          <input type=\"text\" v-model=\"userInfo.username\" />\n        </div>\n        <div class=\"form-group\">\n          <label>邮箱：</label>\n          <input type=\"email\" v-model=\"userInfo.email\" />\n        </div>\n        <div class=\"form-group\">\n          <label>当前密码（必填）：</label>\n          <input type=\"password\" v-model=\"currentPassword\" />\n        </div>\n        <div class=\"form-group\">\n          <label>新密码（可选）：</label>\n          <input type=\"password\" v-model=\"newPassword\" />\n        </div>\n        <div class=\"form-group\">\n          <label>头像：</label>\n          <input type=\"file\" @change=\"handleFileUpload\" />\n        </div>\n        <div class=\"button-group\">\n          <button class=\"save-button\" @click=\"updateProfile\">保存</button>\n          <button class=\"cancel-button\" @click=\"cancelEdit\">取消</button>\n        </div>\n      </div>\n\n      <button class=\"logout-button\" @click=\"logout\">退出登录</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { handleApiError } from '../utils/errorHandler';\nconst API = process.env.VUE_APP_API_URL;\n\nexport default {\n  name: 'UserProfile',\n  data() {\n    return {\n      isLoggedIn: !!localStorage.getItem('authToken'),\n      userInfo: {\n        username: '',\n        email: '',\n        role: '',\n        balance: 0\n      },\n      editMode: false,\n      currentPassword: '',\n      newPassword: '',\n      file: null,\n      loading: true\n    };\n  },\n  async created() {\n    // 从 localStorage 获取基本信息\n    const token = localStorage.getItem('authToken');\n    const role = localStorage.getItem('userRole');\n    const username = localStorage.getItem('username');\n    const email = localStorage.getItem('email');\n\n    if (!token) {\n      this.isLoggedIn = false;\n    } else {\n      // 立即设置基本信息\n      this.userInfo = {\n        username: username || '',\n        email: email || '',\n        role: role || ''\n      };\n\n      // 异步加载完整用户信息\n      try {\n        await this.fetchUserProfile();\n      } catch (error) {\n        console.error('Failed to fetch user profile:', error);\n        if (error.response && error.response.status === 401) {\n          this.handleUnauthorized();\n        }\n      }\n    }\n  },\n  methods: {\n    async fetchUserProfile() {\n      this.loading = true;\n      try {\n        const userId = localStorage.getItem('userId');\n        const token = localStorage.getItem('authToken');\n        \n        if (!userId || !token) {\n          throw new Error('Missing user credentials');\n        }\n\n        // 打印请求信息以便调试\n        console.log('Request details:', {\n          url: `${API}/profile`,\n          userId,\n          token: token ? `${token.substring(0, 10)}...` : 'null',\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n\n        const response = await axios.get(`${API}/profile`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        \n        console.log('Profile response:', response.data);\n        \n        // 更新用户信息\n        this.userInfo = {\n          ...this.userInfo,\n          ...response.data\n        };\n      } catch (error) {\n        console.error('Error fetching user profile:', error);\n        if (error.response) {\n          console.error('Error response:', {\n            status: error.response.status,\n            data: error.response.data,\n            headers: error.response.headers\n          });\n        }\n        \n        if (error.response && error.response.status === 404) {\n          console.log('User profile not found, using local storage data');\n          // 如果获取失败，使用本地存储的基本信息\n          this.userInfo = {\n            username: localStorage.getItem('username') || '',\n            email: localStorage.getItem('email') || '',\n            role: localStorage.getItem('userRole') || ''\n          };\n        } else if (error.response && error.response.status === 500) {\n          console.error('Server error details:', error.response.data);\n          // 服务器错误时也使用本地存储的数据\n          this.userInfo = {\n            username: localStorage.getItem('username') || '',\n            email: localStorage.getItem('email') || '',\n            role: localStorage.getItem('userRole') || ''\n          };\n        } else {\n          // 如果是认证错误，清除登录状态\n          if (error.response && error.response.status === 401) {\n            this.handleUnauthorized();\n          }\n          console.error('Failed to fetch profile:', error.message);\n        }\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    handleUnauthorized() {\n      // 清除所有认证信息\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('userRole');\n      localStorage.removeItem('username');\n      localStorage.removeItem('userId');\n      localStorage.removeItem('email');\n      \n      this.isLoggedIn = false;\n    },\n\n    async updateProfile() {\n      try {\n        const formData = new FormData();\n        formData.append('username', this.userInfo.username);\n        formData.append('email', this.userInfo.email);\n        if (this.currentPassword) {\n          formData.append('currentPassword', this.currentPassword);\n          formData.append('newPassword', this.newPassword);\n        }\n        if (this.file) {\n          formData.append('avatar', this.file);\n        }\n\n        await axios.put(`${API}/me`, formData, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n\n        alert('个人信息更新成功！');\n        this.editMode = false;\n        this.currentPassword = '';\n        this.newPassword = '';\n        this.file = null;\n        await this.fetchUserProfile();\n      } catch (error) {\n        handleApiError(error);\n      }\n    },\n    handleFileUpload(event) {\n      this.file = event.target.files[0];\n    },\n    goToLogin() {\n      this.$router.push('/login');\n    },\n    goToRegister() {\n      this.$router.push('/register');\n    },\n    async logout() {\n      localStorage.removeItem('authToken');\n      this.isLoggedIn = false;\n      this.userInfo = {\n        username: '',\n        email: '',\n        role: '',\n        balance: 0\n      };\n    },\n    cancelEdit() {\n      this.editMode = false;\n      this.currentPassword = '';\n      this.newPassword = '';\n      this.file = null;\n      this.fetchUserProfile();\n    }\n  }\n};\n</script>\n\n<style scoped>\n.profile-container {\n  max-width: 600px;\n  margin: 20px auto;\n  padding: 20px;\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.loading-section {\n  text-align: center;\n  padding: 20px;\n  color: #666;\n}\n\n.loading-section p {\n  margin: 0;\n  font-size: 16px;\n}\n\n.profile-section {\n  padding: 20px;\n}\n\n.auth-section {\n  text-align: center;\n  padding: 20px;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 5px;\n  color: #333;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  box-sizing: border-box;\n}\n\n.button-group {\n  display: flex;\n  gap: 10px;\n  margin-top: 20px;\n}\n\n.edit-button,\n.save-button,\n.cancel-button,\n.auth-button,\n.logout-button {\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.3s;\n}\n\n.edit-button {\n  background-color: #4CAF50;\n  color: white;\n}\n\n.save-button {\n  background-color: #2196F3;\n  color: white;\n}\n\n.cancel-button {\n  background-color: #f44336;\n  color: white;\n}\n\n.auth-button {\n  background-color: #2196F3;\n  color: white;\n  margin: 0 5px;\n}\n\n.register-button {\n  background-color: #4CAF50;\n}\n\n.logout-button {\n  background-color: #f44336;\n  color: white;\n  margin-top: 20px;\n}\n\n.edit-button:hover,\n.save-button:hover,\n.cancel-button:hover,\n.auth-button:hover,\n.logout-button:hover {\n  opacity: 0.9;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}