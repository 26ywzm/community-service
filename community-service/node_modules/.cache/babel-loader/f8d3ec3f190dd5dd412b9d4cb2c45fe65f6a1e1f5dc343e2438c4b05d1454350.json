{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nconst API = process.env.VUE_APP_API_URL;\nimport axios from 'axios';\nexport default {\n  name: 'UserRegister',\n  data() {\n    return {\n      username: '',\n      // 添加用户名字段\n      email: '',\n      // 使用 email 而不是 username\n      password: '',\n      confirmPassword: '' // 确认密码\n    };\n  },\n  methods: {\n    async register() {\n      // 确认密码匹配\n      if (this.password !== this.confirmPassword) {\n        return alert('密码和确认密码不匹配。');\n      }\n      try {\n        const response = await axios.post('http://localhost:3000/api/auth/register', {\n          username: this.username,\n          // 添加用户名到请求体\n          email: this.email,\n          // 发送 email 和 password\n          password: this.password\n        });\n        alert(response.data.message);\n        // 注册成功后的操作，如跳转到登录页面\n        this.$router.push('/login'); // 可选：注册成功后跳转到登录页面\n      } catch (error) {\n        // 提供更详细的错误信息\n        if (error.response && error.response.data && error.response.data.message) {\n          alert(error.response.data.message);\n        } else {\n          alert('注册失败，请重试。');\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["API","process","env","VUE_APP_API_URL","axios","name","data","username","email","password","confirmPassword","methods","register","alert","response","post","message","$router","push","error"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\UserRegister.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-container\">\r\n    <h2>用户注册</h2>\r\n    <form @submit.prevent=\"register\">\r\n      <div class=\"form-group\">\r\n        <label>用户名：</label>\r\n        <input type=\"text\" v-model=\"username\" required />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>邮箱：</label>\r\n        <input type=\"email\" v-model=\"email\" required />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>密码：</label>\r\n        <input type=\"password\" v-model=\"password\" required />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>确认密码：</label>\r\n        <input type=\"password\" v-model=\"confirmPassword\" required />\r\n      </div>\r\n      <button type=\"submit\" class=\"register-button\">注册</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nconst API = process.env.VUE_APP_API_URL;\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'UserRegister',\r\n  data() {\r\n    return {\r\n      username: '',         // 添加用户名字段\r\n      email: '',            // 使用 email 而不是 username\r\n      password: '',\r\n      confirmPassword: '',  // 确认密码\r\n    };\r\n  },\r\n  methods: {\r\n    async register() {\r\n      // 确认密码匹配\r\n      if (this.password !== this.confirmPassword) {\r\n        return alert('密码和确认密码不匹配。');\r\n      }\r\n\r\n      try {\r\n        const response = await axios.post('http://localhost:3000/api/auth/register', {\r\n          username: this.username, // 添加用户名到请求体\r\n          email: this.email,       // 发送 email 和 password\r\n          password: this.password,\r\n        });\r\n        alert(response.data.message);\r\n        // 注册成功后的操作，如跳转到登录页面\r\n        this.$router.push('/login'); // 可选：注册成功后跳转到登录页面\r\n      } catch (error) {\r\n        // 提供更详细的错误信息\r\n        if (error.response && error.response.data && error.response.data.message) {\r\n          alert(error.response.data.message);\r\n        } else {\r\n          alert('注册失败，请重试。');\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 基本样式，您可以根据需要进行修改 */\r\n.register-container {\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  background-color: #f5f5f5;\r\n  border-radius: 10px;\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  padding: 8px;\r\n  box-sizing: border-box;\r\n  border-radius: 4px;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\n.register-button {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.register-button:hover {\r\n  background-color: #45a049;\r\n}\r\n</style>\r\n"],"mappings":";AA0BA,MAAMA,GAAE,GAAIC,OAAO,CAACC,GAAG,CAACC,eAAe;AACvC,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MAAU;MACtBC,KAAK,EAAE,EAAE;MAAa;MACtBC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,EAAE,CAAG;IACxB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,QAAQA,CAAA,EAAG;MACf;MACA,IAAI,IAAI,CAACH,QAAO,KAAM,IAAI,CAACC,eAAe,EAAE;QAC1C,OAAOG,KAAK,CAAC,aAAa,CAAC;MAC7B;MAEA,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMV,KAAK,CAACW,IAAI,CAAC,yCAAyC,EAAE;UAC3ER,QAAQ,EAAE,IAAI,CAACA,QAAQ;UAAE;UACzBC,KAAK,EAAE,IAAI,CAACA,KAAK;UAAQ;UACzBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QACFI,KAAK,CAACC,QAAQ,CAACR,IAAI,CAACU,OAAO,CAAC;QAC5B;QACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC,EAAE;MAC/B,EAAE,OAAOC,KAAK,EAAE;QACd;QACA,IAAIA,KAAK,CAACL,QAAO,IAAKK,KAAK,CAACL,QAAQ,CAACR,IAAG,IAAKa,KAAK,CAACL,QAAQ,CAACR,IAAI,CAACU,OAAO,EAAE;UACxEH,KAAK,CAACM,KAAK,CAACL,QAAQ,CAACR,IAAI,CAACU,OAAO,CAAC;QACpC,OAAO;UACLH,KAAK,CAAC,WAAW,CAAC;QACpB;MACF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}