{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"profile-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"auth-section\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"loading-section\"\n};\nconst _hoisted_4 = {\n  key: 2,\n  class: \"profile-section\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_6 = {\n  key: 1,\n  class: \"success-message\"\n};\nconst _hoisted_7 = {\n  key: 3,\n  class: \"edit-form\"\n};\nconst _hoisted_8 = {\n  class: \"form-group\"\n};\nconst _hoisted_9 = {\n  class: \"form-group\"\n};\nconst _hoisted_10 = {\n  class: \"form-group\"\n};\nconst _hoisted_11 = {\n  class: \"form-group\"\n};\nconst _hoisted_12 = {\n  class: \"form-group\"\n};\nconst _hoisted_13 = {\n  class: \"button-group\"\n};\nconst _hoisted_14 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[19] || (_cache[19] = _createElementVNode(\"h2\", null, \"我的账户\", -1 /* HOISTED */)), !$data.isLoggedIn ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_cache[12] || (_cache[12] = _createElementVNode(\"p\", null, \"请先登录或注册以查看您的个人信息。\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    class: \"auth-button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.goToLogin && $options.goToLogin(...args))\n  }, \"登录\"), _createElementVNode(\"button\", {\n    class: \"auth-button register-button\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.goToRegister && $options.goToRegister(...args))\n  }, \"注册\")])) : $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _cache[13] || (_cache[13] = [_createElementVNode(\"p\", null, \"加载中...\", -1 /* HOISTED */)]))) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [$data.loadError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createTextVNode(_toDisplayString($data.loadError) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.retryLoad && $options.retryLoad(...args)),\n    class: \"retry-button\"\n  }, \"重试\")])) : _createCommentVNode(\"v-if\", true), $data.updateSuccess ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _toDisplayString($data.updateSuccess), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"h3\", null, \"欢迎, \" + _toDisplayString($data.userInfo.username), 1 /* TEXT */), _createElementVNode(\"p\", null, \"邮箱: \" + _toDisplayString($data.userInfo.email), 1 /* TEXT */), _createElementVNode(\"p\", null, \"角色: \" + _toDisplayString($options.formatRole($data.userInfo.role)), 1 /* TEXT */), _createCommentVNode(\" 编辑按钮 \"), !$data.editMode ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 2,\n    class: \"edit-button\",\n    onClick: _cache[3] || (_cache[3] = $event => $data.editMode = true)\n  }, \"编辑信息\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 编辑表单 \"), $data.editMode ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_cache[14] || (_cache[14] = _createElementVNode(\"label\", null, \"用户名：\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.userInfo.username = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.userInfo.username]])]), _createElementVNode(\"div\", _hoisted_9, [_cache[15] || (_cache[15] = _createElementVNode(\"label\", null, \"邮箱：\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.userInfo.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.userInfo.email]])]), _createElementVNode(\"div\", _hoisted_10, [_cache[16] || (_cache[16] = _createElementVNode(\"label\", null, \"当前密码（必填）：\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.currentPassword = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.currentPassword]])]), _createElementVNode(\"div\", _hoisted_11, [_cache[17] || (_cache[17] = _createElementVNode(\"label\", null, \"新密码（可选）：\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.newPassword = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPassword]])]), _createElementVNode(\"div\", _hoisted_12, [_cache[18] || (_cache[18] = _createElementVNode(\"label\", null, \"头像：\", -1 /* HOISTED */)), _createElementVNode(\"input\", {\n    type: \"file\",\n    onChange: _cache[8] || (_cache[8] = (...args) => $options.handleFileUpload && $options.handleFileUpload(...args)),\n    accept: \"image/*\"\n  }, null, 32 /* NEED_HYDRATION */)]), _createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"button\", {\n    class: \"save-button\",\n    onClick: _cache[9] || (_cache[9] = (...args) => $options.updateProfile && $options.updateProfile(...args)),\n    disabled: $data.loading\n  }, _toDisplayString($data.loading ? '保存中...' : '保存'), 9 /* TEXT, PROPS */, _hoisted_14), _createElementVNode(\"button\", {\n    class: \"cancel-button\",\n    onClick: _cache[10] || (_cache[10] = (...args) => $options.cancelEdit && $options.cancelEdit(...args))\n  }, \"取消\")])])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    class: \"logout-button\",\n    onClick: _cache[11] || (_cache[11] = (...args) => $options.logout && $options.logout(...args))\n  }, \"退出登录\")]))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$data","isLoggedIn","_hoisted_2","onClick","_cache","args","$options","goToLogin","goToRegister","loading","_hoisted_3","_hoisted_4","loadError","_hoisted_5","_createTextVNode","_toDisplayString","retryLoad","_createCommentVNode","updateSuccess","_hoisted_6","userInfo","username","email","formatRole","role","editMode","$event","_hoisted_7","_hoisted_8","type","_hoisted_9","_hoisted_10","currentPassword","_hoisted_11","newPassword","_hoisted_12","onChange","handleFileUpload","accept","_hoisted_13","updateProfile","disabled","_hoisted_14","cancelEdit","logout"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\Profile.vue"],"sourcesContent":["<template>\n  <div class=\"profile-container\">\n    <h2>我的账户</h2>\n\n    <div v-if=\"!isLoggedIn\" class=\"auth-section\">\n      <p>请先登录或注册以查看您的个人信息。</p>\n      <button class=\"auth-button\" @click=\"goToLogin\">登录</button>\n      <button class=\"auth-button register-button\" @click=\"goToRegister\">注册</button>\n    </div>\n\n    <div v-else-if=\"loading\" class=\"loading-section\">\n      <p>加载中...</p>\n    </div>\n\n    <div v-else class=\"profile-section\">\n      <div v-if=\"loadError\" class=\"error-message\">\n        {{ loadError }}\n        <button @click=\"retryLoad\" class=\"retry-button\">重试</button>\n      </div>\n\n      <div v-if=\"updateSuccess\" class=\"success-message\">\n        {{ updateSuccess }}\n      </div>\n\n      <h3>欢迎, {{ userInfo.username }}</h3>\n      <p>邮箱: {{ userInfo.email }}</p>\n      <p>角色: {{ formatRole(userInfo.role) }}</p>\n\n      <!-- 编辑按钮 -->\n      <button class=\"edit-button\" @click=\"editMode = true\" v-if=\"!editMode\">编辑信息</button>\n\n      <!-- 编辑表单 -->\n      <div v-if=\"editMode\" class=\"edit-form\">\n        <div class=\"form-group\">\n          <label>用户名：</label>\n          <input type=\"text\" v-model=\"userInfo.username\" />\n        </div>\n        <div class=\"form-group\">\n          <label>邮箱：</label>\n          <input type=\"email\" v-model=\"userInfo.email\" />\n        </div>\n        <div class=\"form-group\">\n          <label>当前密码（必填）：</label>\n          <input type=\"password\" v-model=\"currentPassword\" />\n        </div>\n        <div class=\"form-group\">\n          <label>新密码（可选）：</label>\n          <input type=\"password\" v-model=\"newPassword\" />\n        </div>\n        <div class=\"form-group\">\n          <label>头像：</label>\n          <input type=\"file\" @change=\"handleFileUpload\" accept=\"image/*\" />\n        </div>\n        <div class=\"button-group\">\n          <button class=\"save-button\" @click=\"updateProfile\" :disabled=\"loading\">\n            {{ loading ? '保存中...' : '保存' }}\n          </button>\n          <button class=\"cancel-button\" @click=\"cancelEdit\">取消</button>\n        </div>\n      </div>\n\n      <button class=\"logout-button\" @click=\"logout\">退出登录</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { handleApiError } from '../utils/errorHandler';\nconst API = process.env.VUE_APP_API_URL;\n\nexport default {\n  name: 'UserProfile',\n  data() {\n    return {\n      isLoggedIn: !!localStorage.getItem('authToken'),\n      userInfo: {\n        username: '',\n        email: '',\n        role: '',\n        balance: 0\n      },\n      editMode: false,\n      currentPassword: '',\n      newPassword: '',\n      file: null,\n      loading: false,\n      loadError: '',\n      updateSuccess: ''\n    };\n  },\n  async created() {\n    // 从 localStorage 获取基本信息\n    const token = localStorage.getItem('authToken');\n    const role = localStorage.getItem('userRole');\n    const username = localStorage.getItem('username');\n    const email = localStorage.getItem('email');\n\n    if (!token) {\n      this.isLoggedIn = false;\n    } else {\n      // 立即设置基本信息\n      this.userInfo = {\n        username: username || '',\n        email: email || '',\n        role: role || ''\n      };\n\n      // 异步加载完整用户信息\n      try {\n        await this.fetchUserProfile();\n      } catch (error) {\n        console.error('Failed to fetch user profile:', error);\n        if (error.response && error.response.status === 401) {\n          this.handleUnauthorized();\n        }\n      }\n    }\n  },\n  methods: {\n    formatRole(role) {\n      const roleMap = {\n        'super_admin': '超级管理员',\n        'admin': '管理员',\n        'user': '普通用户'\n      };\n      return roleMap[role] || role;\n    },\n\n    async retryLoad() {\n      this.loadError = '';\n      await this.fetchUserProfile();\n    },\n\n    async fetchUserProfile() {\n      this.loading = true;\n      this.loadError = '';\n      try {\n        const token = localStorage.getItem('authToken');\n        \n        if (!token) {\n          console.warn('No auth token found, using local storage data');\n          this.useLocalStorageData();\n          return;\n        }\n\n        const requestConfig = {\n          method: 'get',\n          url: `${API}/me`,\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        };\n\n        const response = await axios(requestConfig);\n        // console.log('Profile response:', {\n        //   status: response.status,\n        //   data: response.data\n        // });\n\n        if (response.data && response.data.user) {\n          this.userInfo = response.data.user;\n        } else if (response.data) {\n          this.userInfo = response.data;\n        } else {\n          throw new Error('Invalid response format');\n        }\n\n      } catch (error) {\n        console.error('Error fetching user profile:', error);\n        if (error.response) {\n          if (error.response.status === 401) {\n            this.handleUnauthorized();\n            return;\n          }\n          this.loadError = `加载失败: ${error.response.data.message || '服务器错误'}`;\n        } else {\n          this.loadError = '网络错误，请检查网络连接';\n        }\n        this.useLocalStorageData();\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    useLocalStorageData() {\n      this.userInfo = {\n        username: localStorage.getItem('username') || '',\n        email: localStorage.getItem('email') || '',\n        role: localStorage.getItem('userRole') || ''\n      };\n    },\n\n    handleUnauthorized() {\n      // 清除所有认证信息\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('userRole');\n      localStorage.removeItem('username');\n      localStorage.removeItem('userId');\n      localStorage.removeItem('email');\n      \n      this.isLoggedIn = false;\n    },\n\n    async updateProfile() {\n      this.loading = true;\n      this.updateSuccess = '';\n      try {\n        const formData = new FormData();\n        formData.append('username', this.userInfo.username);\n        formData.append('email', this.userInfo.email);\n        if (this.currentPassword) {\n          formData.append('currentPassword', this.currentPassword);\n          if (this.newPassword) {\n            formData.append('newPassword', this.newPassword);\n          }\n        }\n        if (this.file) {\n          formData.append('avatar', this.file);\n        }\n\n        await axios.put(`${API}/me`, formData, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n\n        this.updateSuccess = '个人信息更新成功！';\n        this.editMode = false;\n        this.currentPassword = '';\n        this.newPassword = '';\n        this.file = null;\n        await this.fetchUserProfile();\n      } catch (error) {\n        handleApiError(error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    handleFileUpload(event) {\n      this.file = event.target.files[0];\n    },\n    goToLogin() {\n      this.$router.push('/login');\n    },\n    goToRegister() {\n      this.$router.push('/register');\n    },\n    async logout() {\n      localStorage.removeItem('authToken');\n      this.isLoggedIn = false;\n      this.userInfo = {\n        username: '',\n        email: '',\n        role: '',\n        balance: 0\n      };\n    },\n    cancelEdit() {\n      this.editMode = false;\n      this.currentPassword = '';\n      this.newPassword = '';\n      this.file = null;\n      this.fetchUserProfile();\n    }\n  }\n};\n</script>\n\n<style scoped>\n.profile-container {\n  max-width: 600px;\n  margin: 20px auto;\n  padding: 20px;\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.loading-section {\n  text-align: center;\n  padding: 20px;\n  color: #666;\n}\n\n.loading-section p {\n  margin: 0;\n  font-size: 16px;\n}\n\n.profile-section {\n  padding: 20px;\n}\n\n.auth-section {\n  text-align: center;\n  padding: 20px;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 5px;\n  color: #333;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  box-sizing: border-box;\n}\n\n.button-group {\n  display: flex;\n  gap: 10px;\n  margin-top: 20px;\n}\n\n.edit-button,\n.save-button,\n.cancel-button,\n.auth-button,\n.logout-button {\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.3s;\n}\n\n.edit-button {\n  background-color: #4CAF50;\n  color: white;\n}\n\n.save-button {\n  background-color: #2196F3;\n  color: white;\n}\n\n.cancel-button {\n  background-color: #f44336;\n  color: white;\n}\n\n.auth-button {\n  background-color: #2196F3;\n  color: white;\n  margin: 0 5px;\n}\n\n.register-button {\n  background-color: #4CAF50;\n}\n\n.logout-button {\n  background-color: #f44336;\n  color: white;\n  margin-top: 20px;\n}\n\n.edit-button:hover,\n.save-button:hover,\n.cancel-button:hover,\n.auth-button:hover,\n.logout-button:hover {\n  opacity: 0.9;\n}\n\n.error-message {\n  color: #f44336;\n  margin-bottom: 10px;\n}\n\n.success-message {\n  color: #4CAF50;\n  margin-bottom: 10px;\n}\n\n.retry-button {\n  background-color: #2196F3;\n  color: white;\n  padding: 5px 10px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 12px;\n  transition: background-color 0.3s;\n}\n\n.retry-button:hover {\n  opacity: 0.9;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}