{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      orders: [] // 订单列表\n    };\n  },\n  mounted() {\n    this.fetchOrders(); // 加载订单\n  },\n  methods: {\n    async fetchOrders() {\n      try {\n        const response = await axios.get('http://localhost:3000/api/auth/canteen/orders');\n        this.orders = response.data;\n      } catch (error) {\n        console.error('获取订单失败:', error);\n      }\n    },\n    async updateStatus(orderId, status) {\n      try {\n        console.log('正在更新订单状态:', orderId, status); // 添加调试输出\n        await axios.put(`http://localhost:3000/api/auth/canteen/orders/${orderId}/status`, {\n          status\n        }, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('authToken')}` // 确保 token 正确\n          }\n        });\n        this.fetchOrders(); // 刷新订单列表\n        alert('订单状态已更新');\n      } catch (error) {\n        console.error('更新订单状态失败:', error); // 打印完整错误信息\n        alert('更新订单状态失败，请稍后重试。');\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","orders","mounted","fetchOrders","methods","response","get","error","console","updateStatus","orderId","status","log","put","headers","Authorization","localStorage","getItem","alert"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\OrderManagement.vue"],"sourcesContent":["<template>\r\n    <div class=\"order-management\">\r\n        <h2>订单管理</h2>\r\n\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>用户</th>\r\n                    <th>菜品</th>\r\n                    <th>数量</th>\r\n                    <th>总价</th>\r\n                    <th>状态</th>\r\n                    <th>操作</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr v-for=\"order in orders\" :key=\"order.id\">\r\n                    <td>{{ order.username }}</td>\r\n                    <td>{{ order.menu_item_name }}</td>\r\n                    <td>{{ order.quantity }}</td>\r\n                    <td>{{ order.total_price }} 元</td>\r\n                    <td>{{ order.status }}</td>\r\n                    <td>\r\n                        <button v-if=\"order.status === 'pending'\" @click=\"updateStatus(order.id, 'confirmed')\">确认</button>\r\n                        <button v-if=\"order.status === 'confirmed'\" @click=\"updateStatus(order.id, 'completed')\">完成</button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      orders: [] // 订单列表\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchOrders(); // 加载订单\r\n  },\r\n  methods: {\r\n    async fetchOrders() {\r\n      try {\r\n        const response = await axios.get('http://localhost:3000/api/auth/canteen/orders');\r\n        this.orders = response.data;\r\n      } catch (error) {\r\n        console.error('获取订单失败:', error);\r\n      }\r\n    },\r\n    async updateStatus(orderId, status) {\r\n      try {\r\n        console.log('正在更新订单状态:', orderId, status); // 添加调试输出\r\n        await axios.put(`http://localhost:3000/api/auth/canteen/orders/${orderId}/status`, \r\n          { status }, \r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${localStorage.getItem('authToken')}` // 确保 token 正确\r\n            }\r\n          }\r\n        );\r\n        this.fetchOrders(); // 刷新订单列表\r\n        alert('订单状态已更新');\r\n      } catch (error) {\r\n        console.error('更新订单状态失败:', error); // 打印完整错误信息\r\n        alert('更新订单状态失败，请稍后重试。');\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.order-management {\r\n    padding: 20px;\r\n}\r\n\r\ntable {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    margin-top: 20px;\r\n}\r\n\r\nth,\r\ntd {\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    text-align: center;\r\n}\r\n\r\nbutton {\r\n    margin-right: 10px;\r\n    padding: 5px;\r\n    background-color: #4CAF50;\r\n    color: white;\r\n    border: none;\r\n    cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n    background-color: #45a049;\r\n}\r\n</style>\r\n"],"mappings":"AAiCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAC,CAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,WAAW,CAAC,CAAC,EAAE;EACtB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMN,KAAK,CAACO,GAAG,CAAC,+CAA+C,CAAC;QACjF,IAAI,CAACL,MAAK,GAAII,QAAQ,CAACL,IAAI;MAC7B,EAAE,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;MACjC;IACF,CAAC;IACD,MAAME,YAAYA,CAACC,OAAO,EAAEC,MAAM,EAAE;MAClC,IAAI;QACFH,OAAO,CAACI,GAAG,CAAC,WAAW,EAAEF,OAAO,EAAEC,MAAM,CAAC,EAAE;QAC3C,MAAMZ,KAAK,CAACc,GAAG,CAAC,iDAAiDH,OAAO,SAAS,EAC/E;UAAEC;QAAO,CAAC,EACV;UACEG,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,EAAC,CAAE;UAC/D;QACF,CACF,CAAC;QACD,IAAI,CAACd,WAAW,CAAC,CAAC,EAAE;QACpBe,KAAK,CAAC,SAAS,CAAC;MAClB,EAAE,OAAOX,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC,EAAE;QACnCW,KAAK,CAAC,iBAAiB,CAAC;MAC1B;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}