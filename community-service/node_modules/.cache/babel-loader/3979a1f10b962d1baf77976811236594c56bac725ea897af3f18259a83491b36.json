{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"order-management\"\n};\nconst _hoisted_2 = {\n  class: \"header\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = {\n  key: 1\n};\nconst _hoisted_8 = {\n  key: 2,\n  class: \"dialog-overlay\"\n};\nconst _hoisted_9 = {\n  class: \"dialog\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    class: \"back-button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.goBack && $options.goBack(...args))\n  }, _cache[2] || (_cache[2] = [_createElementVNode(\"i\", {\n    class: \"el-icon-arrow-left\"\n  }, null, -1 /* HOISTED */), _createTextVNode(\" 返回 \")])), _cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"订单管理\", -1 /* HOISTED */))]), $data.orders.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"table\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"订单 ID\"), _createElementVNode(\"th\", null, \"用户\"), _createElementVNode(\"th\", null, \"邮箱\"), _createElementVNode(\"th\", null, \"总价格\"), _createElementVNode(\"th\", null, \"创建时间\"), _createElementVNode(\"th\", null, \"状态\"), _createElementVNode(\"th\", null, \"详细内容\"), _createElementVNode(\"th\", null, \"操作\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.orders, order => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: order.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(order.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.username), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.email), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.total_price) + \" 元\", 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatDate(order.created_at)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.status), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(order.items, item => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: item.menu_item_id\n      }, _toDisplayString(item.name) + \" (\" + _toDisplayString(item.quantity) + \"): \" + _toDisplayString(item.total) + \" 元 \", 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"td\", null, [order.status === 'pending' ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      onClick: $event => $options.handleButtonClick(order, 'confirmed')\n    }, \"确定订单\", 8 /* PROPS */, _hoisted_4)) : _createCommentVNode(\"v-if\", true), order.status === 'confirmed' ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 1,\n      onClick: $event => $options.handleButtonClick(order, 'completed')\n    }, \"完成订单\", 8 /* PROPS */, _hoisted_5)) : _createCommentVNode(\"v-if\", true), order.status === 'completed' ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 2,\n      onClick: $event => $options.handleButtonClick(order, 'deleted')\n    }, \"删除订单\", 8 /* PROPS */, _hoisted_6)) : _createCommentVNode(\"v-if\", true)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _cache[5] || (_cache[5] = [_createElementVNode(\"p\", null, \"没有找到订单。\", -1 /* HOISTED */)]))), _createCommentVNode(\" 对话框 \"), $data.showDialog ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"p\", null, _toDisplayString($data.dialogMessage), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.closeDialog && $options.closeDialog(...args))\n  }, \"确定\")])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","args","$options","goBack","_createTextVNode","$data","orders","length","_hoisted_3","_Fragment","_renderList","order","id","_toDisplayString","username","email","total_price","formatDate","created_at","status","items","item","menu_item_id","name","quantity","total","$event","handleButtonClick","_hoisted_4","_createCommentVNode","_hoisted_5","_hoisted_6","_hoisted_7","showDialog","_hoisted_8","_hoisted_9","dialogMessage","closeDialog"],"sources":["C:\\Users\\拯救者\\Desktop\\text\\community-service\\src\\components\\OrderManagement.vue"],"sourcesContent":["<template>\n    <div class=\"order-management\">\n      <div class=\"header\">\n        <button class=\"back-button\" @click=\"goBack\">\n          <i class=\"el-icon-arrow-left\"></i> 返回\n        </button>\n        <h2>订单管理</h2>\n      </div>\n  \n      <div v-if=\"orders.length > 0\">\n        <table>\n          <thead>\n            <tr>\n              <th>订单 ID</th>\n              <th>用户</th>\n              <th>邮箱</th>\n              <th>总价格</th>\n              <th>创建时间</th>\n              <th>状态</th>\n              <th>详细内容</th>\n              <th>操作</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"order in orders\" :key=\"order.id\">\n              <td>{{ order.id }}</td>\n              <td>{{ order.username }}</td>\n              <td>{{ order.email }}</td>\n              <td>{{ order.total_price }} 元</td>\n              <td>{{ formatDate(order.created_at) }}</td>\n              <td>{{ order.status }}</td>\n              <td>\n                <ul>\n                  <li v-for=\"item in order.items\" :key=\"item.menu_item_id\">\n                    {{ item.name }} ({{ item.quantity }}): {{ item.total }} 元\n                  </li>\n                </ul>\n              </td>\n              <td>\n                <button \n                  v-if=\"order.status === 'pending'\" \n                  @click=\"handleButtonClick(order, 'confirmed')\"\n                >确定订单</button>\n  \n                <button \n                  v-if=\"order.status === 'confirmed'\" \n                  @click=\"handleButtonClick(order, 'completed')\"\n                >完成订单</button>\n  \n                <button \n                  v-if=\"order.status === 'completed'\" \n                  @click=\"handleButtonClick(order, 'deleted')\"\n                >删除订单</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n  \n      <div v-else>\n        <p>没有找到订单。</p>\n      </div>\n\n      <!-- 对话框 -->\n      <div v-if=\"showDialog\" class=\"dialog-overlay\">\n        <div class=\"dialog\">\n          <p>{{ dialogMessage }}</p>\n          <button @click=\"closeDialog\">确定</button>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  const API = process.env.VUE_APP_API_URL;\n\n  export default {\n    data() {\n      return {\n        orders: [], // 存储所有订单信息\n        showDialog: false,\n        dialogMessage: '',\n        lastActionTime: 0 // 记录上一次操作的时间戳\n      };\n    },\n    mounted() {\n      this.fetchOrders(); // 加载所有订单\n    },\n    methods: {\n      async fetchOrders() {\n        try {\n          const response = await axios.get(`${API}/canteen/orders`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('authToken')}`\n            }\n          });\n          this.orders = response.data.map(order => ({ ...order, lastActionTime: 0 })); // 为每个订单添加一个lastActionTime属性\n        //   console.log('Fetched Orders:', JSON.stringify(this.orders, null, 2)); // 打印获取到的订单数据\n        } catch (error) {\n          console.error('获取订单列表失败:', error);\n          alert('获取订单列表失败，请重试。');\n        }\n      },\n      handleButtonClick(order, newStatus) {\n        const currentTime = Date.now();\n        const timeElapsed = currentTime - order.lastActionTime;\n        const delay = 2 * 60 * 1000; // 2分钟\n  \n        if (timeElapsed < delay) {\n          // 弹出对话框提示操作太频繁\n          this.dialogMessage = '操作太频繁，请稍后再试';\n          this.showDialog = true;\n          return;\n        }\n  \n        const actionFn = async () => {\n          try {\n            if (newStatus === 'deleted') {\n              await this.deleteOrder(order.id);\n            } else {\n              await this.updateOrderStatus(order, newStatus);\n            }\n          } catch (error) {\n            console.error('操作失败:', error);\n          }\n        };\n  \n        order.lastActionTime = currentTime; // 更新订单的上一次操作时间\n        actionFn();\n      },\n      async updateOrderStatus(order, status) {\n        try {\n          await axios.put(\n            `${API}/canteen/orders/${order.id}`, \n            { status }, \n            {\n              headers: {\n                Authorization: `Bearer ${localStorage.getItem('authToken')}`\n              }\n            }\n          );\n          alert('订单状态已更新');\n          order.status = status; // 更新本地状态以避免重新获取\n        } catch (error) {\n          console.error('更新订单状态失败:', error);\n          alert('更新订单状态失败，请重试。');\n        }\n      },\n      async deleteOrder(orderId) {\n        try {\n          await axios.delete(`${API}/canteen/orders/${orderId}`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('authToken')}`\n            }\n          });\n          alert('订单已删除');\n          this.orders = this.orders.filter(order => order.id !== orderId); // 更新本地订单列表\n        } catch (error) {\n          console.error('删除订单失败:', error);\n          alert('删除订单失败，请重试。');\n        }\n      },\n      closeDialog() {\n        this.showDialog = false;\n        this.dialogMessage = '';\n      },\n      formatDate(dateString) {\n        const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n        return new Date(dateString).toLocaleDateString('zh-CN', options);\n      },\n      goBack() {\n        this.$router.go(-1);\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .order-management {\n    padding: 20px;\n    padding-bottom: 80px;\n    max-width: 1200px;\n    margin: 0 auto;\n    min-height: calc(100vh - 100px);\n  }\n\n  .header {\n    display: flex;\n    align-items: center;\n    margin-bottom: 20px;\n    position: relative;\n  }\n\n  .back-button {\n    position: absolute;\n    left: 0;\n    padding: 8px 15px;\n    background-color: #f5f5f5;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    font-size: 14px;\n  }\n\n  .back-button:hover {\n    background-color: #e8e8e8;\n  }\n\n  h2 {\n    margin: 0 auto;\n    text-align: center;\n  }\n\n  table {\n    width: 100%;\n    border-collapse: collapse;\n  }\n  th, td {\n    border: 1px solid #ddd;\n    padding: 8px;\n  }\n  th {\n    background-color: #f2f2f2;\n  }\n  button {\n    background-color: #4CAF50;\n    color: white;\n    border: none;\n    padding: 5px 10px;\n    cursor: pointer;\n    border-radius: 3px;\n    margin-right: 5px;\n  }\n  button[disabled] {\n    background-color: #ddd;\n    cursor: not-allowed;\n  }\n  button:hover:not([disabled]) {\n    background-color: #45a049;\n  }\n  .dialog-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.5);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .dialog {\n    background: white;\n    padding: 20px;\n    border-radius: 8px;\n    text-align: center;\n  }\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}